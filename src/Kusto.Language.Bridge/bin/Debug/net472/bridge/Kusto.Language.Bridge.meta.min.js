Bridge.assembly("Kusto.Language.Bridge",function($asm,globals){"use strict";var $m=Bridge.setMetadata,$n=["System.Collections.Generic","Kusto.Language.Symbols","System","Kusto.Language.Syntax","Kusto.Language","Kusto.Language.Utils","Kusto.Language.Parsing","Kusto.Language.Binding","Kusto.Language.Editor","System.Text"];$m("Kusto.Language.Aggregates",function(){return{att:1048961,a:2,s:!0,m:[{a:1,n:"AddPercentileColumns",is:!0,t:8,pi:[{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:0},{n:"signature",pt:$n[1].Signature,ps:1},{n:"valueParameterName",pt:$n[2].String,ps:2},{n:"percentileParameterName",pt:$n[2].String,ps:3},{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:4}],sn:"AddPercentileColumns",rt:$n[2].Void,p:[$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[1].Signature,$n[2].String,$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression)]},{a:2,n:"GetAnyResult",is:!0,t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0},{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"unnamedExpressionPrefix",pt:$n[2].String,ps:2}],sn:"GetAnyResult",rt:$n[1].TypeSymbol,p:[$n[1].TableSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[2].String]},{a:1,n:"GetArgMinMaxDepResult",is:!0,t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0},{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1}],sn:"GetArgMinMaxDepResult",rt:$n[1].TypeSymbol,p:[$n[1].TableSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression)]},{a:1,n:"GetArgMinMaxResult",is:!0,t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0},{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"prefix",pt:$n[2].String,ps:2}],sn:"GetArgMinMaxResult",rt:$n[1].TypeSymbol,p:[$n[1].TableSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[2].String]},{a:1,n:"GetResultColumn",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"GetResultColumn",rt:$n[1].ColumnSymbol,p:[$n[3].Expression]},{a:1,n:"IsConversionFunction",is:!0,t:8,pi:[{n:"fn",pt:$n[1].FunctionSymbol,ps:0}],sn:"IsConversionFunction",rt:$n[2].Boolean,p:[$n[1].FunctionSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsConversionFunction",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"IsConversionFunction$1",rt:$n[2].Boolean,p:[$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"All",is:!0,t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),g:{a:2,n:"get_All",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),fg:"All",is:!0},fn:"All"},{a:2,n:"Any",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Any",ro:!0},{a:2,n:"AnyIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"AnyIf",ro:!0},{a:2,n:"ArgMax",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArgMax",ro:!0},{a:2,n:"ArgMax_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArgMax_Depricated",ro:!0},{a:2,n:"ArgMin",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArgMin",ro:!0},{a:2,n:"ArgMin_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArgMin_Depricated",ro:!0},{a:2,n:"Avg",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Avg",ro:!0},{a:2,n:"AvgIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"AvgIf",ro:!0},{a:2,n:"BinaryAllAnd",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinaryAllAnd",ro:!0},{a:2,n:"BinaryAllOr",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinaryAllOr",ro:!0},{a:2,n:"BinaryAllXor",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinaryAllXor",ro:!0},{a:2,n:"BuildSchema",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BuildSchema",ro:!0},{a:2,n:"Cnt",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Cnt",ro:!0},{a:2,n:"Count",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Count",ro:!0},{a:2,n:"CountIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CountIf",ro:!0},{a:2,n:"DCount",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DCount",ro:!0},{a:2,n:"DCountIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DCountIf",ro:!0},{a:2,n:"Hll",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Hll",ro:!0},{a:2,n:"HllMerge",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HllMerge",ro:!0},{a:2,n:"MakeBag",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeBag",ro:!0},{a:2,n:"MakeBagIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeBagIf",ro:!0},{a:2,n:"MakeDictionary",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeDictionary",ro:!0},{a:2,n:"MakeList",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeList",ro:!0},{a:2,n:"MakeListIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeListIf",ro:!0},{a:2,n:"MakeListWithNulls",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeListWithNulls",ro:!0},{a:2,n:"MakeList_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeList_Depricated",ro:!0},{a:2,n:"MakeSet",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeSet",ro:!0},{a:2,n:"MakeSetIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeSetIf",ro:!0},{a:2,n:"MakeSet_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeSet_Depricated",ro:!0},{a:2,n:"Max",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Max",ro:!0},{a:2,n:"MaxIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MaxIf",ro:!0},{a:2,n:"MergeTDigests",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MergeTDigests",ro:!0},{a:2,n:"Min",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Min",ro:!0},{a:2,n:"MinIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MinIf",ro:!0},{a:2,n:"Passthrough",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Passthrough",ro:!0},{a:2,n:"Percentile",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Percentile",ro:!0},{a:1,n:"PercentileArrayReturn",is:!0,t:4,rt:Function,sn:"PercentileArrayReturn"},{a:1,n:"PercentileReturn",is:!0,t:4,rt:Function,sn:"PercentileReturn"},{a:2,n:"PercentileW",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PercentileW",ro:!0},{a:2,n:"Percentiles",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Percentiles",ro:!0},{a:2,n:"PercentilesArray",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PercentilesArray",ro:!0},{a:2,n:"PercentilesW",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PercentilesW",ro:!0},{a:2,n:"PercentilesWArray",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PercentilesWArray",ro:!0},{a:2,n:"Stdev",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Stdev",ro:!0},{a:2,n:"StdevIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"StdevIf",ro:!0},{a:2,n:"Stdevp",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Stdevp",ro:!0},{a:2,n:"Sum",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Sum",ro:!0},{a:2,n:"SumIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SumIf",ro:!0},{a:2,n:"TDigest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"TDigest",ro:!0},{a:2,n:"TDigestMerge",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"TDigestMerge",ro:!0},{a:2,n:"TakeAny",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"TakeAny",ro:!0},{a:2,n:"TakeAnyIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"TakeAnyIf",ro:!0},{a:2,n:"Variance",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Variance",ro:!0},{a:2,n:"VarianceIf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"VarianceIf",ro:!0},{a:2,n:"Variancep",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Variancep",ro:!0},{a:1,n:"__Property__Initializer__All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"__Property__Initializer__All"},{a:1,backing:!0,n:"<All>k__BackingField",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"All"}]}},$n);$m("Kusto.Language.AriaBridgeCommands",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"All",is:!0,t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),g:{a:2,n:"get_All",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),fg:"All",is:!0},fn:"All"},{a:1,n:"__Property__Initializer__All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"__Property__Initializer__All"},{a:1,backing:!0,n:"<All>k__BackingField",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"All"}]}},$n);$m("Kusto.Language.ClusterManagerCommands",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"All",is:!0,t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),g:{a:2,n:"get_All",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),fg:"All",is:!0},fn:"All"},{a:1,n:"__Property__Initializer__All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"__Property__Initializer__All"},{a:1,backing:!0,n:"<All>k__BackingField",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"All"}]}},$n);$m("Kusto.Language.DataManagerCommands",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"All",is:!0,t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),g:{a:2,n:"get_All",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),fg:"All",is:!0},fn:"All"},{a:1,n:"__Property__Initializer__All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"__Property__Initializer__All"},{a:1,backing:!0,n:"<All>k__BackingField",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"All"}]}},$n);$m("Kusto.Language.Diagnostic",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String],pi:[{n:"code",pt:$n[2].String,ps:0},{n:"message",pt:$n[2].String,ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[2].String,$n[2].String],pi:[{n:"code",pt:$n[2].String,ps:0},{n:"category",pt:$n[2].String,ps:1},{n:"severity",pt:$n[2].String,ps:2},{n:"description",pt:$n[2].String,ps:3}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[2].String,$n[2].String,$n[2].String],pi:[{n:"code",pt:$n[2].String,ps:0},{n:"category",pt:$n[2].String,ps:1},{n:"severity",pt:$n[2].String,ps:2},{n:"description",pt:$n[2].String,ps:3},{n:"message",pt:$n[2].String,ps:4}],sn:"$ctor2"},{a:1,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[2].String,$n[2].String,$n[2].String,$n[2].Int32,$n[2].Int32],pi:[{n:"code",pt:$n[2].String,ps:0},{n:"category",pt:$n[2].String,ps:1},{n:"severity",pt:$n[2].String,ps:2},{n:"description",pt:$n[2].String,ps:3},{n:"message",pt:$n[2].String,ps:4},{n:"start",pt:$n[2].Int32,ps:5},{n:"length",pt:$n[2].Int32,ps:6}],sn:"$ctor3"},{a:1,n:"With",t:8,pi:[{n:"code",dv:null,o:!0,pt:$n[2].String,ps:0},{n:"category",dv:null,o:!0,pt:$n[2].String,ps:1},{n:"severity",dv:null,o:!0,pt:$n[2].String,ps:2},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:3},{n:"message",dv:null,o:!0,pt:$n[2].String,ps:4},{n:"start",dv:-1,o:!0,pt:$n[2].Int32,ps:5},{n:"length",dv:-1,o:!0,pt:$n[2].Int32,ps:6}],sn:"With",rt:$n[4].Diagnostic,p:[$n[2].String,$n[2].String,$n[2].String,$n[2].String,$n[2].String,$n[2].Int32,$n[2].Int32]},{a:2,n:"WithCategory",t:8,pi:[{n:"category",pt:$n[2].String,ps:0}],sn:"WithCategory",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"WithCode",t:8,pi:[{n:"code",pt:$n[2].String,ps:0}],sn:"WithCode",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"WithLocation",t:8,pi:[{n:"location",pt:$n[3].SyntaxElement,ps:0}],sn:"WithLocation",rt:$n[4].Diagnostic,p:[$n[3].SyntaxElement]},{a:2,n:"WithLocation",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"WithLocation$1",rt:$n[4].Diagnostic,p:[$n[2].Int32,$n[2].Int32]},{a:2,n:"WithMessage",t:8,pi:[{n:"message",pt:$n[2].String,ps:0}],sn:"WithMessage",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"WithSeverity",t:8,pi:[{n:"severity",pt:$n[2].String,ps:0}],sn:"WithSeverity",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"Category",t:16,rt:$n[2].String,g:{a:2,n:"get_Category",t:8,rt:$n[2].String,fg:"Category"},fn:"Category"},{a:2,n:"Code",t:16,rt:$n[2].String,g:{a:2,n:"get_Code",t:8,rt:$n[2].String,fg:"Code"},fn:"Code"},{a:2,n:"Description",t:16,rt:$n[2].String,g:{a:2,n:"get_Description",t:8,rt:$n[2].String,fg:"Description"},fn:"Description"},{a:2,n:"End",t:16,rt:$n[2].Int32,g:{a:2,n:"get_End",t:8,rt:$n[2].Int32,fg:"End",box:function($v){return Bridge.box($v,System.Int32)}},fn:"End"},{a:2,n:"HasLocation",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasLocation",t:8,rt:$n[2].Boolean,fg:"HasLocation",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasLocation"},{a:2,n:"Length",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Length",t:8,rt:$n[2].Int32,fg:"Length",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Length"},{a:2,n:"Message",t:16,rt:$n[2].String,g:{a:2,n:"get_Message",t:8,rt:$n[2].String,fg:"Message"},fn:"Message"},{a:2,n:"Severity",t:16,rt:$n[2].String,g:{a:2,n:"get_Severity",t:8,rt:$n[2].String,fg:"Severity"},fn:"Severity"},{a:2,n:"Start",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Start",t:8,rt:$n[2].Int32,fg:"Start",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Start"},{a:2,n:"NoDiagnostics",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"NoDiagnostics"},{a:1,n:"length",t:4,rt:$n[2].Int32,sn:"length",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"start",t:4,rt:$n[2].Int32,sn:"start",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Category>k__BackingField",t:4,rt:$n[2].String,sn:"Category"},{a:1,backing:!0,n:"<Code>k__BackingField",t:4,rt:$n[2].String,sn:"Code"},{a:1,backing:!0,n:"<Description>k__BackingField",t:4,rt:$n[2].String,sn:"Description"},{a:1,backing:!0,n:"<Message>k__BackingField",t:4,rt:$n[2].String,sn:"Message"},{a:1,backing:!0,n:"<Severity>k__BackingField",t:4,rt:$n[2].String,sn:"Severity"}]}},$n);$m("Kusto.Language.DiagnosticCategory",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Correctness",is:!0,t:4,rt:$n[2].String,sn:"Correctness"},{a:2,n:"General",is:!0,t:4,rt:$n[2].String,sn:"General"},{a:2,n:"Performance",is:!0,t:4,rt:$n[2].String,sn:"Performance"}]}},$n);$m("Kusto.Language.DiagnosticSeverity",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Error",is:!0,t:4,rt:$n[2].String,sn:"Error"},{a:2,n:"Hidden",is:!0,t:4,rt:$n[2].String,sn:"Hidden"},{a:2,n:"Information",is:!0,t:4,rt:$n[2].String,sn:"Information"},{a:2,n:"Suggestion",is:!0,t:4,rt:$n[2].String,sn:"Suggestion"},{a:2,n:"Warning",is:!0,t:4,rt:$n[2].String,sn:"Warning"}]}},$n);$m("Kusto.Language.DiagnosticFacts",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"AnalysisFailure",is:!0,t:8,pi:[{n:"analyzerName",pt:$n[2].String,ps:0},{n:"message",pt:$n[2].String,ps:1}],sn:"AnalysisFailure",rt:$n[4].Diagnostic,p:[$n[2].String,$n[2].String]},{a:2,n:"GetAggregateFunctionNotDefined",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetAggregateFunctionNotDefined",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetAggregateNotAllowedInThisContext",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetAggregateNotAllowedInThisContext",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetArgumentCountExpected",is:!0,t:8,pi:[{n:"count",pt:$n[2].Int32,ps:0}],sn:"GetArgumentCountExpected",rt:$n[4].Diagnostic,p:[$n[2].Int32]},{a:2,n:"GetClusterExpected",is:!0,t:8,sn:"GetClusterExpected",rt:$n[4].Diagnostic},{a:2,n:"GetColumnExpected",is:!0,t:8,sn:"GetColumnExpected",rt:$n[4].Diagnostic},{a:2,n:"GetColumnMustExistOnBothSidesOfJoin",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetColumnMustExistOnBothSidesOfJoin",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetCompoundNamedArgumentsNotSupported",is:!0,t:8,sn:"GetCompoundNamedArgumentsNotSupported",rt:$n[4].Diagnostic},{a:2,n:"GetDatabaseExpected",is:!0,t:8,sn:"GetDatabaseExpected",rt:$n[4].Diagnostic},{a:2,n:"GetDefaultValueExpected",is:!0,t:8,sn:"GetDefaultValueExpected",rt:$n[4].Diagnostic},{a:2,n:"GetDuplicateColumnDeclaration",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetDuplicateColumnDeclaration",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetErrorInExpansion",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"errors",pt:$n[2].String,ps:1}],sn:"GetErrorInExpansion",rt:$n[4].Diagnostic,p:[$n[2].String,$n[2].String]},{a:2,n:"GetExpressionMustBeConstant",is:!0,t:8,sn:"GetExpressionMustBeConstant",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustBeConstantOrIdentifier",is:!0,t:8,sn:"GetExpressionMustBeConstantOrIdentifier",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustBeInteger",is:!0,t:8,sn:"GetExpressionMustBeInteger",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustBeIntegerOrDynamic",is:!0,t:8,sn:"GetExpressionMustBeIntegerOrDynamic",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustBeLiteral",is:!0,t:8,sn:"GetExpressionMustBeLiteral",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustBeLiteralScalarValue",is:!0,t:8,sn:"GetExpressionMustBeLiteralScalarValue",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustBeNumeric",is:!0,t:8,sn:"GetExpressionMustBeNumeric",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustBeOrderable",is:!0,t:8,sn:"GetExpressionMustBeOrderable",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustBeRealOrDecimal",is:!0,t:8,sn:"GetExpressionMustBeRealOrDecimal",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustBeSummable",is:!0,t:8,sn:"GetExpressionMustBeSummable",rt:$n[4].Diagnostic},{a:2,n:"GetExpressionMustHaveType",is:!0,t:8,pi:[{n:"types",ip:!0,pt:System.Array.type(System.Object),ps:0}],tpc:1,tprm:["S"],sn:"GetExpressionMustHaveType",rt:$n[4].Diagnostic,p:[System.Array.type(System.Object)]},{a:2,n:"GetExpressionMustHaveType",is:!0,t:8,pi:[{n:"types",pt:$n[0].IReadOnlyList$1(System.Object),ps:0}],tpc:1,tprm:["S"],sn:"GetExpressionMustHaveType$1",rt:$n[4].Diagnostic,p:[$n[0].IReadOnlyList$1(System.Object)]},{a:2,n:"GetExpressionMustHaveValue",is:!0,t:8,pi:[{n:"values",pt:$n[0].IReadOnlyList$1(System.Object),ps:0}],tpc:1,tprm:["T"],sn:"GetExpressionMustHaveValue$1",rt:$n[4].Diagnostic,p:[$n[0].IReadOnlyList$1(System.Object)]},{a:2,n:"GetExpressionMustHaveValue",is:!0,t:8,pi:[{n:"values",ip:!0,pt:System.Array.type(System.Object),ps:0}],tpc:1,tprm:["T"],sn:"GetExpressionMustHaveValue",rt:$n[4].Diagnostic,p:[System.Array.type(System.Object)]},{a:2,n:"GetExpressionMustNotBeEmpty",is:!0,t:8,sn:"GetExpressionMustNotBeEmpty",rt:$n[4].Diagnostic},{a:2,n:"GetFunctionExpectsArgumentCountExact",is:!0,t:8,pi:[{n:"functionName",pt:$n[2].String,ps:0},{n:"count",pt:$n[2].Int32,ps:1}],sn:"GetFunctionExpectsArgumentCountExact",rt:$n[4].Diagnostic,p:[$n[2].String,$n[2].Int32]},{a:2,n:"GetFunctionExpectsArgumentCountRange",is:!0,t:8,pi:[{n:"functionName",pt:$n[2].String,ps:0},{n:"min",pt:$n[2].Int32,ps:1},{n:"max",pt:$n[2].Int32,ps:2}],sn:"GetFunctionExpectsArgumentCountRange",rt:$n[4].Diagnostic,p:[$n[2].String,$n[2].Int32,$n[2].Int32]},{a:2,n:"GetFunctionHasIncorrectNumberOfArguments",is:!0,t:8,sn:"GetFunctionHasIncorrectNumberOfArguments",rt:$n[4].Diagnostic},{a:2,n:"GetFunctionNotDefined",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetFunctionNotDefined",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetFunctionNotDefinedWithMatchingParameters",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),ps:1}],sn:"GetFunctionNotDefinedWithMatchingParameters",rt:$n[4].Diagnostic,p:[$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol)]},{a:2,n:"GetFunctionRequiresArgumentList",is:!0,t:8,pi:[{n:"functionName",pt:$n[2].String,ps:0}],sn:"GetFunctionRequiresArgumentList",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetFuzzyUnionOperandNotDefined",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetFuzzyUnionOperandNotDefined",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetIdentifierNameOnly",is:!0,t:8,sn:"GetIdentifierNameOnly",rt:$n[4].Diagnostic},{a:2,n:"GetIncompleteFragment",is:!0,t:8,sn:"GetIncompleteFragment",rt:$n[4].Diagnostic},{a:2,n:"GetIncorrectNumberOfDataValues",is:!0,t:8,pi:[{n:"multiple",pt:$n[2].Int32,ps:0}],sn:"GetIncorrectNumberOfDataValues",rt:$n[4].Diagnostic,p:[$n[2].Int32]},{a:2,n:"GetInvalidColumnDeclaration",is:!0,t:8,sn:"GetInvalidColumnDeclaration",rt:$n[4].Diagnostic},{a:2,n:"GetInvalidJoinCondition",is:!0,t:8,sn:"GetInvalidJoinCondition",rt:$n[4].Diagnostic},{a:2,n:"GetInvalidJoinConditionOperand",is:!0,t:8,pi:[{n:"prefix",pt:$n[2].String,ps:0}],sn:"GetInvalidJoinConditionOperand",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetInvalidPatternPart",is:!0,t:8,sn:"GetInvalidPatternPart",rt:$n[4].Diagnostic},{a:2,n:"GetInvalidTypeExpression",is:!0,t:8,sn:"GetInvalidTypeExpression",rt:$n[4].Diagnostic},{a:2,n:"GetInvalidTypeName",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetInvalidTypeName",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetMalformedLiteral",is:!0,t:8,sn:"GetMalformedLiteral",rt:$n[4].Diagnostic},{a:2,n:"GetMalformedToken",is:!0,t:8,pi:[{n:"term",pt:$n[2].String,ps:0}],sn:"GetMalformedToken",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetMaterializedViewNameMustBeStringLiteral",is:!0,t:8,sn:"GetMaterializedViewNameMustBeStringLiteral",rt:$n[4].Diagnostic},{a:2,n:"GetMissingArgumentForParameter",is:!0,t:8,pi:[{n:"parameterName",pt:$n[2].String,ps:0}],sn:"GetMissingArgumentForParameter",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetMissingBoolean",is:!0,t:8,sn:"GetMissingBoolean",rt:$n[4].Diagnostic},{a:2,n:"GetMissingClause",is:!0,t:8,sn:"GetMissingClause",rt:$n[4].Diagnostic},{a:2,n:"GetMissingClause",is:!0,t:8,pi:[{n:"clauseName",pt:$n[2].String,ps:0}],sn:"GetMissingClause$1",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetMissingCommand",is:!0,t:8,sn:"GetMissingCommand",rt:$n[4].Diagnostic},{a:1,n:"GetMissingElement",is:!0,t:8,pi:[{n:"term",pt:$n[2].String,ps:0}],sn:"GetMissingElement",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetMissingExpression",is:!0,t:8,sn:"GetMissingExpression",rt:$n[4].Diagnostic},{a:2,n:"GetMissingFirstOrLast",is:!0,t:8,sn:"GetMissingFirstOrLast",rt:$n[4].Diagnostic},{a:2,n:"GetMissingFunctionCall",is:!0,t:8,sn:"GetMissingFunctionCall",rt:$n[4].Diagnostic},{a:2,n:"GetMissingFunctionDeclaration",is:!0,t:8,sn:"GetMissingFunctionDeclaration",rt:$n[4].Diagnostic},{a:2,n:"GetMissingJoinOnClause",is:!0,t:8,sn:"GetMissingJoinOnClause",rt:$n[4].Diagnostic},{a:2,n:"GetMissingJsonPair",is:!0,t:8,sn:"GetMissingJsonPair",rt:$n[4].Diagnostic},{a:2,n:"GetMissingJsonValue",is:!0,t:8,sn:"GetMissingJsonValue",rt:$n[4].Diagnostic},{a:2,n:"GetMissingName",is:!0,t:8,sn:"GetMissingName",rt:$n[4].Diagnostic},{a:2,n:"GetMissingNumber",is:!0,t:8,sn:"GetMissingNumber",rt:$n[4].Diagnostic},{a:2,n:"GetMissingParameter",is:!0,t:8,sn:"GetMissingParameter",rt:$n[4].Diagnostic},{a:2,n:"GetMissingPatternMatch",is:!0,t:8,sn:"GetMissingPatternMatch",rt:$n[4].Diagnostic},{a:2,n:"GetMissingSchemaDeclaration",is:!0,t:8,sn:"GetMissingSchemaDeclaration",rt:$n[4].Diagnostic},{a:2,n:"GetMissingStatement",is:!0,t:8,sn:"GetMissingStatement",rt:$n[4].Diagnostic},{a:2,n:"GetMissingString",is:!0,t:8,sn:"GetMissingString",rt:$n[4].Diagnostic},{a:2,n:"GetMissingText",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetMissingText",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetMissingTypeName",is:!0,t:8,sn:"GetMissingTypeName",rt:$n[4].Diagnostic},{a:2,n:"GetMissingTypeOfLiteral",is:!0,t:8,sn:"GetMissingTypeOfLiteral",rt:$n[4].Diagnostic},{a:2,n:"GetMissingValue",is:!0,t:8,sn:"GetMissingValue",rt:$n[4].Diagnostic},{a:2,n:"GetMultiValuedExpressionCannotBeAssignedToVariable",is:!0,t:8,sn:"GetMultiValuedExpressionCannotBeAssignedToVariable",rt:$n[4].Diagnostic},{a:2,n:"GetNameDoesNotReferToAnyKnownCluster",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetNameDoesNotReferToAnyKnownCluster",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetNameDoesNotReferToAnyKnownDatabase",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetNameDoesNotReferToAnyKnownDatabase",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetNameDoesNotReferToAnyKnownExternalTable",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetNameDoesNotReferToAnyKnownExternalTable",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetNameDoesNotReferToAnyKnownItem",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetNameDoesNotReferToAnyKnownItem",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetNameDoesNotReferToAnyKnownMaterializedView",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetNameDoesNotReferToAnyKnownMaterializedView",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetNameDoesNotReferToAnyKnownTable",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetNameDoesNotReferToAnyKnownTable",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetNameDoesNotReferToTable",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetNameDoesNotReferToTable",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetNameIsNotAFunction",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetNameIsNotAFunction",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetNameRefersToMoreThanOneItem",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetNameRefersToMoreThanOneItem",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetNamedArgumentsNotSupported",is:!0,t:8,sn:"GetNamedArgumentsNotSupported",rt:$n[4].Diagnostic},{a:2,n:"GetNoColumnsInScope",is:!0,t:8,sn:"GetNoColumnsInScope",rt:$n[4].Diagnostic},{a:2,n:"GetNoPatternMatchesArguments",is:!0,t:8,sn:"GetNoPatternMatchesArguments",rt:$n[4].Diagnostic},{a:2,n:"GetOperatorNotDefined",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"argumentTypes",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.TypeSymbol),ps:1}],sn:"GetOperatorNotDefined",rt:$n[4].Diagnostic,p:[$n[2].String,System.Array.type(Kusto.Language.Symbols.TypeSymbol)]},{a:2,n:"GetOperatorNotDefined",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:1}],sn:"GetOperatorNotDefined$1",rt:$n[4].Diagnostic,p:[$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:2,n:"GetPackMustBeLastItemInList",is:!0,t:8,sn:"GetPackMustBeLastItemInList",rt:$n[4].Diagnostic},{a:2,n:"GetParameterAlreadySpecified",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetParameterAlreadySpecified",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetParsePatternMustStartWithColumnNameOrStar",is:!0,t:8,sn:"GetParsePatternMustStartWithColumnNameOrStar",rt:$n[4].Diagnostic},{a:2,n:"GetParsePatternNameDoesNotFollowStringLiteral",is:!0,t:8,sn:"GetParsePatternNameDoesNotFollowStringLiteral",rt:$n[4].Diagnostic},{a:2,n:"GetParsePatternStringLiteralMustFollowStar",is:!0,t:8,sn:"GetParsePatternStringLiteralMustFollowStar",rt:$n[4].Diagnostic},{a:2,n:"GetParsePatternUsingStarAfterStringColumnIsAmbiguous",is:!0,t:8,sn:"GetParsePatternUsingStarAfterStringColumnIsAmbiguous",rt:$n[4].Diagnostic},{a:2,n:"GetPathValueExpected",is:!0,t:8,sn:"GetPathValueExpected",rt:$n[4].Diagnostic},{a:2,n:"GetPathValueWithNoPathParameter",is:!0,t:8,sn:"GetPathValueWithNoPathParameter",rt:$n[4].Diagnostic},{a:2,n:"GetPlugInFunctionIsNotEnabled",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetPlugInFunctionIsNotEnabled",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetPlugInFunctionNotDefined",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetPlugInFunctionNotDefined",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetPluginNotAllowedInThisContext",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetPluginNotAllowedInThisContext",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetQueryOperatorCannotBeFirst",is:!0,t:8,sn:"GetQueryOperatorCannotBeFirst",rt:$n[4].Diagnostic},{a:2,n:"GetQueryOperatorExpected",is:!0,t:8,sn:"GetQueryOperatorExpected",rt:$n[4].Diagnostic},{a:2,n:"GetQueryOperatorMustBeFirst",is:!0,t:8,sn:"GetQueryOperatorMustBeFirst",rt:$n[4].Diagnostic},{a:2,n:"GetQueryOperatorNotAllowedInContext",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetQueryOperatorNotAllowedInContext",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetRenameAssignmentExpected",is:!0,t:8,sn:"GetRenameAssignmentExpected",rt:$n[4].Diagnostic},{a:2,n:"GetScalarFunctionNotDefined",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetScalarFunctionNotDefined",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetScalarTypeExpected",is:!0,t:8,sn:"GetScalarTypeExpected",rt:$n[4].Diagnostic},{a:2,n:"GetSingleColumnTableExpected",is:!0,t:8,sn:"GetSingleColumnTableExpected",rt:$n[4].Diagnostic},{a:2,n:"GetStarExpressionMustBeLastArgument",is:!0,t:8,sn:"GetStarExpressionMustBeLastArgument",rt:$n[4].Diagnostic},{a:2,n:"GetStarExpressionNotAllowed",is:!0,t:8,sn:"GetStarExpressionNotAllowed",rt:$n[4].Diagnostic},{a:2,n:"GetTableExpected",is:!0,t:8,sn:"GetTableExpected",rt:$n[4].Diagnostic},{a:2,n:"GetTableHasNoColumns",is:!0,t:8,sn:"GetTableHasNoColumns",rt:$n[4].Diagnostic},{a:2,n:"GetTableOrScalarExpected",is:!0,t:8,sn:"GetTableOrScalarExpected",rt:$n[4].Diagnostic},{a:2,n:"GetTheElementAccessOperatorIsNotAllowedInThisContext",is:!0,t:8,sn:"GetTheElementAccessOperatorIsNotAllowedInThisContext",rt:$n[4].Diagnostic},{a:2,n:"GetTheExpressionDoesNotHaveMultipleValues",is:!0,t:8,sn:"GetTheExpressionDoesNotHaveMultipleValues",rt:$n[4].Diagnostic},{a:2,n:"GetTheExpressionHasNoName",is:!0,t:8,sn:"GetTheExpressionHasNoName",rt:$n[4].Diagnostic},{a:2,n:"GetTheExpressionRefersToMoreThanOneColumn",is:!0,t:8,sn:"GetTheExpressionRefersToMoreThanOneColumn",rt:$n[4].Diagnostic},{a:2,n:"GetTheNameDoesNotHaveCorrespondingExpression",is:!0,t:8,sn:"GetTheNameDoesNotHaveCorrespondingExpression",rt:$n[4].Diagnostic},{a:2,n:"GetTokenExpected",is:!0,t:8,pi:[{n:"kinds",ip:!0,pt:System.Array.type(Kusto.Language.Syntax.SyntaxKind),ps:0}],sn:"GetTokenExpected",rt:$n[4].Diagnostic,p:[System.Array.type(Kusto.Language.Syntax.SyntaxKind)]},{a:2,n:"GetTokenExpected",is:!0,t:8,pi:[{n:"texts",pt:$n[0].IEnumerable$1(System.String),ps:0}],sn:"GetTokenExpected$1",rt:$n[4].Diagnostic,p:[$n[0].IEnumerable$1(System.String)]},{a:2,n:"GetTokenExpected",is:!0,t:8,pi:[{n:"kinds",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:0}],sn:"GetTokenExpected$2",rt:$n[4].Diagnostic,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind)]},{a:2,n:"GetTokenExpected",is:!0,t:8,pi:[{n:"tokens",ip:!0,pt:$n[2].Array.type(System.String),ps:0}],sn:"GetTokenExpected$3",rt:$n[4].Diagnostic,p:[$n[2].Array.type(System.String)]},{a:2,n:"GetTypeExpected",is:!0,t:8,pi:[{n:"type",pt:$n[1].Symbol,ps:0}],sn:"GetTypeExpected",rt:$n[4].Diagnostic,p:[$n[1].Symbol]},{a:2,n:"GetTypeExpected",is:!0,t:8,pi:[{n:"types",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:0}],sn:"GetTypeExpected$1",rt:$n[4].Diagnostic,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:2,n:"GetTypeIsNotIntervalType",is:!0,t:8,pi:[{n:"intervalType",pt:$n[1].Symbol,ps:0},{n:"rangeType",pt:$n[1].Symbol,ps:1}],sn:"GetTypeIsNotIntervalType",rt:$n[4].Diagnostic,p:[$n[1].Symbol,$n[1].Symbol]},{a:2,n:"GetTypeNotAllowed",is:!0,t:8,pi:[{n:"type",pt:$n[1].Symbol,ps:0}],sn:"GetTypeNotAllowed",rt:$n[4].Diagnostic,p:[$n[1].Symbol]},{a:2,n:"GetUnexpectedCharacter",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetUnexpectedCharacter",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetUnknownArgumentName",is:!0,t:8,sn:"GetUnknownArgumentName",rt:$n[4].Diagnostic},{a:2,n:"GetUnknownQueryOperatorParameterName",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetUnknownQueryOperatorParameterName",rt:$n[4].Diagnostic,p:[$n[2].String]},{a:2,n:"GetUnnamedArgumentAfterOutofOrderNamedArgument",is:!0,t:8,sn:"GetUnnamedArgumentAfterOutofOrderNamedArgument",rt:$n[4].Diagnostic},{a:2,n:"GetValueCountMustEqualParameterCount",is:!0,t:8,sn:"GetValueCountMustEqualParameterCount",rt:$n[4].Diagnostic},{a:2,n:"GetVariableAlreadyDeclared",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetVariableAlreadyDeclared",rt:$n[4].Diagnostic,p:[$n[2].String]}]}},$n);$m("Kusto.Language.EngineCommands",function(){return{att:1048961,a:2,s:!0,m:[{a:1,n:"PropertyList",is:!0,t:8,pi:[{n:"propertyNameRule",dv:null,o:!0,pt:$n[2].String,ps:0}],sn:"PropertyList",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"All",is:!0,t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),g:{a:2,n:"get_All",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),fg:"All",is:!0},fn:"All"},{a:2,n:"AddClusterBlockedPrincipals",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AddClusterBlockedPrincipals",ro:!0},{a:2,n:"AddClusterRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AddClusterRole",ro:!0},{a:2,n:"AddDatabaseRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AddDatabaseRole",ro:!0},{a:2,n:"AddFunctionRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AddFunctionRole",ro:!0},{a:2,n:"AddTableRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AddTableRole",ro:!0},{a:2,n:"AlterClusterPolicyCaching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterClusterPolicyCaching",ro:!0},{a:2,n:"AlterClusterPolicyCallout",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterClusterPolicyCallout",ro:!0},{a:2,n:"AlterClusterPolicyCapacity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterClusterPolicyCapacity",ro:!0},{a:2,n:"AlterClusterPolicyDiagnostics",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterClusterPolicyDiagnostics",ro:!0},{a:2,n:"AlterClusterPolicyMultiDatabaseAdmins",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterClusterPolicyMultiDatabaseAdmins",ro:!0},{a:2,n:"AlterClusterPolicyRequestClassification",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterClusterPolicyRequestClassification",ro:!0},{a:2,n:"AlterClusterPolicyRowStore",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterClusterPolicyRowStore",ro:!0},{a:2,n:"AlterClusterPolicySandbox",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterClusterPolicySandbox",ro:!0},{a:2,n:"AlterClusterPolicyStreamingIngestion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterClusterPolicyStreamingIngestion",ro:!0},{a:2,n:"AlterColumnPolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterColumnPolicyEncoding",ro:!0},{a:2,n:"AlterColumnPolicyEncodingType",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterColumnPolicyEncodingType",ro:!0},{a:2,n:"AlterColumnType",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterColumnType",ro:!0},{a:2,n:"AlterDatabasePersistMetadata",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePersistMetadata",ro:!0},{a:2,n:"AlterDatabasePolicyCaching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePolicyCaching",ro:!0},{a:2,n:"AlterDatabasePolicyDiagnostics",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePolicyDiagnostics",ro:!0},{a:2,n:"AlterDatabasePolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePolicyEncoding",ro:!0},{a:2,n:"AlterDatabasePolicyIngestionBatching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePolicyIngestionBatching",ro:!0},{a:2,n:"AlterDatabasePolicyMerge",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePolicyMerge",ro:!0},{a:2,n:"AlterDatabasePolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePolicyRetention",ro:!0},{a:2,n:"AlterDatabasePolicySharding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePolicySharding",ro:!0},{a:2,n:"AlterDatabasePolicyStreamingIngestion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePolicyStreamingIngestion",ro:!0},{a:2,n:"AlterDatabasePrettyName",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterDatabasePrettyName",ro:!0},{a:2,n:"AlterExternalTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterExternalTable",ro:!0},{a:2,n:"AlterExternalTableMapping",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterExternalTableMapping",ro:!0},{a:2,n:"AlterFunction",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterFunction",ro:!0},{a:2,n:"AlterFunctionDocString",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterFunctionDocString",ro:!0},{a:2,n:"AlterFunctionFolder",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterFunctionFolder",ro:!0},{a:2,n:"AlterMaterializedView",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMaterializedView",ro:!0},{a:2,n:"AlterMaterializedViewAutoUpdateSchema",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMaterializedViewAutoUpdateSchema",ro:!0},{a:2,n:"AlterMaterializedViewDocString",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMaterializedViewDocString",ro:!0},{a:2,n:"AlterMaterializedViewFolder",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMaterializedViewFolder",ro:!0},{a:2,n:"AlterMaterializedViewLookback",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMaterializedViewLookback",ro:!0},{a:2,n:"AlterMaterializedViewPolicyCaching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMaterializedViewPolicyCaching",ro:!0},{a:2,n:"AlterMaterializedViewPolicyPartitioning",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMaterializedViewPolicyPartitioning",ro:!0},{a:2,n:"AlterMaterializedViewPolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMaterializedViewPolicyRetention",ro:!0},{a:2,n:"AlterMaterializedViewPolicyRowLevelSecurity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMaterializedViewPolicyRowLevelSecurity",ro:!0},{a:2,n:"AlterMergeClusterPolicyCallout",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeClusterPolicyCallout",ro:!0},{a:2,n:"AlterMergeClusterPolicyCapacity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeClusterPolicyCapacity",ro:!0},{a:2,n:"AlterMergeClusterPolicyDiagnostics",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeClusterPolicyDiagnostics",ro:!0},{a:2,n:"AlterMergeClusterPolicyMultiDatabaseAdmins",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeClusterPolicyMultiDatabaseAdmins",ro:!0},{a:2,n:"AlterMergeClusterPolicyRequestClassification",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeClusterPolicyRequestClassification",ro:!0},{a:2,n:"AlterMergeClusterPolicyRowStore",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeClusterPolicyRowStore",ro:!0},{a:2,n:"AlterMergeColumnPolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeColumnPolicyEncoding",ro:!0},{a:2,n:"AlterMergeDatabasePolicyDiagnostics",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeDatabasePolicyDiagnostics",ro:!0},{a:2,n:"AlterMergeDatabasePolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeDatabasePolicyEncoding",ro:!0},{a:2,n:"AlterMergeDatabasePolicyMerge",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeDatabasePolicyMerge",ro:!0},{a:2,n:"AlterMergeDatabasePolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeDatabasePolicyRetention",ro:!0},{a:2,n:"AlterMergeDatabasePolicySharding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeDatabasePolicySharding",ro:!0},{a:2,n:"AlterMergeMaterializedViewPolicyPartitioning",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeMaterializedViewPolicyPartitioning",ro:!0},{a:2,n:"AlterMergeMaterializedViewPolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeMaterializedViewPolicyRetention",ro:!0},{a:2,n:"AlterMergeTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeTable",ro:!0},{a:2,n:"AlterMergeTableColumnDocStrings",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeTableColumnDocStrings",ro:!0},{a:2,n:"AlterMergeTablePolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeTablePolicyEncoding",ro:!0},{a:2,n:"AlterMergeTablePolicyMerge",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeTablePolicyMerge",ro:!0},{a:2,n:"AlterMergeTablePolicyPartitioning",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeTablePolicyPartitioning",ro:!0},{a:2,n:"AlterMergeTablePolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeTablePolicyRetention",ro:!0},{a:2,n:"AlterMergeTablePolicyRowOrder",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeTablePolicyRowOrder",ro:!0},{a:2,n:"AlterMergeTablePolicySharding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeTablePolicySharding",ro:!0},{a:2,n:"AlterMergeTablePolicyUpdate",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeTablePolicyUpdate",ro:!0},{a:2,n:"AlterMergeWorkloadGroup",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterMergeWorkloadGroup",ro:!0},{a:2,n:"AlterTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTable",ro:!0},{a:2,n:"AlterTableColumnDocStrings",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTableColumnDocStrings",ro:!0},{a:2,n:"AlterTableDocString",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTableDocString",ro:!0},{a:2,n:"AlterTableFolder",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTableFolder",ro:!0},{a:2,n:"AlterTableIngestionMapping",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTableIngestionMapping",ro:!0},{a:2,n:"AlterTablePolicyAutoDelete",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyAutoDelete",ro:!0},{a:2,n:"AlterTablePolicyCaching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyCaching",ro:!0},{a:2,n:"AlterTablePolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyEncoding",ro:!0},{a:2,n:"AlterTablePolicyIngestionBatching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyIngestionBatching",ro:!0},{a:2,n:"AlterTablePolicyIngestionTime",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyIngestionTime",ro:!0},{a:2,n:"AlterTablePolicyMerge",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyMerge",ro:!0},{a:2,n:"AlterTablePolicyPartitioning",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyPartitioning",ro:!0},{a:2,n:"AlterTablePolicyRestrictedViewAccess",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyRestrictedViewAccess",ro:!0},{a:2,n:"AlterTablePolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyRetention",ro:!0},{a:2,n:"AlterTablePolicyRowLevelSecurity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyRowLevelSecurity",ro:!0},{a:2,n:"AlterTablePolicyRowOrder",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyRowOrder",ro:!0},{a:2,n:"AlterTablePolicySharding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicySharding",ro:!0},{a:2,n:"AlterTablePolicyStreamingIngestion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyStreamingIngestion",ro:!0},{a:2,n:"AlterTablePolicyUpdate",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablePolicyUpdate",ro:!0},{a:2,n:"AlterTablesPolicyIngestionBatching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablesPolicyIngestionBatching",ro:!0},{a:2,n:"AlterTablesPolicyIngestionTime",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablesPolicyIngestionTime",ro:!0},{a:2,n:"AlterTablesPolicyRestrictedViewAccess",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablesPolicyRestrictedViewAccess",ro:!0},{a:2,n:"AlterTablesPolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablesPolicyRetention",ro:!0},{a:2,n:"AlterTablesPolicyRowOrder",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AlterTablesPolicyRowOrder",ro:!0},{a:2,n:"AppendTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AppendTable",ro:!0},{a:2,n:"AttachDatabase",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"AttachDatabase",ro:!0},{a:1,n:"BlockedPrincipalsResult",is:!0,t:4,rt:$n[2].String,sn:"BlockedPrincipalsResult",ro:!0},{a:2,n:"CancelQuery",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CancelQuery",ro:!0},{a:2,n:"ClearMaterializedViewData",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ClearMaterializedViewData",ro:!0},{a:2,n:"ClearTableCacheStreamingIngestionSchema",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ClearTableCacheStreamingIngestionSchema",ro:!0},{a:2,n:"ClearTableData",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ClearTableData",ro:!0},{a:1,n:"ClusterRole",is:!0,t:4,rt:$n[2].String,sn:"ClusterRole"},{a:2,n:"CreateDatabasePersist",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateDatabasePersist",ro:!0},{a:2,n:"CreateDatabaseVolatile",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateDatabaseVolatile",ro:!0},{a:2,n:"CreateExternalTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateExternalTable",ro:!0},{a:2,n:"CreateExternalTableMapping",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateExternalTableMapping",ro:!0},{a:2,n:"CreateFunction",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateFunction",ro:!0},{a:2,n:"CreateMaterializedView",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateMaterializedView",ro:!0},{a:2,n:"CreateMergeTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateMergeTable",ro:!0},{a:2,n:"CreateOrAleterWorkloadGroup",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateOrAleterWorkloadGroup",ro:!0},{a:2,n:"CreateOrAlterContinuousExport",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateOrAlterContinuousExport",ro:!0},{a:2,n:"CreateOrAlterExternalTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateOrAlterExternalTable",ro:!0},{a:1,n:"CreateOrAlterExternalTableGrammar",is:!0,t:4,rt:$n[2].String,sn:"CreateOrAlterExternalTableGrammar",ro:!0},{a:2,n:"CreateOrAlterFunction",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateOrAlterFunction",ro:!0},{a:2,n:"CreateOrAlterMaterializedView",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateOrAlterMaterializedView",ro:!0},{a:2,n:"CreateTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateTable",ro:!0},{a:2,n:"CreateTableBasedOnAnother",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateTableBasedOnAnother",ro:!0},{a:2,n:"CreateTableIngestionMapping",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateTableIngestionMapping",ro:!0},{a:2,n:"CreateTables",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"CreateTables",ro:!0},{a:1,n:"DataConnectionStringList",is:!0,t:4,rt:$n[2].String,sn:"DataConnectionStringList"},{a:1,n:"DataIngestionPropertyList",is:!0,t:4,rt:$n[2].String,sn:"DataIngestionPropertyList",ro:!0},{a:1,n:"DataIngestionSetAppendResult",is:!0,t:4,rt:$n[2].String,sn:"DataIngestionSetAppendResult",ro:!0},{a:1,n:"DatabaseRole",is:!0,t:4,rt:$n[2].String,sn:"DatabaseRole"},{a:2,n:"DeleteClusterPolicyCallout",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteClusterPolicyCallout",ro:!0},{a:2,n:"DeleteClusterPolicyRequestClassification",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteClusterPolicyRequestClassification",ro:!0},{a:2,n:"DeleteClusterPolicyStreamingIngestion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteClusterPolicyStreamingIngestion",ro:!0},{a:2,n:"DeleteColumnPolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteColumnPolicyEncoding",ro:!0},{a:2,n:"DeleteDatabasePolicyDiagnostics",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteDatabasePolicyDiagnostics",ro:!0},{a:2,n:"DeleteDatabasePolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteDatabasePolicyEncoding",ro:!0},{a:2,n:"DeleteDatabasePolicyIngestionBatching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteDatabasePolicyIngestionBatching",ro:!0},{a:2,n:"DeleteDatabasePolicyMerge",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteDatabasePolicyMerge",ro:!0},{a:2,n:"DeleteDatabasePolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteDatabasePolicyRetention",ro:!0},{a:2,n:"DeleteDatabasePolicySharding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteDatabasePolicySharding",ro:!0},{a:2,n:"DeleteDatabasePolicyStreamingIngestion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteDatabasePolicyStreamingIngestion",ro:!0},{a:2,n:"DeleteMaterializedViewPolicyPartitioning",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteMaterializedViewPolicyPartitioning",ro:!0},{a:2,n:"DeleteMaterializedViewPolicyRowLevelSecurity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteMaterializedViewPolicyRowLevelSecurity",ro:!0},{a:2,n:"DeleteTablePolicyAutoDelete",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyAutoDelete",ro:!0},{a:2,n:"DeleteTablePolicyCaching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyCaching",ro:!0},{a:2,n:"DeleteTablePolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyEncoding",ro:!0},{a:2,n:"DeleteTablePolicyIngestionBatching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyIngestionBatching",ro:!0},{a:2,n:"DeleteTablePolicyIngestionTime",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyIngestionTime",ro:!0},{a:2,n:"DeleteTablePolicyMerge",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyMerge",ro:!0},{a:2,n:"DeleteTablePolicyPartitioning",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyPartitioning",ro:!0},{a:2,n:"DeleteTablePolicyRestrictedViewAccess",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyRestrictedViewAccess",ro:!0},{a:2,n:"DeleteTablePolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyRetention",ro:!0},{a:2,n:"DeleteTablePolicyRowLevelSecurity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyRowLevelSecurity",ro:!0},{a:2,n:"DeleteTablePolicyRowOrder",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyRowOrder",ro:!0},{a:2,n:"DeleteTablePolicySharding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicySharding",ro:!0},{a:2,n:"DeleteTablePolicyStreamingIngestion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyStreamingIngestion",ro:!0},{a:2,n:"DeleteTablePolicyUpdate",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DeleteTablePolicyUpdate",ro:!0},{a:2,n:"DetachDatabase",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DetachDatabase",ro:!0},{a:2,n:"DisableContinuousExport",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DisableContinuousExport",ro:!0},{a:2,n:"DropClusterBlockedPrincipals",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropClusterBlockedPrincipals",ro:!0},{a:2,n:"DropClusterRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropClusterRole",ro:!0},{a:2,n:"DropColumn",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropColumn",ro:!0},{a:2,n:"DropContinuousExport",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropContinuousExport",ro:!0},{a:2,n:"DropDatabasePrettyName",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropDatabasePrettyName",ro:!0},{a:2,n:"DropDatabaseRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropDatabaseRole",ro:!0},{a:2,n:"DropExtent",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropExtent",ro:!0},{a:1,n:"DropExtentResult",is:!0,t:4,rt:$n[2].String,sn:"DropExtentResult",ro:!0},{a:2,n:"DropExtents",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropExtents",ro:!0},{a:2,n:"DropExternalTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropExternalTable",ro:!0},{a:2,n:"DropExternalTableMapping",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropExternalTableMapping",ro:!0},{a:2,n:"DropFunction",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropFunction",ro:!0},{a:2,n:"DropFunctionRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropFunctionRole",ro:!0},{a:2,n:"DropFunctions",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropFunctions",ro:!0},{a:2,n:"DropMaterializedView",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropMaterializedView",ro:!0},{a:2,n:"DropPretendExtentsByProperties",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropPretendExtentsByProperties",ro:!0},{a:1,n:"DropProperties",is:!0,t:4,rt:$n[2].String,sn:"DropProperties",ro:!0},{a:2,n:"DropTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropTable",ro:!0},{a:2,n:"DropTableColumns",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropTableColumns",ro:!0},{a:2,n:"DropTableIngestionMapping",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropTableIngestionMapping",ro:!0},{a:2,n:"DropTableRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropTableRole",ro:!0},{a:2,n:"DropTables",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropTables",ro:!0},{a:2,n:"DropWorkloadGroup",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"DropWorkloadGroup",ro:!0},{a:2,n:"EnableContinuousExport",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"EnableContinuousExport",ro:!0},{a:2,n:"EnableDisableMaterializedView",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"EnableDisableMaterializedView",ro:!0},{a:2,n:"ExportToExternalTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ExportToExternalTable",ro:!0},{a:2,n:"ExportToSqlTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ExportToSqlTable",ro:!0},{a:2,n:"ExportToStorage",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ExportToStorage",ro:!0},{a:1,n:"ExtentIdList",is:!0,t:4,rt:$n[2].String,sn:"ExtentIdList",ro:!0},{a:1,n:"ExternalTableArtifactsResult",is:!0,t:4,rt:$n[2].String,sn:"ExternalTableArtifactsResult",ro:!0},{a:1,n:"ExternalTableFullResult",is:!0,t:4,rt:$n[2].String,sn:"ExternalTableFullResult",ro:!0},{a:1,n:"ExternalTableResult",is:!0,t:4,rt:$n[2].String,sn:"ExternalTableResult",ro:!0},{a:1,n:"ExternalTableSchemaResult",is:!0,t:4,rt:$n[2].String,sn:"ExternalTableSchemaResult",ro:!0},{a:1,n:"FunctionNameList",is:!0,t:4,rt:$n[2].String,sn:"FunctionNameList",ro:!0},{a:1,n:"FunctionResult",is:!0,t:4,rt:$n[2].String,sn:"FunctionResult",ro:!0},{a:1,n:"FunctionRole",is:!0,t:4,rt:$n[2].String,sn:"FunctionRole"},{a:1,n:"GuidList",is:!0,t:4,rt:$n[2].String,sn:"GuidList",ro:!0},{a:2,n:"IngestInlineIntoTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"IngestInlineIntoTable",ro:!0},{a:2,n:"IngestIntoTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"IngestIntoTable",ro:!0},{a:1,n:"JournalResult",is:!0,t:4,rt:$n[2].String,sn:"JournalResult",ro:!0},{a:2,n:"MergeExtents",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"MergeExtents",ro:!0},{a:2,n:"MergeExtentsDryrun",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"MergeExtentsDryrun",ro:!0},{a:1,n:"MergeExtentsResult",is:!0,t:4,rt:$n[2].String,sn:"MergeExtentsResult",ro:!0},{a:2,n:"MoveExtentsFrom",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"MoveExtentsFrom",ro:!0},{a:2,n:"MoveExtentsQuery",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"MoveExtentsQuery",ro:!0},{a:1,n:"MoveExtentsResult",is:!0,t:4,rt:$n[2].String,sn:"MoveExtentsResult",ro:!0},{a:1,n:"OverClause",is:!0,t:4,rt:$n[2].String,sn:"OverClause",ro:!0},{a:1,n:"PolicyResult",is:!0,t:4,rt:$n[2].String,sn:"PolicyResult",ro:!0},{a:1,n:"PrincipalsClause",is:!0,t:4,rt:$n[2].String,sn:"PrincipalsClause"},{a:1,n:"PrincipalsOrNoneClause",is:!0,t:4,rt:$n[2].String,sn:"PrincipalsOrNoneClause"},{a:1,n:"QueryResults",is:!0,t:4,rt:$n[2].String,sn:"QueryResults",ro:!0},{a:2,n:"RenameColumn",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"RenameColumn",ro:!0},{a:2,n:"RenameColumns",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"RenameColumns",ro:!0},{a:2,n:"RenameTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"RenameTable",ro:!0},{a:2,n:"RenameTables",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"RenameTables",ro:!0},{a:2,n:"ReplaceExtents",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ReplaceExtents",ro:!0},{a:2,n:"SetAccess",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"SetAccess",ro:!0},{a:2,n:"SetClusterRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"SetClusterRole",ro:!0},{a:2,n:"SetDatabaseRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"SetDatabaseRole",ro:!0},{a:2,n:"SetFunctionRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"SetFunctionRole",ro:!0},{a:2,n:"SetOrAppendTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"SetOrAppendTable",ro:!0},{a:2,n:"SetOrReplaceTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"SetOrReplaceTable",ro:!0},{a:2,n:"SetTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"SetTable",ro:!0},{a:2,n:"SetTableRole",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"SetTableRole",ro:!0},{a:2,n:"ShowBasicAuthUsers",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowBasicAuthUsers",ro:!0},{a:2,n:"ShowCache",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowCache",ro:!0},{a:2,n:"ShowCapacity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowCapacity",ro:!0},{a:2,n:"ShowCluster",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowCluster",ro:!0},{a:2,n:"ShowClusterBlockedPrincipals",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterBlockedPrincipals",ro:!0},{a:2,n:"ShowClusterDatabases",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterDatabases",ro:!0},{a:2,n:"ShowClusterDatabasesDataStats",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterDatabasesDataStats",ro:!0},{a:2,n:"ShowClusterDatabasesDetails",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterDatabasesDetails",ro:!0},{a:2,n:"ShowClusterDatabasesIdentity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterDatabasesIdentity",ro:!0},{a:2,n:"ShowClusterDatabasesPolicies",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterDatabasesPolicies",ro:!0},{a:2,n:"ShowClusterExtents",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterExtents",ro:!0},{a:2,n:"ShowClusterJournal",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterJournal",ro:!0},{a:2,n:"ShowClusterPolicyCallout",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterPolicyCallout",ro:!0},{a:2,n:"ShowClusterPolicyCapacity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterPolicyCapacity",ro:!0},{a:2,n:"ShowClusterPolicyDiagnostics",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterPolicyDiagnostics",ro:!0},{a:2,n:"ShowClusterPolicyMultiDatabaseAdmins",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterPolicyMultiDatabaseAdmins",ro:!0},{a:2,n:"ShowClusterPolicyRequestClassification",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterPolicyRequestClassification",ro:!0},{a:2,n:"ShowClusterPolicyRowStore",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterPolicyRowStore",ro:!0},{a:2,n:"ShowClusterPolicySandbox",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterPolicySandbox",ro:!0},{a:2,n:"ShowClusterPolicyStreamingIngestion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterPolicyStreamingIngestion",ro:!0},{a:2,n:"ShowClusterPrincipals",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowClusterPrincipals",ro:!0},{a:2,n:"ShowColumnPolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowColumnPolicyEncoding",ro:!0},{a:2,n:"ShowCommands",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowCommands",ro:!0},{a:2,n:"ShowCommandsAndQueries",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowCommandsAndQueries",ro:!0},{a:2,n:"ShowContinuousExport",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowContinuousExport",ro:!0},{a:2,n:"ShowContinuousExportExportedArtifacts",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowContinuousExportExportedArtifacts",ro:!0},{a:2,n:"ShowContinuousExportFailures",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowContinuousExportFailures",ro:!0},{a:1,n:"ShowContinuousExportResult",is:!0,t:4,rt:$n[2].String,sn:"ShowContinuousExportResult",ro:!0},{a:2,n:"ShowContinuousExports",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowContinuousExports",ro:!0},{a:2,n:"ShowDatabase",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabase",ro:!0},{a:2,n:"ShowDatabaseDataStats",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabaseDataStats",ro:!0},{a:2,n:"ShowDatabaseDetails",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabaseDetails",ro:!0},{a:1,n:"ShowDatabaseDetailsResults",is:!0,t:4,rt:$n[2].String,sn:"ShowDatabaseDetailsResults",ro:!0},{a:2,n:"ShowDatabaseExtents",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabaseExtents",ro:!0},{a:2,n:"ShowDatabaseIdentity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabaseIdentity",ro:!0},{a:2,n:"ShowDatabaseJournal",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabaseJournal",ro:!0},{a:2,n:"ShowDatabasePolicies",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePolicies",ro:!0},{a:2,n:"ShowDatabasePolicyCaching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePolicyCaching",ro:!0},{a:2,n:"ShowDatabasePolicyDiagnostics",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePolicyDiagnostics",ro:!0},{a:2,n:"ShowDatabasePolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePolicyEncoding",ro:!0},{a:2,n:"ShowDatabasePolicyIngestionBatching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePolicyIngestionBatching",ro:!0},{a:2,n:"ShowDatabasePolicyMerge",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePolicyMerge",ro:!0},{a:2,n:"ShowDatabasePolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePolicyRetention",ro:!0},{a:2,n:"ShowDatabasePolicySharding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePolicySharding",ro:!0},{a:2,n:"ShowDatabasePolicyStreamingIngestion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePolicyStreamingIngestion",ro:!0},{a:2,n:"ShowDatabasePrincipals",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasePrincipals",ro:!0},{a:1,n:"ShowDatabaseResults",is:!0,t:4,rt:$n[2].String,sn:"ShowDatabaseResults",ro:!0},{a:2,n:"ShowDatabaseSchema",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabaseSchema",ro:!0},{a:2,n:"ShowDatabaseSchemaAsCslScript",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabaseSchemaAsCslScript",ro:!0},{a:2,n:"ShowDatabaseSchemaAsJson",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabaseSchemaAsJson",ro:!0},{a:2,n:"ShowDatabaseSchemaResults",is:!0,t:4,rt:$n[2].String,sn:"ShowDatabaseSchemaResults",ro:!0},{a:2,n:"ShowDatabasesSchema",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasesSchema",ro:!0},{a:2,n:"ShowDatabasesSchemaAsJson",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDatabasesSchemaAsJson",ro:!0},{a:2,n:"ShowDiagnostics",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowDiagnostics",ro:!0},{a:2,n:"ShowExternalTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowExternalTable",ro:!0},{a:2,n:"ShowExternalTableArtifacts",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowExternalTableArtifacts",ro:!0},{a:2,n:"ShowExternalTableCslSchema",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowExternalTableCslSchema",ro:!0},{a:2,n:"ShowExternalTableMapping",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowExternalTableMapping",ro:!0},{a:2,n:"ShowExternalTableMappings",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowExternalTableMappings",ro:!0},{a:2,n:"ShowExternalTableSchema",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowExternalTableSchema",ro:!0},{a:2,n:"ShowExternalTables",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowExternalTables",ro:!0},{a:2,n:"ShowFunction",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowFunction",ro:!0},{a:2,n:"ShowFunctionPrincipals",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowFunctionPrincipals",ro:!0},{a:2,n:"ShowFunctions",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowFunctions",ro:!0},{a:2,n:"ShowIngestionFailures",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowIngestionFailures",ro:!0},{a:2,n:"ShowJournal",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowJournal",ro:!0},{a:2,n:"ShowMaterializedView",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedView",ro:!0},{a:2,n:"ShowMaterializedViewCslSchema",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViewCslSchema",ro:!0},{a:2,n:"ShowMaterializedViewExtents",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViewExtents",ro:!0},{a:2,n:"ShowMaterializedViewPolicyCaching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViewPolicyCaching",ro:!0},{a:2,n:"ShowMaterializedViewPolicyMerge",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViewPolicyMerge",ro:!0},{a:2,n:"ShowMaterializedViewPolicyPartitioning",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViewPolicyPartitioning",ro:!0},{a:2,n:"ShowMaterializedViewPolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViewPolicyRetention",ro:!0},{a:2,n:"ShowMaterializedViewPolicyRowLevelSecurity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViewPolicyRowLevelSecurity",ro:!0},{a:2,n:"ShowMaterializedViewPrincipals",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViewPrincipals",ro:!0},{a:1,n:"ShowMaterializedViewResult",is:!0,t:4,rt:$n[2].String,sn:"ShowMaterializedViewResult",ro:!0},{a:2,n:"ShowMaterializedViewSchemaAsJson",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViewSchemaAsJson",ro:!0},{a:2,n:"ShowMaterializedViews",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowMaterializedViews",ro:!0},{a:2,n:"ShowOperationDetails",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowOperationDetails",ro:!0},{a:2,n:"ShowOperations",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowOperations",ro:!0},{a:2,n:"ShowPrincipalRoles",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowPrincipalRoles",ro:!0},{a:1,n:"ShowPrincipalsResult",is:!0,t:4,rt:$n[2].String,sn:"ShowPrincipalsResult",ro:!0},{a:2,n:"ShowQueries",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowQueries",ro:!0},{a:2,n:"ShowQueryPlan",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowQueryPlan",ro:!0},{a:1,n:"ShowQueryPlanPropertyList",is:!0,t:4,rt:$n[2].String,sn:"ShowQueryPlanPropertyList",ro:!0},{a:2,n:"ShowRunningQueries",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowRunningQueries",ro:!0},{a:2,n:"ShowTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTable",ro:!0},{a:2,n:"ShowTableCslSchema",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTableCslSchema",ro:!0},{a:2,n:"ShowTableDetails",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTableDetails",ro:!0},{a:2,n:"ShowTableExtents",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTableExtents",ro:!0},{a:2,n:"ShowTableIngestionMapping",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTableIngestionMapping",ro:!0},{a:2,n:"ShowTableIngestionMappings",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTableIngestionMappings",ro:!0},{a:2,n:"ShowTablePolicyAutoDelete",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyAutoDelete",ro:!0},{a:2,n:"ShowTablePolicyCaching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyCaching",ro:!0},{a:2,n:"ShowTablePolicyEncoding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyEncoding",ro:!0},{a:2,n:"ShowTablePolicyIngestionBatching",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyIngestionBatching",ro:!0},{a:2,n:"ShowTablePolicyIngestionTime",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyIngestionTime",ro:!0},{a:2,n:"ShowTablePolicyMerge",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyMerge",ro:!0},{a:2,n:"ShowTablePolicyPartitioning",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyPartitioning",ro:!0},{a:2,n:"ShowTablePolicyRestrictedViewAccess",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyRestrictedViewAccess",ro:!0},{a:2,n:"ShowTablePolicyRetention",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyRetention",ro:!0},{a:2,n:"ShowTablePolicyRowLevelSecurity",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyRowLevelSecurity",ro:!0},{a:2,n:"ShowTablePolicyRowOrder",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyRowOrder",ro:!0},{a:2,n:"ShowTablePolicySharding",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicySharding",ro:!0},{a:2,n:"ShowTablePolicyStreamingIngestion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyStreamingIngestion",ro:!0},{a:2,n:"ShowTablePolicyUpdate",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePolicyUpdate",ro:!0},{a:2,n:"ShowTablePrincipals",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablePrincipals",ro:!0},{a:2,n:"ShowTableSchemaAsJson",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTableSchemaAsJson",ro:!0},{a:1,n:"ShowTableSchemaResult",is:!0,t:4,rt:$n[2].String,sn:"ShowTableSchemaResult",ro:!0},{a:2,n:"ShowTables",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTables",ro:!0},{a:2,n:"ShowTablesDetails",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablesDetails",ro:!0},{a:1,n:"ShowTablesDetailsResult",is:!0,t:4,rt:$n[2].String,sn:"ShowTablesDetailsResult",ro:!0},{a:2,n:"ShowTablesExtents",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowTablesExtents",ro:!0},{a:1,n:"ShowTablesResult",is:!0,t:4,rt:$n[2].String,sn:"ShowTablesResult",ro:!0},{a:2,n:"ShowVersion",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowVersion",ro:!0},{a:2,n:"ShowWorkloadGroup",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowWorkloadGroup",ro:!0},{a:2,n:"ShowWorkloadGroups",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"ShowWorkloadGroups",ro:!0},{a:1,n:"SourceDataLocatorList",is:!0,t:4,rt:$n[2].String,sn:"SourceDataLocatorList",ro:!0},{a:2,n:"StoredQueryResultDrop",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"StoredQueryResultDrop",ro:!0},{a:2,n:"StoredQueryResultSet",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"StoredQueryResultSet",ro:!0},{a:2,n:"StoredQueryResultsDrop",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"StoredQueryResultsDrop",ro:!0},{a:2,n:"StoredQueryResultsShow",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"StoredQueryResultsShow",ro:!0},{a:1,n:"StoredQueryResultsShowSchema",is:!0,t:4,rt:$n[2].String,sn:"StoredQueryResultsShowSchema"},{a:1,n:"TableIngestionMappingResult",is:!0,t:4,rt:$n[2].String,sn:"TableIngestionMappingResult",ro:!0},{a:1,n:"TableNameList",is:!0,t:4,rt:$n[2].String,sn:"TableNameList",ro:!0},{a:1,n:"TableProperties",is:!0,t:4,rt:$n[2].String,sn:"TableProperties",ro:!0},{a:1,n:"TableRole",is:!0,t:4,rt:$n[2].String,sn:"TableRole"},{a:1,n:"TableSchema",is:!0,t:4,rt:$n[2].String,sn:"TableSchema",ro:!0},{a:1,n:"TagWhereClause",is:!0,t:4,rt:$n[2].String,sn:"TagWhereClause",ro:!0},{a:2,n:"UndoDropTable",is:!0,t:4,rt:$n[1].CommandSymbol,sn:"UndoDropTable",ro:!0},{a:1,n:"UnknownResult",is:!0,t:4,rt:$n[2].String,sn:"UnknownResult",ro:!0},{a:1,n:"WorkloadGroupResult",is:!0,t:4,rt:$n[2].String,sn:"WorkloadGroupResult",ro:!0},{a:1,n:"__Property__Initializer__All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"__Property__Initializer__All"},{a:1,backing:!0,n:"<All>k__BackingField",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"All"}]}},$n);$m("Kusto.Language.FunctionHelpers",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"AddReferencedColumn",is:!0,t:8,pi:[{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:0},{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"signature",pt:$n[1].Signature,ps:2},{n:"parameterName",pt:$n[2].String,ps:3}],sn:"AddReferencedColumn",rt:$n[2].Void,p:[$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[1].Signature,$n[2].String]},{a:2,n:"AddReferencedColumns",is:!0,t:8,pi:[{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:0},{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"signature",pt:$n[1].Signature,ps:2},{n:"parameterName",pt:$n[2].String,ps:3}],sn:"AddReferencedColumns",rt:$n[2].Void,p:[$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[1].Signature,$n[2].String]},{a:2,n:"GetArgument",is:!0,t:8,pi:[{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0},{n:"signature",pt:$n[1].Signature,ps:1},{n:"parameterName",pt:$n[2].String,ps:2}],sn:"GetArgument",rt:$n[3].Expression,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[1].Signature,$n[2].String]},{a:2,n:"GetArgumentRange",is:!0,t:8,pi:[{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:0},{n:"parameter",pt:$n[1].Parameter,ps:1},{n:"start",out:!0,pt:$n[2].Int32,ps:2},{n:"length",out:!0,pt:$n[2].Int32,ps:3}],sn:"GetArgumentRange",rt:$n[2].Void,p:[$n[0].List$1(Kusto.Language.Symbols.Parameter),$n[1].Parameter,$n[2].Int32,$n[2].Int32]},{a:2,n:"GetArguments",is:!0,t:8,pi:[{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0},{n:"signature",pt:$n[1].Signature,ps:1},{n:"parameterName",pt:$n[2].String,ps:2}],sn:"GetArguments",rt:$n[0].IEnumerable$1(Kusto.Language.Syntax.Expression),p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[1].Signature,$n[2].String]},{a:2,n:"GetColumnSymbols",is:!0,t:8,pi:[{n:"exprs",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:0}],sn:"GetColumnSymbols",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))]},{a:2,n:"GetExpressionResultName",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0},{n:"defaultName",dv:"",o:!0,pt:$n[2].String,ps:1},{n:"rowScope",dv:null,o:!0,pt:$n[1].TableSymbol,ps:2}],sn:"GetExpressionResultName",rt:$n[2].String,p:[$n[3].Expression,$n[2].String,$n[1].TableSymbol]},{a:2,n:"GetLiteralValue",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"GetLiteralValue",rt:$n[2].String,p:[$n[3].Expression]},{a:2,n:"GetSummarizeByColumns",is:!0,t:8,pi:[{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0}],sn:"GetSummarizeByColumns",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression)]},{a:2,n:"MakeColumnName",is:!0,t:8,pi:[{n:"nameParts",ip:!0,pt:$n[2].Array.type(System.String),ps:0}],sn:"MakeColumnName",rt:$n[2].String,p:[$n[2].Array.type(System.String)]},{a:2,n:"MakePrefixedTuple",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"parameterName",pt:$n[2].String,ps:1},{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:2},{n:"baseTuple",pt:$n[1].TupleSymbol,ps:3}],sn:"MakePrefixedTuple",rt:$n[1].TupleSymbol,p:[$n[1].Signature,$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[1].TupleSymbol]},{a:2,n:"MakeValidNameFragment",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"MakeValidNameFragment",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"MaxRepeat",is:!0,t:4,rt:$n[2].Int32,sn:"MaxRepeat",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"s_parameterListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)),sn:"s_parameterListPool",ro:!0}]}},$n);$m("Kusto.Language.Functions",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:1,n:"GetArraySortResult",is:!0,t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"signature",pt:$n[1].Signature,ps:2}],sn:"GetArraySortResult",rt:$n[1].TypeSymbol,p:[$n[1].TableSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[1].Signature]},{a:1,n:"SeriesDecomposeAnomaliesResult",is:!0,t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0},{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"sig",pt:$n[1].Signature,ps:2}],sn:"SeriesDecomposeAnomaliesResult",rt:$n[1].TypeSymbol,p:[$n[1].TableSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[1].Signature]},{a:1,n:"SeriesDecomposeResult",is:!0,t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0},{n:"args",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"sig",pt:$n[1].Signature,ps:2}],sn:"SeriesDecomposeResult",rt:$n[1].TypeSymbol,p:[$n[1].TableSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[1].Signature]},{a:1,n:"ValidateArgumentsForArraySort",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"ValidateArgumentsForArraySort",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:2,n:"All",is:!0,t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),g:{a:2,n:"get_All",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),fg:"All",is:!0},fn:"All"},{a:2,n:"Abs",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Abs",ro:!0},{a:2,n:"Acos",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Acos",ro:!0},{a:2,n:"Ago",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Ago",ro:!0},{a:2,n:"Around",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Around",ro:!0},{a:2,n:"ArrayConcat",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayConcat",ro:!0},{a:2,n:"ArrayIff",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayIff",ro:!0},{a:2,n:"ArrayIif",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayIif",ro:!0},{a:2,n:"ArrayIndexOf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayIndexOf",ro:!0},{a:2,n:"ArrayLength",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayLength",ro:!0},{a:2,n:"ArrayReverse",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayReverse",ro:!0},{a:2,n:"ArrayRotateLeft",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayRotateLeft",ro:!0},{a:2,n:"ArrayRotateRight",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayRotateRight",ro:!0},{a:2,n:"ArrayShiftLeft",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayShiftLeft",ro:!0},{a:2,n:"ArrayShiftRight",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayShiftRight",ro:!0},{a:2,n:"ArraySlice",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArraySlice",ro:!0},{a:2,n:"ArraySortAsc",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArraySortAsc",ro:!0},{a:2,n:"ArraySortDesc",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArraySortDesc",ro:!0},{a:2,n:"ArraySplit",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArraySplit",ro:!0},{a:2,n:"ArrayStrcat",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArrayStrcat",ro:!0},{a:2,n:"ArraySum",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ArraySum",ro:!0},{a:2,n:"Arraylength_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Arraylength_Depricated",ro:!0},{a:2,n:"Asin",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Asin",ro:!0},{a:2,n:"Assert",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Assert",ro:!0},{a:2,n:"Atan",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Atan",ro:!0},{a:2,n:"Atan2",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Atan2",ro:!0},{a:2,n:"BagKeys",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BagKeys",ro:!0},{a:2,n:"BagMerge",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BagMerge",ro:!0},{a:2,n:"BagRemoveKeys",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BagRemoveKeys",ro:!0},{a:2,n:"Base64DecodeString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Base64DecodeString",ro:!0},{a:2,n:"Base64DecodeToArray",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Base64DecodeToArray",ro:!0},{a:2,n:"Base64DecodeToString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Base64DecodeToString",ro:!0},{a:2,n:"Base64EncodeFromArray",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Base64EncodeFromArray",ro:!0},{a:2,n:"Base64EncodeString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Base64EncodeString",ro:!0},{a:2,n:"Base64EncodeToString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Base64EncodeToString",ro:!0},{a:2,n:"BetaCdf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BetaCdf",ro:!0},{a:2,n:"BetaInv",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BetaInv",ro:!0},{a:2,n:"BetaPdf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BetaPdf",ro:!0},{a:2,n:"Bin",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Bin",ro:!0},{a:2,n:"BinAt",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinAt",ro:!0},{a:2,n:"BinAuto",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinAuto",ro:!0},{a:2,n:"BinaryAnd",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinaryAnd",ro:!0},{a:2,n:"BinaryNot",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinaryNot",ro:!0},{a:2,n:"BinaryOr",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinaryOr",ro:!0},{a:2,n:"BinaryShiftLeft",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinaryShiftLeft",ro:!0},{a:2,n:"BinaryShiftRight",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinaryShiftRight",ro:!0},{a:2,n:"BinaryXor",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BinaryXor",ro:!0},{a:2,n:"BitsetCountOnes",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BitsetCountOnes",ro:!0},{a:2,n:"Case",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Case",ro:!0},{a:2,n:"Ceiling",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Ceiling",ro:!0},{a:2,n:"Cluster",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Cluster",ro:!0},{a:2,n:"Coalesce",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Coalesce",ro:!0},{a:2,n:"ColumnIfExists",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ColumnIfExists",ro:!0},{a:2,n:"ColumnIfExists_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ColumnIfExists_Depricated",ro:!0},{a:2,n:"Cos",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Cos",ro:!0},{a:2,n:"Cot",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Cot",ro:!0},{a:2,n:"CountOf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CountOf",ro:!0},{a:2,n:"CurrentClusterEndpoint",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CurrentClusterEndpoint",ro:!0},{a:2,n:"CurrentDatabase",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CurrentDatabase",ro:!0},{a:2,n:"CurrentNodeId",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CurrentNodeId",ro:!0},{a:2,n:"CurrentPrincipal",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CurrentPrincipal",ro:!0},{a:2,n:"CurrentPrincipalDetails",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CurrentPrincipalDetails",ro:!0},{a:2,n:"CurrentPrincipalIsMemberOf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CurrentPrincipalIsMemberOf",ro:!0},{a:2,n:"CursorAfter",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CursorAfter",ro:!0},{a:2,n:"CursorBeforeOrAt",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CursorBeforeOrAt",ro:!0},{a:2,n:"CursorCurrent",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CursorCurrent",ro:!0},{a:2,n:"CursorCurrent2",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CursorCurrent2",ro:!0},{a:2,n:"DCountHll",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DCountHll",ro:!0},{a:2,n:"Database",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Database",ro:!0},{a:2,n:"DatePart",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DatePart",ro:!0},{a:2,n:"DateTimeToLocaleString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DateTimeToLocaleString",ro:!0},{a:2,n:"DatetimeAdd",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DatetimeAdd",ro:!0},{a:2,n:"DatetimeDiff",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DatetimeDiff",ro:!0},{a:2,n:"DatetimePart",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DatetimePart",ro:!0},{a:2,n:"DayOfMonth",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DayOfMonth",ro:!0},{a:2,n:"DayOfWeek",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DayOfWeek",ro:!0},{a:2,n:"DayOfYear",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DayOfYear",ro:!0},{a:2,n:"Degrees",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Degrees",ro:!0},{a:2,n:"DynamicToJson",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DynamicToJson",ro:!0},{a:2,n:"EndOfDay",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"EndOfDay",ro:!0},{a:2,n:"EndOfMonth",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"EndOfMonth",ro:!0},{a:2,n:"EndOfWeek",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"EndOfWeek",ro:!0},{a:2,n:"EndOfYear",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"EndOfYear",ro:!0},{a:2,n:"EstimateDataSize",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"EstimateDataSize",ro:!0},{a:2,n:"Exp",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Exp",ro:!0},{a:2,n:"Exp10",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Exp10",ro:!0},{a:2,n:"Exp2",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Exp2",ro:!0},{a:2,n:"ExtentId",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExtentId",ro:!0},{a:2,n:"ExtentId2",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExtentId2",ro:!0},{a:2,n:"ExtentTags",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExtentTags",ro:!0},{a:2,n:"ExternalTable",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExternalTable",ro:!0},{a:2,n:"Extract",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Extract",ro:!0},{a:2,n:"ExtractAll",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExtractAll",ro:!0},{a:2,n:"ExtractAll_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExtractAll_Depricated",ro:!0},{a:2,n:"ExtractJson",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExtractJson",ro:!0},{a:2,n:"Floor",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Floor",ro:!0},{a:2,n:"FormatBytes",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"FormatBytes",ro:!0},{a:2,n:"FormatDatetime",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"FormatDatetime",ro:!0},{a:2,n:"FormatIPV4",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"FormatIPV4",ro:!0},{a:2,n:"FormatIPV4Mask",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"FormatIPV4Mask",ro:!0},{a:2,n:"FormatTimespan",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"FormatTimespan",ro:!0},{a:2,n:"Gamma",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Gamma",ro:!0},{a:2,n:"GeoDistance2Points",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoDistance2Points",ro:!0},{a:2,n:"GeoDistancePointToLine",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoDistancePointToLine",ro:!0},{a:2,n:"GeoH3CellToCentralPoint",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoH3CellToCentralPoint",ro:!0},{a:2,n:"GeoH3CellToPolygon",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoH3CellToPolygon",ro:!0},{a:2,n:"GeoLineDensify",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoLineDensify",ro:!0},{a:2,n:"GeoLineValidate",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoLineValidate",ro:!0},{a:2,n:"GeoPointInCircle",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoPointInCircle",ro:!0},{a:2,n:"GeoPointInPolygon",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoPointInPolygon",ro:!0},{a:2,n:"GeoPointToGeohash",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoPointToGeohash",ro:!0},{a:2,n:"GeoPointToH3Cell",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoPointToH3Cell",ro:!0},{a:2,n:"GeoPointToS2Cell",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoPointToS2Cell",ro:!0},{a:2,n:"GeoPolygonDensify",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoPolygonDensify",ro:!0},{a:2,n:"GeoPolygonToS2Cells",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoPolygonToS2Cells",ro:!0},{a:2,n:"GeoPolygonValidate",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoPolygonValidate",ro:!0},{a:2,n:"GeoS2CellToCentralPoint",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoS2CellToCentralPoint",ro:!0},{a:2,n:"GeoS2CellToPolygon",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeoS2CellToPolygon",ro:!0},{a:2,n:"GeohashToCentralPoint",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeohashToCentralPoint",ro:!0},{a:2,n:"GeohashToPolygon",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GeohashToPolygon",ro:!0},{a:2,n:"GetMonth",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GetMonth",ro:!0},{a:2,n:"GetType",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GetType",ro:!0},{a:2,n:"GetYear",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GetYear",ro:!0},{a:2,n:"GzipCompressString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GzipCompressString",ro:!0},{a:2,n:"GzipDecompressString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"GzipDecompressString",ro:!0},{a:2,n:"HasAnyIpv4",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HasAnyIpv4",ro:!0},{a:2,n:"HasAnyIpv4Prefix",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HasAnyIpv4Prefix",ro:!0},{a:2,n:"HasIpv4",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HasIpv4",ro:!0},{a:2,n:"HasIpv4Prefix",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HasIpv4Prefix",ro:!0},{a:2,n:"Hash",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Hash",ro:!0},{a:2,n:"HashCombine",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HashCombine",ro:!0},{a:2,n:"HashCrc32",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HashCrc32",ro:!0},{a:2,n:"HashDjb2",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HashDjb2",ro:!0},{a:2,n:"HashMany",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HashMany",ro:!0},{a:2,n:"HashManyCrc32",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HashManyCrc32",ro:!0},{a:2,n:"HashMd5",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HashMd5",ro:!0},{a:2,n:"HashSha256",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HashSha256",ro:!0},{a:2,n:"HashXXH64",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HashXXH64",ro:!0},{a:2,n:"HllMerge",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HllMerge",ro:!0},{a:2,n:"HourOfDay",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HourOfDay",ro:!0},{a:2,n:"Iff",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Iff",ro:!0},{a:2,n:"Iif",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Iif",ro:!0},{a:2,n:"IndexOf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IndexOf",ro:!0},{a:2,n:"IndexOfRegex",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IndexOfRegex",ro:!0},{a:2,n:"IngestionTime",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IngestionTime",ro:!0},{a:2,n:"InternalFunnelCompletion",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"InternalFunnelCompletion",ro:!0},{a:2,n:"Ipv4Compare",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Ipv4Compare",ro:!0},{a:2,n:"Ipv4IsInRange",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Ipv4IsInRange",ro:!0},{a:2,n:"Ipv4IsMatch",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Ipv4IsMatch",ro:!0},{a:2,n:"Ipv4IsPrivate",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Ipv4IsPrivate",ro:!0},{a:2,n:"Ipv4NetmaskSuffix",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Ipv4NetmaskSuffix",ro:!0},{a:2,n:"Ipv6Compare",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Ipv6Compare",ro:!0},{a:2,n:"Ipv6IsMatch",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Ipv6IsMatch",ro:!0},{a:2,n:"IsAscii",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsAscii",ro:!0},{a:2,n:"IsColumnExists",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsColumnExists",ro:!0},{a:2,n:"IsEmpty",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsEmpty",ro:!0},{a:2,n:"IsFinite",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsFinite",ro:!0},{a:2,n:"IsInf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsInf",ro:!0},{a:2,n:"IsNan",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsNan",ro:!0},{a:2,n:"IsNotEmpty",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsNotEmpty",ro:!0},{a:2,n:"IsNotNull",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsNotNull",ro:!0},{a:2,n:"IsNull",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsNull",ro:!0},{a:2,n:"IsUtf8",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IsUtf8",ro:!0},{a:2,n:"Log",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Log",ro:!0},{a:2,n:"Log10",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Log10",ro:!0},{a:2,n:"Log2",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Log2",ro:!0},{a:2,n:"LogGamma",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"LogGamma",ro:!0},{a:2,n:"Lz4CompressDynamicArray",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Lz4CompressDynamicArray",ro:!0},{a:2,n:"MakeDatetime",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeDatetime",ro:!0},{a:2,n:"MakeString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeString",ro:!0},{a:2,n:"MakeTimespan",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MakeTimespan",ro:!0},{a:2,n:"MaterializedView",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MaterializedView",ro:!0},{a:2,n:"MaxOf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MaxOf",ro:!0},{a:2,n:"MergeTDigests",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MergeTDigests",ro:!0},{a:2,n:"MinOf",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MinOf",ro:!0},{a:2,n:"MonthOfYear",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MonthOfYear",ro:!0},{a:2,n:"NewGuid",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"NewGuid",ro:!0},{a:2,n:"Next",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Next",ro:!0},{a:2,n:"Not",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Not",ro:!0},{a:2,n:"NotEmpty_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"NotEmpty_Depricated",ro:!0},{a:2,n:"NotNull_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"NotNull_Depricated",ro:!0},{a:2,n:"Now",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Now",ro:!0},{a:2,n:"NumberToLocaleString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"NumberToLocaleString",ro:!0},{a:2,n:"PI",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PI",ro:!0},{a:2,n:"Pack",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Pack",ro:!0},{a:2,n:"PackAll",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PackAll",ro:!0},{a:2,n:"PackArray",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PackArray",ro:!0},{a:2,n:"PackDictionary",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PackDictionary",ro:!0},{a:2,n:"ParseCommandLine",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseCommandLine",ro:!0},{a:2,n:"ParseCsv",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseCsv",ro:!0},{a:2,n:"ParseIPV4",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseIPV4",ro:!0},{a:2,n:"ParseIPV4Mask",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseIPV4Mask",ro:!0},{a:2,n:"ParseIPV6",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseIPV6",ro:!0},{a:2,n:"ParseIPV6Mask",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseIPV6Mask",ro:!0},{a:2,n:"ParseJson",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseJson",ro:!0},{a:2,n:"ParseJson_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseJson_Depricated",ro:!0},{a:2,n:"ParsePath",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParsePath",ro:!0},{a:2,n:"ParseUrl",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseUrl",ro:!0},{a:2,n:"ParseUrlQuery",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseUrlQuery",ro:!0},{a:2,n:"ParseUrlQuery_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseUrlQuery_Depricated",ro:!0},{a:2,n:"ParseUrl_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseUrl_Depricated",ro:!0},{a:2,n:"ParseUserAgent",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseUserAgent",ro:!0},{a:2,n:"ParseVersion",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseVersion",ro:!0},{a:2,n:"ParseXml",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ParseXml",ro:!0},{a:2,n:"PercentRankTDigest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PercentRankTDigest",ro:!0},{a:2,n:"PercentileArrayTDigest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PercentileArrayTDigest",ro:!0},{a:2,n:"PercentileTDigest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"PercentileTDigest",ro:!0},{a:2,n:"Pow",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Pow",ro:!0},{a:2,n:"Prev",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Prev",ro:!0},{a:2,n:"Radians",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Radians",ro:!0},{a:2,n:"Rand",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Rand",ro:!0},{a:2,n:"Range",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Range",ro:!0},{a:2,n:"RankTDigest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"RankTDigest",ro:!0},{a:2,n:"RegexQuote",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"RegexQuote",ro:!0},{a:2,n:"Repeat",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Repeat",ro:!0},{a:2,n:"Replace",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Replace",ro:!0},{a:2,n:"Reverse",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Reverse",ro:!0},{a:2,n:"Round",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Round",ro:!0},{a:2,n:"RowCumSum",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"RowCumSum",ro:!0},{a:2,n:"RowNumber",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"RowNumber",ro:!0},{a:2,n:"RowRank",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"RowRank",ro:!0},{a:2,n:"RowWindowSession",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"RowWindowSession",ro:!0},{a:2,n:"RowstoreOrdinalRange",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"RowstoreOrdinalRange",ro:!0},{a:2,n:"SeriesAdd",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesAdd",ro:!0},{a:2,n:"SeriesDecompose",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesDecompose",ro:!0},{a:2,n:"SeriesDecomposeAnomalies",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesDecomposeAnomalies",ro:!0},{a:2,n:"SeriesDecomposeForecast",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesDecomposeForecast",ro:!0},{a:2,n:"SeriesDivide",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesDivide",ro:!0},{a:2,n:"SeriesEquals",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesEquals",ro:!0},{a:2,n:"SeriesFft",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFft",ro:!0},{a:2,n:"SeriesFillBackwards",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFillBackwards",ro:!0},{a:2,n:"SeriesFillConst",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFillConst",ro:!0},{a:2,n:"SeriesFillForward",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFillForward",ro:!0},{a:2,n:"SeriesFillLinear",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFillLinear",ro:!0},{a:2,n:"SeriesFir",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFir",ro:!0},{a:2,n:"SeriesFit2Lines",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFit2Lines",ro:!0},{a:2,n:"SeriesFit2LinesDynamic",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFit2LinesDynamic",ro:!0},{a:2,n:"SeriesFitLine",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFitLine",ro:!0},{a:2,n:"SeriesFitLineDynamic",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFitLineDynamic",ro:!0},{a:2,n:"SeriesFitPoly",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesFitPoly",ro:!0},{a:2,n:"SeriesGreater",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesGreater",ro:!0},{a:2,n:"SeriesGreaterEquals",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesGreaterEquals",ro:!0},{a:2,n:"SeriesIFft",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesIFft",ro:!0},{a:2,n:"SeriesIIR",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesIIR",ro:!0},{a:2,n:"SeriesLess",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesLess",ro:!0},{a:2,n:"SeriesLessEquals",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesLessEquals",ro:!0},{a:2,n:"SeriesMultiply",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesMultiply",ro:!0},{a:2,n:"SeriesNotEquals",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesNotEquals",ro:!0},{a:2,n:"SeriesOutliers",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesOutliers",ro:!0},{a:2,n:"SeriesPearsonCorrelation",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesPearsonCorrelation",ro:!0},{a:2,n:"SeriesPeriodsDetect",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesPeriodsDetect",ro:!0},{a:2,n:"SeriesPeriodsValidate",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesPeriodsValidate",ro:!0},{a:2,n:"SeriesSeasonal",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesSeasonal",ro:!0},{a:2,n:"SeriesStats",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesStats",ro:!0},{a:2,n:"SeriesStatsDynamic",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesStatsDynamic",ro:!0},{a:2,n:"SeriesSubtract",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SeriesSubtract",ro:!0},{a:2,n:"SetDifference",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SetDifference",ro:!0},{a:2,n:"SetHasElement",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SetHasElement",ro:!0},{a:2,n:"SetIntersect",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SetIntersect",ro:!0},{a:2,n:"SetUnion",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SetUnion",ro:!0},{a:2,n:"Sign",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Sign",ro:!0},{a:2,n:"Sin",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Sin",ro:!0},{a:2,n:"Split",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Split",ro:!0},{a:2,n:"Sqrt",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Sqrt",ro:!0},{a:2,n:"StartOfDay",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"StartOfDay",ro:!0},{a:2,n:"StartOfMonth",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"StartOfMonth",ro:!0},{a:2,n:"StartOfWeek",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"StartOfWeek",ro:!0},{a:2,n:"StartOfYear",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"StartOfYear",ro:!0},{a:2,n:"StoredQueryResult",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"StoredQueryResult",ro:!0},{a:2,n:"Strcat",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Strcat",ro:!0},{a:2,n:"Strcat2",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Strcat2",ro:!0},{a:2,n:"StrcatArray",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"StrcatArray",ro:!0},{a:2,n:"StrcatDelim",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"StrcatDelim",ro:!0},{a:2,n:"Strcmp",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Strcmp",ro:!0},{a:2,n:"StringSize",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"StringSize",ro:!0},{a:2,n:"Strlen",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Strlen",ro:!0},{a:2,n:"Strrep",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Strrep",ro:!0},{a:2,n:"Substring",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Substring",ro:!0},{a:2,n:"TDigestMerge",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"TDigestMerge",ro:!0},{a:2,n:"Table",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Table",ro:!0},{a:2,n:"Tan",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Tan",ro:!0},{a:2,n:"ToBool",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToBool",ro:!0},{a:2,n:"ToBoolean",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToBoolean",ro:!0},{a:2,n:"ToDateTime",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToDateTime",ro:!0},{a:2,n:"ToDecimal",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToDecimal",ro:!0},{a:2,n:"ToDouble",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToDouble",ro:!0},{a:2,n:"ToDynamic_",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToDynamic_",ro:!0},{a:2,n:"ToGuid",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToGuid",ro:!0},{a:2,n:"ToHex",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToHex",ro:!0},{a:2,n:"ToInt",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToInt",ro:!0},{a:2,n:"ToLong",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToLong",ro:!0},{a:2,n:"ToLower",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToLower",ro:!0},{a:2,n:"ToObject_Depricated",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToObject_Depricated",ro:!0},{a:2,n:"ToReal",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToReal",ro:!0},{a:2,n:"ToString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToString",ro:!0},{a:2,n:"ToTime",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToTime",ro:!0},{a:2,n:"ToTimespan",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToTimespan",ro:!0},{a:2,n:"ToUpper",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToUpper",ro:!0},{a:2,n:"ToUtf8",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ToUtf8",ro:!0},{a:2,n:"Translate",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Translate",ro:!0},{a:2,n:"TreePath",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"TreePath",ro:!0},{a:2,n:"Trim",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Trim",ro:!0},{a:2,n:"TrimEnd",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"TrimEnd",ro:!0},{a:2,n:"TrimStart",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"TrimStart",ro:!0},{a:2,n:"UnixTimeMicrosecondsToDateTime",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"UnixTimeMicrosecondsToDateTime",ro:!0},{a:2,n:"UnixTimeMillisecondsToDateTime",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"UnixTimeMillisecondsToDateTime",ro:!0},{a:2,n:"UnixTimeNanosecondsToDateTime",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"UnixTimeNanosecondsToDateTime",ro:!0},{a:2,n:"UnixTimeSecondsToDateTime",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"UnixTimeSecondsToDateTime",ro:!0},{a:2,n:"UrlDecode",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"UrlDecode",ro:!0},{a:2,n:"UrlEncode",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"UrlEncode",ro:!0},{a:2,n:"UrlEncode_Component",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"UrlEncode_Component",ro:!0},{a:2,n:"WeekOfYear",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"WeekOfYear",ro:!0},{a:2,n:"WeekOfYearISO",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"WeekOfYearISO",ro:!0},{a:2,n:"WelchTest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"WelchTest",ro:!0},{a:2,n:"Zip",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Zip",ro:!0},{a:2,n:"ZlibCompressString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ZlibCompressString",ro:!0},{a:2,n:"ZlibDecompressString",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ZlibDecompressString",ro:!0},{a:1,n:"__Property__Initializer__All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"__Property__Initializer__All"},{a:1,n:"m_ArraySort_ArraysArg",is:!0,t:4,rt:$n[1].Parameter,sn:"m_ArraySort_ArraysArg",ro:!0},{a:1,n:"m_ArraySort_NullsLastArg",is:!0,t:4,rt:$n[1].Parameter,sn:"m_ArraySort_NullsLastArg",ro:!0},{a:1,n:"s_dateDiffLiteralValues",is:!0,t:4,rt:$n[2].Array.type(System.String),sn:"s_dateDiffLiteralValues",ro:!0},{a:1,n:"s_datePartLiteralValues",is:!0,t:4,rt:$n[2].Array.type(System.String),sn:"s_datePartLiteralValues",ro:!0},{a:1,backing:!0,n:"<All>k__BackingField",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"All"}]}},$n);$m("Kusto.Language.GlobalState",function(){return{att:1048833,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol),$n[1].ClusterSymbol,$n[1].DatabaseSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol),$n[4].KustoCache,$n[0].Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.ClusterSymbol),$n[0].Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.DatabaseSymbol),$n[0].Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.TableSymbol),$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),$n[0].Dictionary$2(Kusto.Language.Symbols.OperatorKind,Kusto.Language.Symbols.OperatorSymbol),$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.CommandSymbol),$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.OptionSymbol)],pi:[{n:"clusters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol),ps:0},{n:"cluster",pt:$n[1].ClusterSymbol,ps:1},{n:"database",pt:$n[1].DatabaseSymbol,ps:2},{n:"functions",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),ps:3},{n:"aggregates",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),ps:4},{n:"plugins",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),ps:5},{n:"operators",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),ps:6},{n:"commands",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),ps:7},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol),ps:8},{n:"options",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol),ps:9},{n:"cache",pt:$n[4].KustoCache,ps:10},{n:"reverseClusterMap",pt:$n[0].Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.ClusterSymbol),ps:11},{n:"reverseDatabaseMap",pt:$n[0].Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.DatabaseSymbol),ps:12},{n:"reverseTableMap",pt:$n[0].Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.TableSymbol),ps:13},{n:"functionsMap",pt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),ps:14},{n:"aggregatesMap",pt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),ps:15},{n:"pluginMap",pt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),ps:16},{n:"operatorMap",pt:$n[0].Dictionary$2(Kusto.Language.Symbols.OperatorKind,Kusto.Language.Symbols.OperatorSymbol),ps:17},{n:"commandMap",pt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.CommandSymbol),ps:18},{n:"optionMap",pt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.OptionSymbol),ps:19}],sn:"ctor"},{a:2,n:"AddCommands",t:8,pi:[{n:"additionalCommands",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.CommandSymbol),ps:0}],sn:"AddCommands",rt:$n[4].GlobalState,p:[System.Array.type(Kusto.Language.Symbols.CommandSymbol)]},{a:2,n:"AddCommands",t:8,pi:[{n:"additionalCommands",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),ps:0}],sn:"AddCommands$1",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol)]},{a:1,n:"AddOrReplace",is:!0,t:8,pi:[{n:"list",pt:$n[0].IReadOnlyList$1(System.Object),ps:0},{n:"newElement",pt:System.Object,ps:1}],tpc:1,tprm:["T"],sn:"AddOrReplace",rt:$n[0].IReadOnlyList$1(System.Object),p:[$n[0].IReadOnlyList$1(System.Object),System.Object]},{a:2,n:"AddOrReplaceCluster",t:8,pi:[{n:"cluster",pt:$n[1].ClusterSymbol,ps:0}],sn:"AddOrReplaceCluster",rt:$n[4].GlobalState,p:[$n[1].ClusterSymbol]},{a:2,n:"AddParameters",t:8,pi:[{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.ParameterSymbol),ps:0}],sn:"AddParameters",rt:$n[4].GlobalState,p:[System.Array.type(Kusto.Language.Symbols.ParameterSymbol)]},{a:2,n:"AddParameters",t:8,pi:[{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol),ps:0}],sn:"AddParameters$1",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol)]},{a:2,n:"Copy",t:8,sn:"Copy",rt:$n[4].GlobalState},{a:2,n:"GetAggregate",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetAggregate",rt:$n[1].FunctionSymbol,p:[$n[2].String]},{a:2,n:"GetCluster",t:8,pi:[{n:"database",pt:$n[1].DatabaseSymbol,ps:0}],sn:"GetCluster",rt:$n[1].ClusterSymbol,p:[$n[1].DatabaseSymbol]},{a:2,n:"GetCluster",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetCluster$1",rt:$n[1].ClusterSymbol,p:[$n[2].String]},{a:2,n:"GetCommand",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetCommand",rt:$n[1].CommandSymbol,p:[$n[2].String]},{a:2,n:"GetDatabase",t:8,pi:[{n:"function",pt:$n[1].FunctionSymbol,ps:0}],sn:"GetDatabase",rt:$n[1].DatabaseSymbol,p:[$n[1].FunctionSymbol]},{a:2,n:"GetDatabase",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"GetDatabase$1",rt:$n[1].DatabaseSymbol,p:[$n[1].Symbol]},{a:2,n:"GetDatabase",t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0}],sn:"GetDatabase$2",rt:$n[1].DatabaseSymbol,p:[$n[1].TableSymbol]},{a:2,n:"GetFunction",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetFunction",rt:$n[1].FunctionSymbol,p:[$n[2].String]},{a:2,n:"GetOperator",t:8,pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0}],sn:"GetOperator",rt:$n[1].OperatorSymbol,p:[$n[1].OperatorKind]},{a:2,n:"GetOption",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetOption",rt:$n[1].OptionSymbol,p:[$n[2].String]},{a:2,n:"GetPlugIn",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetPlugIn",rt:$n[1].FunctionSymbol,p:[$n[2].String]},{a:2,n:"GetTable",t:8,pi:[{n:"column",pt:$n[1].ColumnSymbol,ps:0}],sn:"GetTable",rt:$n[1].TableSymbol,p:[$n[1].ColumnSymbol]},{a:2,n:"IsAggregateFunction",t:8,pi:[{n:"fn",pt:$n[1].FunctionSymbol,ps:0}],sn:"IsAggregateFunction",rt:$n[2].Boolean,p:[$n[1].FunctionSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsBuiltInFunction",t:8,pi:[{n:"fn",pt:$n[1].FunctionSymbol,ps:0}],sn:"IsBuiltInFunction",rt:$n[2].Boolean,p:[$n[1].FunctionSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsDatabaseFunction",t:8,pi:[{n:"function",pt:$n[1].FunctionSymbol,ps:0}],sn:"IsDatabaseFunction",rt:$n[2].Boolean,p:[$n[1].FunctionSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsDatabaseSymbol",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"IsDatabaseSymbol",rt:$n[2].Boolean,p:[$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsDatabaseTable",t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0}],sn:"IsDatabaseTable",rt:$n[2].Boolean,p:[$n[1].TableSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Optional",is:!0,t:8,pi:[{n:"value",pt:System.Object,ps:0}],tpc:1,tprm:["T"],sn:"Optional",rt:$n[5].Optional$1(System.Object),p:[System.Object]},{a:1,n:"With",t:8,pi:[{n:"clusters",dv:null,o:!0,pt:$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol)),ps:0},{n:"cluster",dv:null,o:!0,pt:$n[5].Optional$1(Kusto.Language.Symbols.ClusterSymbol),ps:1},{n:"database",dv:null,o:!0,pt:$n[5].Optional$1(Kusto.Language.Symbols.DatabaseSymbol),ps:2},{n:"functions",dv:null,o:!0,pt:$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol)),ps:3},{n:"aggregates",dv:null,o:!0,pt:$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol)),ps:4},{n:"plugins",dv:null,o:!0,pt:$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol)),ps:5},{n:"operators",dv:null,o:!0,pt:$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol)),ps:6},{n:"commands",dv:null,o:!0,pt:$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol)),ps:7},{n:"parameters",dv:null,o:!0,pt:$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol)),ps:8},{n:"options",dv:null,o:!0,pt:$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol)),ps:9},{n:"cache",dv:null,o:!0,pt:$n[5].Optional$1(Kusto.Language.KustoCache),ps:10}],sn:"With",rt:$n[4].GlobalState,p:[$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol)),$n[5].Optional$1(Kusto.Language.Symbols.ClusterSymbol),$n[5].Optional$1(Kusto.Language.Symbols.DatabaseSymbol),$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol)),$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol)),$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol)),$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol)),$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol)),$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol)),$n[5].Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol)),$n[5].Optional$1(Kusto.Language.KustoCache)]},{a:2,n:"WithAggregates",t:8,pi:[{n:"aggregates",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),ps:0}],sn:"WithAggregates",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol)]},{a:2,n:"WithCache",t:8,sn:"WithCache",rt:$n[4].GlobalState},{a:2,n:"WithCluster",t:8,pi:[{n:"cluster",pt:$n[1].ClusterSymbol,ps:0}],sn:"WithCluster",rt:$n[4].GlobalState,p:[$n[1].ClusterSymbol]},{a:2,n:"WithClusterList",t:8,pi:[{n:"clusters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol),ps:0}],sn:"WithClusterList",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol)]},{a:2,n:"WithCommands",t:8,pi:[{n:"commands",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),ps:0}],sn:"WithCommands",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol)]},{a:2,n:"WithDatabase",t:8,pi:[{n:"database",pt:$n[1].DatabaseSymbol,ps:0}],sn:"WithDatabase",rt:$n[4].GlobalState,p:[$n[1].DatabaseSymbol]},{a:2,n:"WithFunctions",t:8,pi:[{n:"functions",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),ps:0}],sn:"WithFunctions",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol)]},{a:2,n:"WithOperators",t:8,pi:[{n:"operators",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),ps:0}],sn:"WithOperators",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol)]},{a:2,n:"WithOptions",t:8,pi:[{n:"options",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol),ps:0}],sn:"WithOptions",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol)]},{a:2,n:"WithParameters",t:8,pi:[{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol),ps:0}],sn:"WithParameters",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol)]},{a:2,n:"WithPlugIns",t:8,pi:[{n:"plugins",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),ps:0}],sn:"WithPlugIns",rt:$n[4].GlobalState,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol)]},{a:2,n:"Aggregates",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),g:{a:2,n:"get_Aggregates",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),fg:"Aggregates"},fn:"Aggregates"},{a:2,n:"Cache",t:16,rt:$n[4].KustoCache,g:{a:2,n:"get_Cache",t:8,rt:$n[4].KustoCache,fg:"Cache"},fn:"Cache"},{a:2,n:"Cluster",t:16,rt:$n[1].ClusterSymbol,g:{a:2,n:"get_Cluster",t:8,rt:$n[1].ClusterSymbol,fg:"Cluster"},fn:"Cluster"},{a:2,n:"Clusters",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol),g:{a:2,n:"get_Clusters",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol),fg:"Clusters"},fn:"Clusters"},{a:2,n:"Commands",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),g:{a:2,n:"get_Commands",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),fg:"Commands"},fn:"Commands"},{a:2,n:"Database",t:16,rt:$n[1].DatabaseSymbol,g:{a:2,n:"get_Database",t:8,rt:$n[1].DatabaseSymbol,fg:"Database"},fn:"Database"},{a:2,n:"Default",is:!0,t:16,rt:$n[4].GlobalState,g:{a:2,n:"get_Default",t:8,rt:$n[4].GlobalState,fg:"Default",is:!0},fn:"Default"},{a:2,n:"Functions",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),g:{a:2,n:"get_Functions",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),fg:"Functions"},fn:"Functions"},{a:2,n:"Operators",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),g:{a:2,n:"get_Operators",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),fg:"Operators"},fn:"Operators"},{a:2,n:"Options",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol),g:{a:2,n:"get_Options",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol),fg:"Options"},fn:"Options"},{a:2,n:"Parameters",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol),g:{a:2,n:"get_Parameters",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol),fg:"Parameters"},fn:"Parameters"},{a:2,n:"PlugIns",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),g:{a:2,n:"get_PlugIns",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),fg:"PlugIns"},fn:"PlugIns"},{a:1,n:"aggregatesMap",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),sn:"aggregatesMap"},{a:1,n:"commandMap",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.CommandSymbol),sn:"commandMap"},{a:1,n:"functionsMap",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),sn:"functionsMap"},{a:1,n:"operatorMap",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Symbols.OperatorKind,Kusto.Language.Symbols.OperatorSymbol),sn:"operatorMap"},{a:1,n:"optionMap",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.OptionSymbol),sn:"optionMap"},{a:1,n:"pluginMap",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),sn:"pluginMap"},{a:1,n:"reverseClusterMap",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.ClusterSymbol),sn:"reverseClusterMap"},{a:1,n:"reverseDatabaseMap",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.DatabaseSymbol),sn:"reverseDatabaseMap"},{a:1,n:"reverseTableMap",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.TableSymbol),sn:"reverseTableMap"},{a:1,n:"s_default",is:!0,t:4,rt:$n[4].GlobalState,sn:"s_default"},{a:1,backing:!0,n:"<Aggregates>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"Aggregates"},{a:1,backing:!0,n:"<Cache>k__BackingField",t:4,rt:$n[4].KustoCache,sn:"Cache"},{a:1,backing:!0,n:"<Cluster>k__BackingField",t:4,rt:$n[1].ClusterSymbol,sn:"Cluster"},{a:1,backing:!0,n:"<Clusters>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol),sn:"Clusters"},{a:1,backing:!0,n:"<Commands>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"Commands"},{a:1,backing:!0,n:"<Database>k__BackingField",t:4,rt:$n[1].DatabaseSymbol,sn:"Database"},{a:1,backing:!0,n:"<Functions>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"Functions"},{a:1,backing:!0,n:"<Operators>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),sn:"Operators"},{a:1,backing:!0,n:"<Options>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol),sn:"Options"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol),sn:"Parameters"},{a:1,backing:!0,n:"<PlugIns>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"PlugIns"}]}},$n);$m("Kusto.Language.KustoCache",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[4].GlobalState],pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"ctor"},{a:2,n:"GetOrCreate",t:8,tpc:1,tprm:["T"],sn:"GetOrCreate",rt:System.Object},{a:2,n:"GetOrCreate",t:8,pi:[{n:"creator",pt:Function,ps:0}],tpc:1,tprm:["T"],sn:"GetOrCreate$1",rt:System.Object,p:[Function]},{a:2,n:"TryGetValue",t:8,pi:[{n:"value",out:!0,pt:System.Object,ps:0}],tpc:1,tprm:["T"],sn:"TryGetValue",rt:$n[2].Boolean,p:[System.Object],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"WithGlobals",t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"WithGlobals",rt:$n[4].KustoCache,p:[$n[4].GlobalState]},{a:2,n:"Globals",t:16,rt:$n[4].GlobalState,g:{a:2,n:"get_Globals",t:8,rt:$n[4].GlobalState,fg:"Globals"},fn:"Globals"},{a:1,n:"m_cache",t:4,rt:$n[0].Dictionary$2(System.Type,System.Object),sn:"m_cache",ro:!0},{a:1,backing:!0,n:"<Globals>k__BackingField",t:4,rt:$n[4].GlobalState,sn:"Globals"}]}},$n);$m("Kusto.Language.KustoCode",function(){return{att:1048833,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[4].GlobalState,$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),$n[3].SyntaxTree,$n[2].Boolean,$n[1].TypeSymbol,System.Array.type(Kusto.Language.Parsing.LexicalToken),$n[0].List$1(System.Int32),$n[7].LocalBindingCache],pi:[{n:"text",pt:$n[2].String,ps:0},{n:"kind",pt:$n[2].String,ps:1},{n:"globals",pt:$n[4].GlobalState,ps:2},{n:"grammar",pt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),ps:3},{n:"tree",pt:$n[3].SyntaxTree,ps:4},{n:"hasSemantics",pt:$n[2].Boolean,ps:5},{n:"resultType",pt:$n[1].TypeSymbol,ps:6},{n:"lexerTokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:7},{n:"lexerTokenStarts",pt:$n[0].List$1(System.Int32),ps:8},{n:"localCache",pt:$n[7].LocalBindingCache,ps:9}],sn:"ctor"},{a:2,n:"Analyze",t:8,pi:[{n:"globals",dv:null,o:!0,pt:$n[4].GlobalState,ps:0},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:1}],sn:"Analyze",rt:$n[4].KustoCode,p:[$n[4].GlobalState,$n[5].CancellationToken]},{a:1,n:"Create",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"globals",pt:$n[4].GlobalState,ps:1},{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:2},{n:"tokenStarts",pt:$n[0].List$1(System.Int32),ps:3},{n:"analyze",pt:$n[2].Boolean,ps:4},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:5}],sn:"Create",rt:$n[4].KustoCode,p:[$n[2].String,$n[4].GlobalState,System.Array.type(Kusto.Language.Parsing.LexicalToken),$n[0].List$1(System.Int32),$n[2].Boolean,$n[5].CancellationToken]},{a:1,n:"DetermineResultType",is:!0,t:8,pi:[{n:"root",pt:$n[3].SyntaxNode,ps:0}],sn:"DetermineResultType",rt:$n[1].TypeSymbol,p:[$n[3].SyntaxNode]},{a:2,n:"GetDiagnostics",t:8,pi:[{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:0}],sn:"GetDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[5].CancellationToken]},{a:2,n:"GetKind",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetKind",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"GetLexicalTokens",t:8,sn:"GetLexicalTokens",rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.LexicalToken)},{a:2,n:"GetSymbolsInScope",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"match",dv:1019,o:!0,pt:$n[1].SymbolMatch,ps:1},{n:"include",dv:7,o:!0,pt:$n[4].IncludeFunctionKind,ps:2},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:3}],sn:"GetSymbolsInScope",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),p:[$n[2].Int32,$n[1].SymbolMatch,$n[4].IncludeFunctionKind,$n[5].CancellationToken]},{a:2,n:"GetSyntaxDiagnostics",t:8,pi:[{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:0}],sn:"GetSyntaxDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[5].CancellationToken]},{a:2,n:"GetTokenIndex",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetTokenIndex",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetTokenStarts",is:!0,t:8,pi:[{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:0}],sn:"GetTokenStarts",rt:$n[0].List$1(System.Int32),p:[System.Array.type(Kusto.Language.Parsing.LexicalToken)]},{a:2,n:"Parse",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"globals",dv:null,o:!0,pt:$n[4].GlobalState,ps:1}],sn:"Parse",rt:$n[4].KustoCode,p:[$n[2].String,$n[4].GlobalState]},{a:2,n:"ParseAndAnalyze",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"globals",dv:null,o:!0,pt:$n[4].GlobalState,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"ParseAndAnalyze",rt:$n[4].KustoCode,p:[$n[2].String,$n[4].GlobalState,$n[5].CancellationToken]},{a:2,n:"TryGetLineAndOffset",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"line",out:!0,pt:$n[2].Int32,ps:1},{n:"lineOffset",out:!0,pt:$n[2].Int32,ps:2}],sn:"TryGetLineAndOffset",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"WithGlobals",t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:1}],sn:"WithGlobals",rt:$n[4].KustoCode,p:[$n[4].GlobalState,$n[5].CancellationToken]},{a:2,n:"Globals",t:16,rt:$n[4].GlobalState,g:{a:2,n:"get_Globals",t:8,rt:$n[4].GlobalState,fg:"Globals"},fn:"Globals"},{a:4,n:"Grammar",t:16,rt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),g:{a:4,n:"get_Grammar",t:8,rt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),fg:"Grammar"},fn:"Grammar"},{a:2,n:"HasSemantics",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasSemantics",t:8,rt:$n[2].Boolean,fg:"HasSemantics",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasSemantics"},{a:2,n:"Kind",t:16,rt:$n[2].String,g:{a:2,n:"get_Kind",t:8,rt:$n[2].String,fg:"Kind"},fn:"Kind"},{a:2,n:"MaxDepth",t:16,rt:$n[2].Int32,g:{a:2,n:"get_MaxDepth",t:8,rt:$n[2].Int32,fg:"MaxDepth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"MaxDepth"},{a:2,n:"ResultType",t:16,rt:$n[1].TypeSymbol,g:{a:2,n:"get_ResultType",t:8,rt:$n[1].TypeSymbol,fg:"ResultType"},fn:"ResultType"},{a:2,n:"Syntax",t:16,rt:$n[3].SyntaxNode,g:{a:2,n:"get_Syntax",t:8,rt:$n[3].SyntaxNode,fg:"Syntax"},fn:"Syntax"},{a:2,n:"Text",t:16,rt:$n[2].String,g:{a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:4,n:"Tree",t:16,rt:$n[3].SyntaxTree,g:{a:4,n:"get_Tree",t:8,rt:$n[3].SyntaxTree,fg:"Tree"},fn:"Tree"},{a:2,n:"MaxAnalyzableSyntaxDepth",is:!0,t:4,rt:$n[2].Int32,sn:"MaxAnalyzableSyntaxDepth",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"diagnostics",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"diagnostics"},{a:1,n:"lexerTokenStarts",t:4,rt:$n[0].List$1(System.Int32),sn:"lexerTokenStarts",ro:!0},{a:1,n:"lexerTokens",t:4,rt:System.Array.type(Kusto.Language.Parsing.LexicalToken),sn:"lexerTokens",ro:!0},{a:1,n:"lineStarts",t:4,rt:$n[0].List$1(System.Int32),sn:"lineStarts"},{a:1,n:"localCache",t:4,rt:$n[7].LocalBindingCache,sn:"localCache",ro:!0},{a:1,n:"syntaxDiagnostics",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"syntaxDiagnostics"},{a:1,backing:!0,n:"<Globals>k__BackingField",t:4,rt:$n[4].GlobalState,sn:"Globals"},{a:1,backing:!0,n:"<Grammar>k__BackingField",t:4,rt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),sn:"Grammar"},{a:1,backing:!0,n:"<HasSemantics>k__BackingField",t:4,rt:$n[2].Boolean,sn:"HasSemantics",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Kind>k__BackingField",t:4,rt:$n[2].String,sn:"Kind"},{a:1,backing:!0,n:"<ResultType>k__BackingField",t:4,rt:$n[1].TypeSymbol,sn:"ResultType"},{a:1,backing:!0,n:"<Text>k__BackingField",t:4,rt:$n[2].String,sn:"Text"},{a:1,backing:!0,n:"<Tree>k__BackingField",t:4,rt:$n[3].SyntaxTree,sn:"Tree"}]}},$n);$m("Kusto.Language.IncludeFunctionKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"All",is:!0,t:4,rt:$n[4].IncludeFunctionKind,sn:"All",box:function($v){return Bridge.box($v,Kusto.Language.IncludeFunctionKind,System.Enum.toStringFn(Kusto.Language.IncludeFunctionKind))}},{a:2,n:"BuiltInFunctions",is:!0,t:4,rt:$n[4].IncludeFunctionKind,sn:"BuiltInFunctions",box:function($v){return Bridge.box($v,Kusto.Language.IncludeFunctionKind,System.Enum.toStringFn(Kusto.Language.IncludeFunctionKind))}},{a:2,n:"DatabaseFunctions",is:!0,t:4,rt:$n[4].IncludeFunctionKind,sn:"DatabaseFunctions",box:function($v){return Bridge.box($v,Kusto.Language.IncludeFunctionKind,System.Enum.toStringFn(Kusto.Language.IncludeFunctionKind))}},{a:2,n:"LocalFunctions",is:!0,t:4,rt:$n[4].IncludeFunctionKind,sn:"LocalFunctions",box:function($v){return Bridge.box($v,Kusto.Language.IncludeFunctionKind,System.Enum.toStringFn(Kusto.Language.IncludeFunctionKind))}},{a:2,n:"None",is:!0,t:4,rt:$n[4].IncludeFunctionKind,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.IncludeFunctionKind,System.Enum.toStringFn(Kusto.Language.IncludeFunctionKind))}}]}},$n);$m("Kusto.Language.Operators",function(){return{att:1048960,a:4,s:!0,m:[{a:1,n:"Binary",is:!0,t:8,pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"left",pt:$n[1].TypeSymbol,ps:1},{n:"right",pt:$n[1].TypeSymbol,ps:2},{n:"result",pt:$n[1].TypeSymbol,ps:3}],sn:"Binary",rt:$n[1].OperatorSymbol,p:[$n[1].OperatorKind,$n[1].TypeSymbol,$n[1].TypeSymbol,$n[1].TypeSymbol]},{a:1,n:"StringBinary",is:!0,t:8,pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0}],sn:"StringBinary",rt:$n[1].OperatorSymbol,p:[$n[1].OperatorKind]},{a:2,n:"All",is:!0,t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),g:{a:2,n:"get_All",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),fg:"All",is:!0},fn:"All"},{a:2,n:"Add",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Add",ro:!0},{a:2,n:"And",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"And",ro:!0},{a:2,n:"BangTilde",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"BangTilde",ro:!0},{a:2,n:"Between",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Between",ro:!0},{a:2,n:"Contains",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Contains",ro:!0},{a:2,n:"ContainsCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"ContainsCs",ro:!0},{a:1,n:"DateAndTimespan",is:!0,t:4,rt:System.Array.type(Kusto.Language.Symbols.TypeSymbol),sn:"DateAndTimespan",ro:!0},{a:2,n:"Divide",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Divide",ro:!0},{a:1,n:"DynamicAddable",is:!0,t:4,rt:System.Array.type(Kusto.Language.Symbols.TypeSymbol),sn:"DynamicAddable",ro:!0},{a:2,n:"EndsWith",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"EndsWith",ro:!0},{a:2,n:"EndsWithCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"EndsWithCs",ro:!0},{a:2,n:"Equal",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Equal",ro:!0},{a:2,n:"EqualTilde",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"EqualTilde",ro:!0},{a:2,n:"GreaterThan",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"GreaterThan",ro:!0},{a:2,n:"GreaterThanOrEqual",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"GreaterThanOrEqual",ro:!0},{a:2,n:"Has",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Has",ro:!0},{a:2,n:"HasAll",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"HasAll",ro:!0},{a:2,n:"HasAny",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"HasAny",ro:!0},{a:2,n:"HasCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"HasCs",ro:!0},{a:2,n:"HasPrefix",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"HasPrefix",ro:!0},{a:2,n:"HasPrefixCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"HasPrefixCs",ro:!0},{a:2,n:"HasSuffix",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"HasSuffix",ro:!0},{a:2,n:"HasSuffixCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"HasSuffixCs",ro:!0},{a:2,n:"In",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"In",ro:!0},{a:2,n:"InCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"InCs",ro:!0},{a:2,n:"LessThan",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"LessThan",ro:!0},{a:2,n:"LessThanOrEqual",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"LessThanOrEqual",ro:!0},{a:2,n:"Like",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Like",ro:!0},{a:2,n:"LikeCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"LikeCs",ro:!0},{a:2,n:"MatchRegex",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"MatchRegex",ro:!0},{a:2,n:"Modulo",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Modulo",ro:!0},{a:2,n:"Multiply",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Multiply",ro:!0},{a:2,n:"NotBetween",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotBetween",ro:!0},{a:2,n:"NotContains",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotContains",ro:!0},{a:2,n:"NotContainsCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotContainsCs",ro:!0},{a:2,n:"NotEndsWith",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotEndsWith",ro:!0},{a:2,n:"NotEndsWithCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotEndsWithCs",ro:!0},{a:2,n:"NotEqual",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotEqual",ro:!0},{a:2,n:"NotHas",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotHas",ro:!0},{a:2,n:"NotHasCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotHasCs",ro:!0},{a:2,n:"NotHasPrefix",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotHasPrefix",ro:!0},{a:2,n:"NotHasPrefixCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotHasPrefixCs",ro:!0},{a:2,n:"NotHasSuffix",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotHasSuffix",ro:!0},{a:2,n:"NotHasSuffixCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotHasSuffixCs",ro:!0},{a:2,n:"NotIn",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotIn",ro:!0},{a:2,n:"NotInCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotInCs",ro:!0},{a:2,n:"NotLike",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotLike",ro:!0},{a:2,n:"NotLikeCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotLikeCs",ro:!0},{a:2,n:"NotStartsWith",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotStartsWith",ro:!0},{a:2,n:"NotStartsWithCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"NotStartsWithCs",ro:!0},{a:2,n:"Or",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Or",ro:!0},{a:2,n:"Search",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Search",ro:!0},{a:2,n:"StartsWith",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"StartsWith",ro:!0},{a:2,n:"StartsWithCs",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"StartsWithCs",ro:!0},{a:1,n:"StringOrDynamic",is:!0,t:4,rt:System.Array.type(Kusto.Language.Symbols.TypeSymbol),sn:"StringOrDynamic",ro:!0},{a:2,n:"Subtract",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"Subtract",ro:!0},{a:2,n:"UnaryMinus",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"UnaryMinus",ro:!0},{a:2,n:"UnaryPlus",is:!0,t:4,rt:$n[1].OperatorSymbol,sn:"UnaryPlus",ro:!0},{a:1,n:"__Property__Initializer__All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),sn:"__Property__Initializer__All"},{a:1,backing:!0,n:"<All>k__BackingField",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),sn:"All"}]}},$n);$m("Kusto.Language.Options",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol),sn:"All",ro:!0},{a:2,n:"DebugPython",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"DebugPython",ro:!0},{a:2,n:"DeferPartialQueryFailures",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"DeferPartialQueryFailures",ro:!0},{a:2,n:"DoNotImpersonate",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"DoNotImpersonate",ro:!0},{a:2,n:"MaterializedViewShuffleQuery",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"MaterializedViewShuffleQuery",ro:!0},{a:2,n:"MaxEntitiesToUnion",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"MaxEntitiesToUnion",ro:!0},{a:2,n:"MaxMemoryConsumptionPerIterator",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"MaxMemoryConsumptionPerIterator",ro:!0},{a:2,n:"MaxMemoryConsumptionPerQueryPerNode",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"MaxMemoryConsumptionPerQueryPerNode",ro:!0},{a:2,n:"MaxOutputColumns",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"MaxOutputColumns",ro:!0},{a:2,n:"NoRequestTimeout",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"NoRequestTimeout",ro:!0},{a:2,n:"NoTruncation",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"NoTruncation",ro:!0},{a:2,n:"ProgressiveProgressReportPeriod",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"ProgressiveProgressReportPeriod",ro:!0},{a:2,n:"ProgressiveQueryMinRowCountPerUpdate",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"ProgressiveQueryMinRowCountPerUpdate",ro:!0},{a:2,n:"PushSelectionThroughAggregation",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"PushSelectionThroughAggregation",ro:!0},{a:2,n:"QueryBinAutoAt",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryBinAutoAt",ro:!0},{a:2,n:"QueryBinAutoSize",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryBinAutoSize",ro:!0},{a:2,n:"QueryConsistency",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryConsistency",ro:!0},{a:2,n:"QueryCursorAfterDefault",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryCursorAfterDefault",ro:!0},{a:2,n:"QueryCursorBeforeOrAtDefault",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryCursorBeforeOrAtDefault",ro:!0},{a:2,n:"QueryCursorCurrent",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryCursorCurrent",ro:!0},{a:2,n:"QueryCursorDisabled",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryCursorDisabled",ro:!0},{a:2,n:"QueryCursorScopedTables",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryCursorScopedTables",ro:!0},{a:2,n:"QueryDataScope",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryDataScope",ro:!0},{a:2,n:"QueryDateTimeScopeColumn",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryDateTimeScopeColumn",ro:!0},{a:2,n:"QueryDateTimeScopeFrom",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryDateTimeScopeFrom",ro:!0},{a:2,n:"QueryDateTimeScopeTo",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryDateTimeScopeTo",ro:!0},{a:2,n:"QueryDistributionNodesSpanSize",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryDistributionNodesSpanSize",ro:!0},{a:2,n:"QueryFanoutNodesPercent",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryFanoutNodesPercent",ro:!0},{a:2,n:"QueryFanoutThreadsPercent",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryFanoutThreadsPercent",ro:!0},{a:2,n:"QueryForceRowLevelSecurity",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryForceRowLevelSecurity",ro:!0},{a:2,n:"QueryLanguage",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryLanguage",ro:!0},{a:2,n:"QueryNow",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryNow",ro:!0},{a:2,n:"QueryResultsApplyGetSchema",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryResultsApplyGetSchema",ro:!0},{a:2,n:"QueryResultsCacheMaxAge",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryResultsCacheMaxAge",ro:!0},{a:2,n:"QueryResultsCachePerShardEnabled",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"QueryResultsCachePerShardEnabled",ro:!0},{a:2,n:"RequestAppName",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"RequestAppName",ro:!0},{a:2,n:"RequestBlockRowLevelSecurity",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"RequestBlockRowLevelSecurity",ro:!0},{a:2,n:"RequestCalloutDisabled",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"RequestCalloutDisabled",ro:!0},{a:2,n:"RequestDescription",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"RequestDescription",ro:!0},{a:2,n:"RequestExternalTableDisabled",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"RequestExternalTableDisabled",ro:!0},{a:2,n:"RequestReadOnly",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"RequestReadOnly",ro:!0},{a:2,n:"RequestRemoteEntitiesDisabled",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"RequestRemoteEntitiesDisabled",ro:!0},{a:2,n:"RequestSandboxedExecutionDisabled",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"RequestSandboxedExecutionDisabled",ro:!0},{a:2,n:"RequestUser",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"RequestUser",ro:!0},{a:2,n:"ResultsProgressiveEnabled",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"ResultsProgressiveEnabled",ro:!0},{a:2,n:"ServerTimeout",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"ServerTimeout",ro:!0},{a:2,n:"TakeMaxRecords",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"TakeMaxRecords",ro:!0},{a:2,n:"TruncationMaxRecords",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"TruncationMaxRecords",ro:!0},{a:2,n:"TruncationMaxSize",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"TruncationMaxSize",ro:!0},{a:2,n:"ValidatePermissions",is:!0,t:4,rt:$n[1].OptionSymbol,sn:"ValidatePermissions",ro:!0}]}},$n);$m("Kusto.Language.KustoFacts",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"BracketNameIfNecessary",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"BracketNameIfNecessary",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"CanBeIdentifier",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"CanBeIdentifier",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"DecodeDoubleQuotes",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2},{n:"quote",pt:$n[2].Char,ps:3}],sn:"DecodeDoubleQuotes",rt:$n[2].String,p:[$n[2].String,$n[2].Int32,$n[2].Int32,$n[2].Char]},{a:1,n:"DecodeEscapes",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"DecodeEscapes",rt:$n[2].String,p:[$n[2].String,$n[2].Int32,$n[2].Int32]},{a:1,n:"DecodeHex",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"index",ref:!0,pt:$n[2].Int32,ps:1}],sn:"DecodeHex",rt:$n[2].Char,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Char,String.fromCharCode,System.Char.getHashCode)}},{a:1,n:"DecodeOctal",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"index",ref:!0,pt:$n[2].Int32,ps:1}],sn:"DecodeOctal",rt:$n[2].Char,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Char,String.fromCharCode,System.Char.getHashCode)}},{a:2,n:"GetBracketedName",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetBracketedName",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"GetDoubleQuotedStringLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetDoubleQuotedStringLiteral",rt:$n[2].String,p:[$n[2].String]},{a:1,n:"GetEscapedString",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"escapes",pt:$n[0].IReadOnlyDictionary$2(System.Char,System.String),ps:1}],sn:"GetEscapedString",rt:$n[2].String,p:[$n[2].String,$n[0].IReadOnlyDictionary$2(System.Char,System.String)]},{a:2,n:"GetExpressionResultName",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0},{n:"defaultName",dv:"",o:!0,pt:$n[2].String,ps:1},{n:"rowScope",dv:null,o:!0,pt:$n[1].TableSymbol,ps:2}],sn:"GetExpressionResultName",rt:$n[2].String,p:[$n[3].Expression,$n[2].String,$n[1].TableSymbol]},{a:2,n:"GetHostName",is:!0,t:8,pi:[{n:"clusterUriOrName",pt:$n[2].String,ps:0}],sn:"GetHostName",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"GetMultiLineStringLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetMultiLineStringLiteral",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"GetSingleQuotedStringLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetSingleQuotedStringLiteral",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"GetStringLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetStringLiteral",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"GetStringLiteralValue",is:!0,t:8,pi:[{n:"literal",pt:$n[2].String,ps:0}],sn:"GetStringLiteralValue",rt:$n[2].String,p:[$n[2].String]},{a:1,n:"HasInteriorQuote",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"end",pt:$n[2].Int32,ps:2},{n:"quote",pt:$n[2].Char,ps:3}],sn:"HasInteriorQuote",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].Int32,$n[2].Char],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IndexOf",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"textStart",pt:$n[2].Int32,ps:1},{n:"value",pt:$n[2].String,ps:2},{n:"valueStart",pt:$n[2].Int32,ps:3},{n:"valueLength",pt:$n[2].Int32,ps:4}],sn:"IndexOf",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32,$n[2].String,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"IsClusterHostName",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"hostName",pt:$n[2].String,ps:1}],sn:"IsClusterHostName",rt:$n[2].Boolean,p:[$n[2].String,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsClusterShortName",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"hostName",pt:$n[2].String,ps:1}],sn:"IsClusterShortName",rt:$n[2].Boolean,p:[$n[2].String,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsKeyword",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"IsKeyword",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsKeywordThatCanBeIdentifier",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"IsKeywordThatCanBeIdentifier",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsKustoWindowsNet",is:!0,t:8,pi:[{n:"hostname",pt:$n[2].String,ps:0}],sn:"IsKustoWindowsNet",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Matches",is:!0,t:8,pi:[{n:"pattern",pt:$n[2].String,ps:0},{n:"text",pt:$n[2].String,ps:1}],sn:"Matches",rt:$n[2].Boolean,p:[$n[2].String,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Matches",is:!0,t:8,pi:[{n:"pattern",pt:$n[2].String,ps:0},{n:"patternSegmentStart",pt:$n[2].Int32,ps:1},{n:"text",pt:$n[2].String,ps:2},{n:"textPosition",pt:$n[2].Int32,ps:3}],sn:"Matches$1",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryParseMultiLineStringLiteral",is:!0,t:8,pi:[{n:"str",pt:$n[2].String,ps:0},{n:"literal",out:!0,pt:$n[2].String,ps:1}],sn:"TryParseMultiLineStringLiteral",rt:$n[2].Boolean,p:[$n[2].String,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryParseSimpleStringLiteral",is:!0,t:8,pi:[{n:"str",pt:$n[2].String,ps:0},{n:"quote",pt:$n[2].String,ps:1},{n:"literal",out:!0,pt:$n[2].String,ps:2}],sn:"TryParseSimpleStringLiteral",rt:$n[2].Boolean,p:[$n[2].String,$n[2].String,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"UnionIsFuzzyProperty",is:!0,t:16,rt:$n[2].String,g:{a:2,n:"get_UnionIsFuzzyProperty",t:8,rt:$n[2].String,fg:"UnionIsFuzzyProperty",is:!0},fn:"UnionIsFuzzyProperty"},{a:2,n:"AgoExamples",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"AgoExamples",ro:!0},{a:2,n:"AlternateMultiLineStringQuote",is:!0,t:4,rt:$n[2].String,sn:"AlternateMultiLineStringQuote",ro:!0},{a:2,n:"ChartAxis",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ChartAxis",ro:!0},{a:2,n:"ChartKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ChartKinds",ro:!0},{a:2,n:"ChartLegends",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ChartLegends",ro:!0},{a:2,n:"ChartProperties",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ChartProperties",ro:!0},{a:2,n:"ChartTypes",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ChartTypes",ro:!0},{a:2,n:"ChartYSplit",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ChartYSplit",ro:!0},{a:2,n:"DataScopeValues",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"DataScopeValues",ro:!0},{a:2,n:"DistributionHintStrategies",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"DistributionHintStrategies",ro:!0},{a:2,n:"ExtendedParamTypes",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ExtendedParamTypes",ro:!0},{a:2,n:"ForkOperatorKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),sn:"ForkOperatorKinds",ro:!0},{a:2,n:"HiddenChartTypes",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"HiddenChartTypes",ro:!0},{a:1,n:"HostNamePrefix",is:!0,t:4,rt:$n[2].String,sn:"HostNamePrefix",ro:!0},{a:2,n:"JoinHintRemotes",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"JoinHintRemotes",ro:!0},{a:2,n:"JoinHintStrategies",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"JoinHintStrategies",ro:!0},{a:2,n:"JoinKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"JoinKinds",ro:!0},{a:2,n:"KnownQueryOperatorParameterNames",is:!0,t:4,rt:$n[2].Array.type(System.String),sn:"KnownQueryOperatorParameterNames"},{a:1,n:"KustoWindowsNet",is:!0,t:4,rt:$n[2].String,sn:"KustoWindowsNet",ro:!0},{a:2,n:"LimitExamples",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"LimitExamples",ro:!0},{a:2,n:"MultiLineStringQuote",is:!0,t:4,rt:$n[2].String,sn:"MultiLineStringQuote",ro:!0},{a:2,n:"MvExpandKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"MvExpandKinds",ro:!0},{a:2,n:"OrderByHintStrategies",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"OrderByHintStrategies",ro:!0},{a:2,n:"ParamTypes",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ParamTypes",ro:!0},{a:2,n:"ParseKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ParseKinds",ro:!0},{a:2,n:"PostPipeOperatorKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),sn:"PostPipeOperatorKinds",ro:!0},{a:2,n:"ReduceByKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ReduceByKinds",ro:!0},{a:2,n:"ScanOperatorKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ScanOperatorKinds",ro:!0},{a:2,n:"SearchKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"SearchKinds",ro:!0},{a:2,n:"StorageTypes",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"StorageTypes",ro:!0},{a:2,n:"SummarizeHintStrategies",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"SummarizeHintStrategies",ro:!0},{a:2,n:"ToScalarKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ToScalarKinds",ro:!0},{a:2,n:"ToTableKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ToTableKinds",ro:!0},{a:2,n:"TopExamples",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"TopExamples",ro:!0},{a:2,n:"UnionKinds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"UnionKinds",ro:!0},{a:2,n:"UnionWithSourceProperties",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"UnionWithSourceProperties",ro:!0},{a:2,n:"VisibleChartTypes",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"VisibleChartTypes",ro:!0},{a:1,n:"doubleQuoteStringEscapes",is:!0,t:4,rt:$n[0].Dictionary$2(System.Char,System.String),sn:"doubleQuoteStringEscapes"},{a:1,n:"singleQuoteStringEscapes",is:!0,t:4,rt:$n[0].Dictionary$2(System.Char,System.String),sn:"singleQuoteStringEscapes"}]}},$n);$m("Kusto.Language.PlugIns",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"GetPlugIn",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetPlugIn",rt:$n[1].FunctionSymbol,p:[$n[2].String]},{a:2,n:"All",is:!0,t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),g:{a:2,n:"get_All",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),fg:"All",is:!0},fn:"All"},{a:2,n:"ActiveUseCounts",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ActiveUseCounts",ro:!0},{a:2,n:"ActivityCountsMetrics",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ActivityCountsMetrics",ro:!0},{a:2,n:"ActivityEngagement",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ActivityEngagement",ro:!0},{a:2,n:"ActivityMetrics",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ActivityMetrics",ro:!0},{a:2,n:"AutoCluster",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"AutoCluster",ro:!0},{a:2,n:"AutoClusterColumns",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),sn:"AutoClusterColumns",ro:!0},{a:2,n:"AzureDigitalTwinsQueryRequest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"AzureDigitalTwinsQueryRequest",ro:!0},{a:2,n:"BagUnpack",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"BagUnpack",ro:!0},{a:2,n:"Basket",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Basket",ro:!0},{a:2,n:"BasketColumns",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),sn:"BasketColumns",ro:!0},{a:2,n:"CSharp",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CSharp",ro:!0},{a:2,n:"CosmosdbSqlRequest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"CosmosdbSqlRequest",ro:!0},{a:2,n:"DCountIntersect",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DCountIntersect",ro:!0},{a:2,n:"DiffPatterns",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"DiffPatterns",ro:!0},{a:2,n:"DiffPatternsColumns",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),sn:"DiffPatternsColumns",ro:!0},{a:2,n:"EstimateRowsCount",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"EstimateRowsCount",ro:!0},{a:2,n:"ExecuteQuery",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExecuteQuery",ro:!0},{a:2,n:"ExecuteShowCommand",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExecuteShowCommand",ro:!0},{a:2,n:"ExternalDatatable",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"ExternalDatatable",ro:!0},{a:2,n:"FunnelSequence",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"FunnelSequence",ro:!0},{a:2,n:"FunnelSequenceCompletion",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"FunnelSequenceCompletion",ro:!0},{a:2,n:"HttpRequest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HttpRequest",ro:!0},{a:2,n:"HttpRequestColumns",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),sn:"HttpRequestColumns",ro:!0},{a:2,n:"HttpRequestPost",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"HttpRequestPost",ro:!0},{a:2,n:"Identity",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Identity",ro:!0},{a:2,n:"IdentityV3",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"IdentityV3",ro:!0},{a:2,n:"InferStorageSchema",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"InferStorageSchema",ro:!0},{a:2,n:"MySqlRequest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"MySqlRequest",ro:!0},{a:2,n:"Narrow",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Narrow",ro:!0},{a:2,n:"NarrowColumns",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),sn:"NarrowColumns",ro:!0},{a:2,n:"NewActivityMetrics",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"NewActivityMetrics",ro:!0},{a:2,n:"Pivot",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Pivot",ro:!0},{a:2,n:"Preview",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Preview",ro:!0},{a:2,n:"Python",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"Python",ro:!0},{a:2,n:"R",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"R",ro:!0},{a:2,n:"RollingPercentile",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"RollingPercentile",ro:!0},{a:2,n:"RowsNear",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"RowsNear",ro:!0},{a:1,n:"SD_Dimension",is:!0,t:4,rt:$n[1].Parameter,sn:"SD_Dimension",ro:!0},{a:1,n:"SD_Expr",is:!0,t:4,rt:$n[1].Parameter,sn:"SD_Expr",ro:!0},{a:1,n:"SD_MaxSequenceSpan",is:!0,t:4,rt:$n[1].Parameter,sn:"SD_MaxSequenceSpan",ro:!0},{a:1,n:"SD_MaxSequenceStepWindows",is:!0,t:4,rt:$n[1].Parameter,sn:"SD_MaxSequenceStepWindows",ro:!0},{a:1,n:"SD_TimelineColumn",is:!0,t:4,rt:$n[1].Parameter,sn:"SD_TimelineColumn",ro:!0},{a:2,n:"SchemaMerge",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SchemaMerge",ro:!0},{a:2,n:"SequenceDetect",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SequenceDetect",ro:!0},{a:2,n:"SessionCount",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SessionCount",ro:!0},{a:2,n:"SlidingWindowCounts",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SlidingWindowCounts",ro:!0},{a:2,n:"SqlRequest",is:!0,t:4,rt:$n[1].FunctionSymbol,sn:"SqlRequest",ro:!0},{a:1,n:"__Property__Initializer__All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"__Property__Initializer__All"},{a:1,n:"nam_Cohort",is:!0,t:4,rt:$n[1].Parameter,sn:"nam_Cohort"},{a:1,n:"nam_Dimension",is:!0,t:4,rt:$n[1].Parameter,sn:"nam_Dimension"},{a:1,n:"nam_End",is:!0,t:4,rt:$n[1].Parameter,sn:"nam_End"},{a:1,n:"nam_IdColumn",is:!0,t:4,rt:$n[1].Parameter,sn:"nam_IdColumn"},{a:1,n:"nam_Lookback",is:!0,t:4,rt:$n[1].Parameter,sn:"nam_Lookback"},{a:1,n:"nam_Start",is:!0,t:4,rt:$n[1].Parameter,sn:"nam_Start"},{a:1,n:"nam_TimelineColumn",is:!0,t:4,rt:$n[1].Parameter,sn:"nam_TimelineColumn"},{a:1,n:"nam_Window",is:!0,t:4,rt:$n[1].Parameter,sn:"nam_Window"},{a:1,n:"s_nameToPlugInMap",is:!0,t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),sn:"s_nameToPlugInMap"},{a:1,backing:!0,n:"<All>k__BackingField",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"All"}]}},$n);$m("Kusto.Language.QueryOperatorParameters",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"AllKnownParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"AllKnownParameters",ro:!0},{a:2,n:"AsParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"AsParameters",ro:!0},{a:2,n:"BagExpansion",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"BagExpansion",ro:!0},{a:2,n:"Characters",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"Characters",ro:!0},{a:2,n:"ConsumeParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"ConsumeParameters",ro:!0},{a:2,n:"DataTableParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"DataTableParameters",ro:!0},{a:2,n:"DecodeBlocks",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"DecodeBlocks",ro:!0},{a:2,n:"DistinctParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"DistinctParameters",ro:!0},{a:2,n:"EvaluateParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"EvaluateParameters",ro:!0},{a:2,n:"ExternalDataWithClauseProperties",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"ExternalDataWithClauseProperties",ro:!0},{a:2,n:"FilterParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"FilterParameters",ro:!0},{a:2,n:"FindParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"FindParameters",ro:!0},{a:2,n:"Flags",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"Flags",ro:!0},{a:2,n:"HintDotConcurrency",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"HintDotConcurrency",ro:!0},{a:2,n:"HintDotDistribution",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"HintDotDistribution",ro:!0},{a:2,n:"HintDotMaterialized",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"HintDotMaterialized",ro:!0},{a:2,n:"HintDotNumPartitions",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"HintDotNumPartitions",ro:!0},{a:2,n:"HintDotProgressiveTop",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"HintDotProgressiveTop",ro:!0},{a:2,n:"HintDotRemote",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"HintDotRemote",ro:!0},{a:2,n:"HintDotShuffleKey",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"HintDotShuffleKey",ro:!0},{a:2,n:"HintDotSpread",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"HintDotSpread",ro:!0},{a:2,n:"HintDotStrategy",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"HintDotStrategy",ro:!0},{a:2,n:"IsFuzzy",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"IsFuzzy",ro:!0},{a:2,n:"JoinParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"JoinParameters",ro:!0},{a:2,n:"Kind",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"Kind",ro:!0},{a:2,n:"LookupParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"LookupParameters",ro:!0},{a:2,n:"MakeSeriesParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"MakeSeriesParameters",ro:!0},{a:2,n:"MvApplyParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"MvApplyParameters",ro:!0},{a:2,n:"MvExpandParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"MvExpandParameters",ro:!0},{a:2,n:"ParseParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"ParseParameters",ro:!0},{a:2,n:"PartitionParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"PartitionParameters",ro:!0},{a:2,n:"ReduceParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"ReduceParameters",ro:!0},{a:2,n:"ReduceWithParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"ReduceWithParameters",ro:!0},{a:2,n:"RenderAccumulate",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"RenderAccumulate",ro:!0},{a:2,n:"RenderByDeprecated",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"RenderByDeprecated",ro:!0},{a:2,n:"RenderKind",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"RenderKind",ro:!0},{a:2,n:"RenderParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"RenderParameters",ro:!0},{a:2,n:"RenderTitle",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"RenderTitle",ro:!0},{a:2,n:"RenderWithDeprecated",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"RenderWithDeprecated",ro:!0},{a:2,n:"RenderWithProperties",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"RenderWithProperties",ro:!0},{a:2,n:"SampleDistinctParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"SampleDistinctParameters",ro:!0},{a:2,n:"SampleParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"SampleParameters",ro:!0},{a:2,n:"ScanParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"ScanParameters",ro:!0},{a:2,n:"SearchParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"SearchParameters",ro:!0},{a:2,n:"SerializedParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"SerializedParameters",ro:!0},{a:2,n:"SortParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"SortParameters",ro:!0},{a:2,n:"SummarizeParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"SummarizeParameters",ro:!0},{a:2,n:"TakeParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"TakeParameters",ro:!0},{a:2,n:"Threshold",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"Threshold",ro:!0},{a:2,n:"ToScalarKindParameter",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"ToScalarKindParameter",ro:!0},{a:2,n:"ToTableKindParameter",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"ToTableKindParameter",ro:!0},{a:2,n:"TopParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"TopParameters",ro:!0},{a:2,n:"UnionParameters",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),sn:"UnionParameters",ro:!0},{a:2,n:"WithItemIndex",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"WithItemIndex",ro:!0},{a:2,n:"WithMatchId",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"WithMatchId",ro:!0},{a:2,n:"WithSource",is:!0,t:4,rt:$n[4].QueryOperatorParameter,sn:"WithSource",ro:!0}]}},$n);$m("Kusto.Language.QueryOperatorParameterValueKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"BoolLiteral",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"BoolLiteral",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"Column",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"Column",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"ColumnList",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"ColumnList",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"IntegerLiteral",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"IntegerLiteral",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"NameDeclaration",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"NameDeclaration",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"NumericLiteral",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"NumericLiteral",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"ScalarLiteral",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"ScalarLiteral",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"StringLiteral",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"StringLiteral",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"SummableLiteral",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"SummableLiteral",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"Word",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"Word",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:2,n:"WordOrNumber",is:!0,t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"WordOrNumber",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}}]}},$n);$m("Kusto.Language.QueryOperatorParameter",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[4].QueryOperatorParameterValueKind,$n[2].Boolean,$n[0].IEnumerable$1(System.String),$n[2].Boolean,$n[0].IReadOnlyList$1(System.String)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"kind",pt:$n[4].QueryOperatorParameterValueKind,ps:1},{n:"caseSensitive",dv:!0,o:!0,pt:$n[2].Boolean,ps:2},{n:"values",dv:null,o:!0,pt:$n[0].IEnumerable$1(System.String),ps:3},{n:"isRepeatable",dv:!1,o:!0,pt:$n[2].Boolean,ps:4},{n:"aliases",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.String),ps:5}],sn:"$ctor1"},{a:1,n:".ctor",t:1,p:[$n[2].String,$n[4].QueryOperatorParameterValueKind,$n[2].Boolean,$n[0].IEnumerable$1(System.String),$n[2].Boolean,$n[2].Boolean,$n[2].Boolean,$n[0].IReadOnlyList$1(System.String)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"kind",pt:$n[4].QueryOperatorParameterValueKind,ps:1},{n:"isCaseSensitive",pt:$n[2].Boolean,ps:2},{n:"values",pt:$n[0].IEnumerable$1(System.String),ps:3},{n:"isRepeatable",pt:$n[2].Boolean,ps:4},{n:"isHidden",pt:$n[2].Boolean,ps:5},{n:"hasNoEquals",pt:$n[2].Boolean,ps:6},{n:"aliases",pt:$n[0].IReadOnlyList$1(System.String),ps:7}],sn:"ctor"},{a:2,n:"Hide",t:8,sn:"Hide",rt:$n[4].QueryOperatorParameter},{a:2,n:"WithHasNoEquals",t:8,pi:[{n:"hasNoEquals",pt:$n[2].Boolean,ps:0}],sn:"WithHasNoEquals",rt:$n[4].QueryOperatorParameter,p:[$n[2].Boolean]},{a:2,n:"WithIsHidden",t:8,pi:[{n:"isHidden",pt:$n[2].Boolean,ps:0}],sn:"WithIsHidden",rt:$n[4].QueryOperatorParameter,p:[$n[2].Boolean]},{a:2,n:"WithValues",t:8,pi:[{n:"values",pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"WithValues",rt:$n[4].QueryOperatorParameter,p:[$n[0].IReadOnlyList$1(System.String)]},{a:2,n:"Aliases",t:16,rt:$n[0].IReadOnlyList$1(System.String),g:{a:2,n:"get_Aliases",t:8,rt:$n[0].IReadOnlyList$1(System.String),fg:"Aliases"},fn:"Aliases"},{a:2,n:"HasNoEquals",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasNoEquals",t:8,rt:$n[2].Boolean,fg:"HasNoEquals",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasNoEquals"},{a:2,n:"IsCaseSensitive",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsCaseSensitive",t:8,rt:$n[2].Boolean,fg:"IsCaseSensitive",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsCaseSensitive"},{ov:!0,a:2,n:"IsHidden",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsHidden",t:8,rt:$n[2].Boolean,fg:"IsHidden",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsHidden"},{a:2,n:"IsRepeatable",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsRepeatable",t:8,rt:$n[2].Boolean,fg:"IsRepeatable",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsRepeatable"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{a:2,n:"ValueKind",t:16,rt:$n[4].QueryOperatorParameterValueKind,g:{a:2,n:"get_ValueKind",t:8,rt:$n[4].QueryOperatorParameterValueKind,fg:"ValueKind",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},fn:"ValueKind"},{a:2,n:"Values",t:16,rt:$n[0].IReadOnlyList$1(System.String),g:{a:2,n:"get_Values",t:8,rt:$n[0].IReadOnlyList$1(System.String),fg:"Values"},fn:"Values"},{a:1,n:"_isHidden",t:4,rt:$n[2].Boolean,sn:"_isHidden",ro:!0,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Aliases>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"Aliases"},{a:1,backing:!0,n:"<HasNoEquals>k__BackingField",t:4,rt:$n[2].Boolean,sn:"HasNoEquals",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<IsCaseSensitive>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsCaseSensitive",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<IsRepeatable>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsRepeatable",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<ValueKind>k__BackingField",t:4,rt:$n[4].QueryOperatorParameterValueKind,sn:"ValueKind",box:function($v){return Bridge.box($v,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))}},{a:1,backing:!0,n:"<Values>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"Values"}]}},$n);$m("Kusto.Language.TestHelpers",function(){return{att:1048960,a:4,s:!0,m:[{a:2,n:"Bind",is:!0,t:8,pi:[{n:"syntax",pt:$n[3].SyntaxNode,ps:0},{n:"globals",pt:$n[4].GlobalState,ps:1}],sn:"Bind",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[4].GlobalState]},{a:2,n:"GetGlobalExpansionCacheSize",is:!0,t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"GetGlobalExpansionCacheSize",rt:$n[2].Int32,p:[$n[4].GlobalState],box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Utils.CancellationToken",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[Function],pi:[{n:"fnCanceled",dv:null,o:!0,pt:Function,ps:0}],sn:"$ctor1"},{a:2,n:"ThrowIfCancellationRequested",t:8,sn:"ThrowIfCancellationRequested",rt:$n[2].Void},{a:1,n:"_fnCanceled",t:4,rt:Function,sn:"_fnCanceled",ro:!0}]}},$n);$m("Kusto.Language.Utils.ConvertHelper",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"ChangeType",is:!0,t:8,pi:[{n:"value",pt:$n[2].Object,ps:0},{n:"sample",pt:$n[2].Object,ps:1}],sn:"ChangeType",rt:$n[2].Object,p:[$n[2].Object,$n[2].Object]}]}},$n);$m("Kusto.Language.Utils.EditString",function(){return{nested:[$n[5].EditString.EditMap],att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ctor"},{a:1,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[5].EditString.EditMap],pi:[{n:"originalText",pt:$n[2].String,ps:0},{n:"currentText",pt:$n[2].String,ps:1},{n:"map",pt:$n[5].EditString.EditMap,ps:2}],sn:"$ctor1"},{a:2,n:"Apply",t:8,pi:[{n:"edit",pt:$n[5].StringEdit,ps:0}],sn:"Apply",rt:$n[5].EditString,p:[$n[5].StringEdit]},{a:2,n:"ApplyAll",t:8,pi:[{n:"edits",pt:$n[0].IReadOnlyList$1(Kusto.Language.Utils.StringEdit),ps:0}],sn:"ApplyAll",rt:$n[5].EditString,p:[$n[0].IReadOnlyList$1(Kusto.Language.Utils.StringEdit)]},{a:2,n:"GetCurrentPosition",t:8,pi:[{n:"originalPosition",pt:$n[2].Int32,ps:0},{n:"bias",dv:1,o:!0,pt:$n[5].PositionBias,ps:1}],sn:"GetCurrentPosition",rt:$n[2].Int32,p:[$n[2].Int32,$n[5].PositionBias],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetOriginalPosition",t:8,pi:[{n:"currentPosition",pt:$n[2].Int32,ps:0},{n:"bias",dv:1,o:!0,pt:$n[5].PositionBias,ps:1}],sn:"GetOriginalPosition",rt:$n[2].Int32,p:[$n[2].Int32,$n[5].PositionBias],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"IndexOf",t:8,pi:[{n:"value",pt:$n[2].String,ps:0}],sn:"IndexOf",rt:$n[2].Int32,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Insert",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"text",pt:$n[2].String,ps:1}],sn:"Insert",rt:$n[5].EditString,p:[$n[2].Int32,$n[2].String]},{a:2,n:"Remove",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"Remove",rt:$n[5].EditString,p:[$n[2].Int32,$n[2].Int32]},{a:2,n:"RemoveBlankLines",t:8,sn:"RemoveBlankLines",rt:$n[5].EditString},{a:2,n:"Replace",t:8,pi:[{n:"oldValue",pt:$n[2].String,ps:0},{n:"newValue",pt:$n[2].String,ps:1}],sn:"Replace",rt:$n[5].EditString,p:[$n[2].String,$n[2].String]},{a:2,n:"ReplaceAt",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1},{n:"text",pt:$n[2].String,ps:2}],sn:"ReplaceAt",rt:$n[5].EditString,p:[$n[2].Int32,$n[2].Int32,$n[2].String]},{a:2,n:"ReplaceLineBreaks",t:8,pi:[{n:"newValue",pt:$n[2].String,ps:0}],sn:"ReplaceLineBreaks",rt:$n[5].EditString,p:[$n[2].String]},{a:2,n:"Substring",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"Substring",rt:$n[5].EditString,p:[$n[2].Int32,$n[2].Int32]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[2].String},{a:2,n:"op_Implicit",is:!0,t:8,pi:[{n:"editString",pt:$n[5].EditString,ps:0}],sn:"op_Implicit$1",rt:$n[2].String,p:[$n[5].EditString]},{a:2,n:"op_Implicit",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"op_Implicit",rt:$n[5].EditString,p:[$n[2].String]},{a:2,n:"CurrentText",t:16,rt:$n[2].String,g:{a:2,n:"get_CurrentText",t:8,rt:$n[2].String,fg:"CurrentText"},fn:"CurrentText"},{a:2,n:"Item",t:16,rt:$n[2].Char,p:[$n[2].Int32],i:!0,ipi:[{n:"index",pt:$n[2].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"getItem",rt:$n[2].Char,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Char,String.fromCharCode,System.Char.getHashCode)}}},{a:2,n:"Length",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Length",t:8,rt:$n[2].Int32,fg:"Length",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Length"},{a:2,n:"OriginalText",t:16,rt:$n[2].String,g:{a:2,n:"get_OriginalText",t:8,rt:$n[2].String,fg:"OriginalText"},fn:"OriginalText"},{a:1,n:"_map",t:4,rt:$n[5].EditString.EditMap,sn:"_map"},{a:1,backing:!0,n:"<CurrentText>k__BackingField",t:4,rt:$n[2].String,sn:"CurrentText"},{a:1,backing:!0,n:"<OriginalText>k__BackingField",t:4,rt:$n[2].String,sn:"OriginalText"}]}},$n);$m("Kusto.Language.Utils.EditString.EditMap",function(){return{td:$n[5].EditString,nested:[$n[5].EditString.EditMap.Edit],att:1048579,a:1,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:1,n:".ctor",t:1,p:[$n[5].SafeList$1(Kusto.Language.Utils.EditString.EditMap.Edit)],pi:[{n:"edits",pt:$n[5].SafeList$1(Kusto.Language.Utils.EditString.EditMap.Edit),ps:0}],sn:"$ctor1"},{a:2,n:"Delete",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"Delete",rt:$n[5].EditString.EditMap,p:[$n[2].Int32,$n[2].Int32]},{a:2,n:"GetSourcePosition",t:8,pi:[{n:"targetPosition",pt:$n[2].Int32,ps:0},{n:"bias",dv:1,o:!0,pt:$n[5].PositionBias,ps:1}],sn:"GetSourcePosition",rt:$n[2].Int32,p:[$n[2].Int32,$n[5].PositionBias],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetTargetPosition",t:8,pi:[{n:"sourcePosition",pt:$n[2].Int32,ps:0},{n:"bias",dv:1,o:!0,pt:$n[5].PositionBias,ps:1}],sn:"GetTargetPosition",rt:$n[2].Int32,p:[$n[2].Int32,$n[5].PositionBias],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Insert",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"Insert",rt:$n[5].EditString.EditMap,p:[$n[2].Int32,$n[2].Int32]},{a:2,n:"Replace",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"deleteLength",pt:$n[2].Int32,ps:1},{n:"insertLength",pt:$n[2].Int32,ps:2}],sn:"Replace",rt:$n[5].EditString.EditMap,p:[$n[2].Int32,$n[2].Int32,$n[2].Int32]},{a:2,n:"ReplaceAll",t:8,pi:[{n:"edits",pt:$n[0].IReadOnlyList$1(Kusto.Language.Utils.EditString.EditMap.Edit),ps:0}],sn:"ReplaceAll",rt:$n[5].EditString.EditMap,p:[$n[0].IReadOnlyList$1(Kusto.Language.Utils.EditString.EditMap.Edit)]},{a:1,n:"Translate",is:!0,t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"deleteLength",pt:$n[2].Int32,ps:2},{n:"insertLength",pt:$n[2].Int32,ps:3},{n:"bias",pt:$n[5].PositionBias,ps:4}],sn:"Translate",rt:$n[2].Int32,p:[$n[2].Int32,$n[2].Int32,$n[2].Int32,$n[2].Int32,$n[5].PositionBias],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Edits",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Utils.EditString.EditMap.Edit),g:{a:2,n:"get_Edits",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Utils.EditString.EditMap.Edit),fg:"Edits"},fn:"Edits"},{a:1,n:"_edits",t:4,rt:$n[5].SafeList$1(Kusto.Language.Utils.EditString.EditMap.Edit),sn:"_edits"}]}},$n);$m("Kusto.Language.Utils.EditString.EditMap.Edit",function(){return{td:$n[5].EditString.EditMap,att:1048842,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].Int32,$n[2].Int32,$n[2].Int32],pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"deleteLength",pt:$n[2].Int32,ps:1},{n:"insertLength",pt:$n[2].Int32,ps:2}],sn:"$ctor1"},{a:2,n:"DeleteLength",t:16,rt:$n[2].Int32,g:{a:2,n:"get_DeleteLength",t:8,rt:$n[2].Int32,fg:"DeleteLength",box:function($v){return Bridge.box($v,System.Int32)}},fn:"DeleteLength"},{a:2,n:"InsertLength",t:16,rt:$n[2].Int32,g:{a:2,n:"get_InsertLength",t:8,rt:$n[2].Int32,fg:"InsertLength",box:function($v){return Bridge.box($v,System.Int32)}},fn:"InsertLength"},{a:2,n:"Start",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Start",t:8,rt:$n[2].Int32,fg:"Start",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Start"},{a:1,backing:!0,n:"<DeleteLength>k__BackingField",t:4,rt:$n[2].Int32,sn:"DeleteLength",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<InsertLength>k__BackingField",t:4,rt:$n[2].Int32,sn:"InsertLength",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Start>k__BackingField",t:4,rt:$n[2].Int32,sn:"Start",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Utils.StringEdit",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:1,n:".ctor",t:1,p:[$n[2].Int32,$n[2].Int32,$n[2].String],pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"deleteLength",pt:$n[2].Int32,ps:1},{n:"insertText",pt:$n[2].String,ps:2}],sn:"$ctor1"},{a:2,n:"Deletion",is:!0,t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"deleteLength",pt:$n[2].Int32,ps:1}],sn:"Deletion",rt:$n[5].StringEdit,p:[$n[2].Int32,$n[2].Int32]},{a:2,n:"Insertion",is:!0,t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"text",pt:$n[2].String,ps:1}],sn:"Insertion",rt:$n[5].StringEdit,p:[$n[2].Int32,$n[2].String]},{a:2,n:"Replacement",is:!0,t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"deleteLength",pt:$n[2].Int32,ps:1},{n:"insertText",pt:$n[2].String,ps:2}],sn:"Replacement",rt:$n[5].StringEdit,p:[$n[2].Int32,$n[2].Int32,$n[2].String]},{a:2,n:"DeleteLength",t:16,rt:$n[2].Int32,g:{a:2,n:"get_DeleteLength",t:8,rt:$n[2].Int32,fg:"DeleteLength",box:function($v){return Bridge.box($v,System.Int32)}},fn:"DeleteLength"},{a:2,n:"InsertText",t:16,rt:$n[2].String,g:{a:2,n:"get_InsertText",t:8,rt:$n[2].String,fg:"InsertText"},fn:"InsertText"},{a:2,n:"Start",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Start",t:8,rt:$n[2].Int32,fg:"Start",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Start"},{a:1,backing:!0,n:"<DeleteLength>k__BackingField",t:4,rt:$n[2].Int32,sn:"DeleteLength",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<InsertText>k__BackingField",t:4,rt:$n[2].String,sn:"InsertText"},{a:1,backing:!0,n:"<Start>k__BackingField",t:4,rt:$n[2].Int32,sn:"Start",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Utils.PositionBias",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Left",is:!0,t:4,rt:$n[5].PositionBias,sn:"Left",box:function($v){return Bridge.box($v,Kusto.Language.Utils.PositionBias,System.Enum.toStringFn(Kusto.Language.Utils.PositionBias))}},{a:2,n:"Right",is:!0,t:4,rt:$n[5].PositionBias,sn:"Right",box:function($v){return Bridge.box($v,Kusto.Language.Utils.PositionBias,System.Enum.toStringFn(Kusto.Language.Utils.PositionBias))}}]}},$n);$m("Kusto.Language.Utils.EmptyReadOnlyList$1",function(T){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Instance",is:!0,t:4,rt:$n[0].IReadOnlyList$1(T),sn:"Instance"}]}},$n);$m("Kusto.Language.Utils.Ensure",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"AreEqual",is:!0,t:8,pi:[{n:"expected",pt:System.Object,ps:0},{n:"actual",pt:System.Object,ps:1},{n:"message",dv:null,o:!0,pt:$n[2].String,ps:2}],tpc:1,tprm:["T"],sn:"AreEqual",rt:$n[2].Void,p:[System.Object,System.Object,$n[2].String]},{a:2,n:"ArgumentNotNull",is:!0,t:8,pi:[{n:"value",pt:$n[2].Object,ps:0},{n:"paramName",pt:$n[2].String,ps:1}],sn:"ArgumentNotNull",rt:$n[2].Void,p:[$n[2].Object,$n[2].String]},{a:2,n:"ElementsNotNull",is:!0,t:8,pi:[{n:"list",pt:$n[0].IReadOnlyList$1(System.Object),ps:0},{n:"listName",pt:$n[2].String,ps:1}],tpc:1,tprm:["T"],sn:"ElementsNotNull",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(System.Object),$n[2].String]},{a:2,n:"IsNull",is:!0,t:8,pi:[{n:"value",pt:$n[2].Object,ps:0},{n:"message",dv:null,o:!0,pt:$n[2].String,ps:1}],sn:"IsNull",rt:$n[2].Void,p:[$n[2].Object,$n[2].String]},{a:2,n:"IsTrue",is:!0,t:8,pi:[{n:"value",pt:$n[2].Boolean,ps:0},{n:"message",dv:null,o:!0,pt:$n[2].String,ps:1}],sn:"IsTrue",rt:$n[2].Void,p:[$n[2].Boolean,$n[2].String]},{a:2,n:"NotNull",is:!0,t:8,pi:[{n:"value",pt:$n[2].Object,ps:0},{n:"message",dv:null,o:!0,pt:$n[2].String,ps:1}],sn:"NotNull",rt:$n[2].Void,p:[$n[2].Object,$n[2].String]}]}},$n);$m("Kusto.Language.Utils.Interlocked",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"CompareExchange",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[2].Int32,ps:0},{n:"newValue",pt:$n[2].Int32,ps:1},{n:"comparand",pt:$n[2].Int32,ps:2}],sn:"CompareExchange$1",rt:$n[2].Int32,p:[$n[2].Int32,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"CompareExchange",is:!0,t:8,pi:[{n:"value",ref:!0,pt:System.Object,ps:0},{n:"newValue",pt:System.Object,ps:1},{n:"comparand",pt:System.Object,ps:2}],tpc:1,tprm:["T"],sn:"CompareExchange",rt:System.Object,p:[System.Object,System.Object,System.Object]},{a:2,n:"Exchange",is:!0,t:8,pi:[{n:"value",ref:!0,pt:System.Object,ps:0},{n:"newValue",pt:System.Object,ps:1}],tpc:1,tprm:["T"],sn:"Exchange",rt:System.Object,p:[System.Object,System.Object]}]}},$n);$m("Kusto.Language.Utils.ListExtensions",function(){return{att:1048960,a:4,s:!0,m:[{a:2,n:"BinarySearch",is:!0,t:8,pi:[{n:"array",pt:$n[0].IReadOnlyList$1(System.Object),ps:0},{n:"comparer",pt:Function,ps:1}],tpc:1,tprm:["T"],sn:"BinarySearch",rt:$n[2].Int32,p:[$n[0].IReadOnlyList$1(System.Object),Function],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"Contains",is:!0,t:8,pi:[{n:"list",pt:$n[0].IReadOnlyList$1(System.Object),ps:0},{n:"item",pt:System.Object,ps:1}],tpc:1,tprm:["T"],sn:"Contains",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(System.Object),System.Object],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"FirstIndex",is:!0,t:8,pi:[{n:"list",pt:$n[0].IReadOnlyList$1(System.Object),ps:0},{n:"predicate",pt:Function,ps:1}],tpc:1,tprm:["T"],sn:"FirstIndex",rt:$n[2].Int32,p:[$n[0].IReadOnlyList$1(System.Object),Function],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"IndexOf",is:!0,t:8,pi:[{n:"list",pt:$n[0].IReadOnlyList$1(System.Object),ps:0},{n:"item",pt:System.Object,ps:1}],tpc:1,tprm:["T"],sn:"IndexOf",rt:$n[2].Int32,p:[$n[0].IReadOnlyList$1(System.Object),System.Object],box:function($v){return Bridge.box($v,System.Int32)}},{a:4,n:"IsEquivalentTo",is:!0,t:8,pi:[{n:"a",pt:$n[0].IReadOnlyDictionary$2(System.Object,System.Object),ps:0},{n:"b",pt:$n[0].IReadOnlyDictionary$2(System.Object,System.Object),ps:1}],tpc:2,tprm:["K","V"],sn:"IsEquivalentTo",rt:$n[2].Boolean,p:[$n[0].IReadOnlyDictionary$2(System.Object,System.Object),$n[0].IReadOnlyDictionary$2(System.Object,System.Object)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"Join",is:!0,t:8,pi:[{n:"items",pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"separator",pt:$n[2].String,ps:1},{n:"finalSeparator",dv:null,o:!0,pt:$n[2].String,ps:2}],sn:"Join",rt:$n[2].String,p:[$n[0].IReadOnlyList$1(System.String),$n[2].String,$n[2].String]},{a:2,n:"LastIndex",is:!0,t:8,pi:[{n:"list",pt:$n[0].IReadOnlyList$1(System.Object),ps:0},{n:"predicate",pt:Function,ps:1}],tpc:1,tprm:["T"],sn:"LastIndex",rt:$n[2].Int32,p:[$n[0].IReadOnlyList$1(System.Object),Function],box:function($v){return Bridge.box($v,System.Int32)}},{a:4,n:"RemoveAll",is:!0,t:8,pi:[{n:"list",pt:$n[0].List$1(System.Object),ps:0},{n:"selector",pt:Function,ps:1}],tpc:1,tprm:["T"],sn:"RemoveAll",rt:$n[2].Void,p:[$n[0].List$1(System.Object),Function]},{a:4,n:"SetCount",is:!0,t:8,pi:[{n:"list",pt:$n[0].List$1(System.Object),ps:0},{n:"count",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["T"],sn:"SetCount",rt:$n[2].Void,p:[$n[0].List$1(System.Object),$n[2].Int32]},{a:2,n:"ToReadOnly",is:!0,t:8,pi:[{n:"list",pt:$n[0].IEnumerable$1(System.Object),ps:0}],tpc:1,tprm:["T"],sn:"ToReadOnly",rt:$n[0].IReadOnlyList$1(System.Object),p:[$n[0].IEnumerable$1(System.Object)]}]}},$n);$m("Kusto.Language.Utils.ReadOnlyListComparer$1",function(T){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[0].IEqualityComparer$1(T)],pi:[{n:"comparer",pt:$n[0].IEqualityComparer$1(T),ps:0}],sn:"ctor"},{a:2,n:"Equals",t:8,pi:[{n:"x",pt:$n[0].IReadOnlyList$1(T),ps:0},{n:"y",pt:$n[0].IReadOnlyList$1(T),ps:1}],sn:"equals2",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(T),$n[0].IReadOnlyList$1(T)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetHashCode",t:8,pi:[{n:"list",pt:$n[0].IReadOnlyList$1(T),ps:0}],sn:"getHashCode2",rt:$n[2].Int32,p:[$n[0].IReadOnlyList$1(T)],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Default",is:!0,t:4,rt:$n[5].ReadOnlyListComparer$1(T),sn:"Default",ro:!0},{a:1,n:"comparer",t:4,rt:$n[0].IEqualityComparer$1(T),sn:"comparer",ro:!0}]}},$n);$m("Kusto.Language.Utils.ObjectPool$1",function(T){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[Function,Function,$n[2].Int32],pi:[{n:"creator",pt:Function,ps:0},{n:"resetter",pt:Function,ps:1},{n:"size",dv:10,o:!0,pt:$n[2].Int32,ps:2}],sn:"ctor"},{a:2,n:"AllocateFromPool",t:8,sn:"AllocateFromPool",rt:T},{a:2,n:"ReturnToPool",t:8,pi:[{n:"item",pt:T,ps:0}],sn:"ReturnToPool",rt:$n[2].Void,p:[T]},{a:1,n:"creator",t:4,rt:Function,sn:"creator",ro:!0},{a:1,n:"items",t:4,rt:System.Array.type(T),sn:"items",ro:!0},{a:1,n:"resetter",t:4,rt:Function,sn:"resetter",ro:!0}]}},$n);$m("Kusto.Language.Utils.Optional$1",function(T){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[T],pi:[{n:"value",pt:T,ps:0}],sn:"$ctor1"},{a:2,n:"op_Implicit",is:!0,t:8,pi:[{n:"value",pt:T,ps:0}],sn:"op_Implicit",rt:$n[5].Optional$1(T),p:[T]},{a:2,n:"HasValue",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasValue",t:8,rt:$n[2].Boolean,fg:"HasValue",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasValue"},{a:2,n:"Value",t:16,rt:T,g:{a:2,n:"get_Value",t:8,rt:T,fg:"Value"},fn:"Value"},{a:1,backing:!0,n:"<HasValue>k__BackingField",t:4,rt:$n[2].Boolean,sn:"HasValue",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:T,sn:"Value"}]}},$n);$m("Kusto.Language.Utils.SafeList$1",function(T){return{nested:[$n[5].SafeList$1.Enumerator],att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(T)],pi:[{n:"items",pt:$n[0].IEnumerable$1(T),ps:0}],sn:"ctor"},{a:1,n:".ctor",t:1,p:[$n[0].List$1(T),$n[2].Int32],pi:[{n:"list",pt:$n[0].List$1(T),ps:0},{n:"isOwner",dv:1,o:!0,pt:$n[2].Int32,ps:1}],sn:"$ctor1"},{a:1,n:"Copy",is:!0,t:8,pi:[{n:"source",pt:$n[0].List$1(T),ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"Copy",rt:$n[0].List$1(T),p:[$n[0].List$1(T),$n[2].Int32]},{a:2,n:"GetEnumerator",t:8,sn:"GetEnumerator",rt:$n[5].SafeList$1.Enumerator(T)},{a:2,n:"WithItem",t:8,pi:[{n:"item",pt:T,ps:0}],sn:"WithItem",rt:$n[5].SafeList$1(T),p:[T]},{a:2,n:"WithItems",t:8,pi:[{n:"items",pt:$n[0].IEnumerable$1(T),ps:0}],sn:"WithItems",rt:$n[5].SafeList$1(T),p:[$n[0].IEnumerable$1(T)]},{a:2,n:"Count",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Count",t:8,rt:$n[2].Int32,fg:"Count",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Count"},{a:2,n:"Item",t:16,rt:T,p:[$n[2].Int32],i:!0,ipi:[{n:"index",pt:$n[2].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"getItem",rt:T,p:[$n[2].Int32]}},{a:2,n:"Empty",is:!0,t:4,rt:$n[5].SafeList$1(T),sn:"Empty",ro:!0},{a:1,n:"_isOwner",t:4,rt:$n[2].Int32,sn:"_isOwner",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_length",t:4,rt:$n[2].Int32,sn:"_length",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_list",t:4,rt:$n[0].List$1(T),sn:"_list",ro:!0}]}},$n);$m("Kusto.Language.Utils.SafeList$1.Enumerator",function(T){return{td:$n[5].SafeList$1(T),att:1048842,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(T),$n[2].Int32,$n[2].Int32],pi:[{n:"list",pt:$n[0].IReadOnlyList$1(T),ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"$ctor1"},{a:2,n:"Dispose",t:8,sn:"Dispose",rt:$n[2].Void},{a:2,n:"MoveNext",t:8,sn:"moveNext",rt:$n[2].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Reset",t:8,sn:"reset",rt:$n[2].Void},{a:2,n:"Current",t:16,rt:T,g:{a:2,n:"get_Current",t:8,rt:T,fg:"Current"},fn:"Current"},{a:1,n:"_end",t:4,rt:$n[2].Int32,sn:"_end",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_index",t:4,rt:$n[2].Int32,sn:"_index",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_list",t:4,rt:$n[0].IReadOnlyList$1(T),sn:"_list",ro:!0},{a:1,n:"_start",t:4,rt:$n[2].Int32,sn:"_start",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Utils.StringTable",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Add",t:8,pi:[{n:"strings",pt:$n[0].IEnumerable$1(System.String),ps:0}],sn:"Add$2",rt:$n[2].Void,p:[$n[0].IEnumerable$1(System.String)]},{a:2,n:"Add",t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"Add",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"Add",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"Add$1",rt:$n[2].String,p:[$n[2].String,$n[2].Int32,$n[2].Int32]},{a:2,n:"Contains",t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"Contains",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"ContainsKey",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"ContainsKey",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetEnumerator",t:8,sn:"GetEnumerator",rt:$n[0].IEnumerator$1(System.String)},{a:1,n:"map",t:4,rt:$n[5].TextKeyedDictionary$1(System.String),sn:"map",ro:!0}]}},$n);$m("Kusto.Language.Utils.SubstringMap$1",function(TValue){return{nested:[$n[5].SubstringMap$1.Node],att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.String,TValue))],pi:[{n:"keyValuePairs",pt:$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.String,TValue)),ps:0}],sn:"ctor"},{a:2,n:"GetLongestMatch",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"GetLongestMatch",rt:$n[0].KeyValuePair$2(System.String,TValue),p:[$n[2].String,$n[2].Int32]},{a:1,n:"NoValue",is:!0,t:4,rt:$n[0].KeyValuePair$2(System.String,TValue),sn:"NoValue",ro:!0},{a:1,n:"_root",t:4,rt:$n[5].SubstringMap$1.Node(TValue),sn:"_root",ro:!0}]}},$n);$m("Kusto.Language.Utils.SubstringMap$1.Node",function(TValue){return{td:$n[5].SubstringMap$1(TValue),nested:[$n[5].SubstringMap$1.Node.CharMap,$n[5].SubstringMap$1.Node.SingleCharMap,$n[5].SubstringMap$1.Node.ArrayCharMap,$n[5].SubstringMap$1.Node.DictionaryMap],att:1048579,a:1,m:[{a:1,n:".ctor",t:1,sn:"ctor"},{a:1,n:"Add",t:8,pi:[{n:"pair",pt:$n[0].KeyValuePair$2(System.String,TValue),ps:0}],sn:"Add",rt:$n[2].Void,p:[$n[0].KeyValuePair$2(System.String,TValue)]},{a:2,n:"From",is:!0,t:8,pi:[{n:"keyValuePairs",pt:$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.String,TValue)),ps:0}],sn:"From",rt:$n[5].SubstringMap$1.Node(TValue),p:[$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.String,TValue))]},{a:2,n:"GetSubNode",t:8,pi:[{n:"key",pt:$n[2].Char,ps:0}],sn:"GetSubNode",rt:$n[5].SubstringMap$1.Node(TValue),p:[$n[2].Char]},{a:2,n:"HasValue",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasValue",t:8,rt:$n[2].Boolean,fg:"HasValue",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:1,n:"set_HasValue",t:8,p:[$n[2].Boolean],rt:$n[2].Void,fs:"HasValue"},fn:"HasValue"},{a:2,n:"Value",t:16,rt:$n[0].KeyValuePair$2(System.String,TValue),g:{a:2,n:"get_Value",t:8,rt:$n[0].KeyValuePair$2(System.String,TValue),fg:"Value"},s:{a:1,n:"set_Value",t:8,p:[$n[0].KeyValuePair$2(System.String,TValue)],rt:$n[2].Void,fs:"Value"},fn:"Value"},{a:1,n:"map",t:4,rt:$n[5].SubstringMap$1.Node.CharMap(TValue),sn:"map"},{a:1,backing:!0,n:"<HasValue>k__BackingField",t:4,rt:$n[2].Boolean,sn:"HasValue",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:$n[0].KeyValuePair$2(System.String,TValue),sn:"Value"}]}},$n);$m("Kusto.Language.Utils.SubstringMap$1.Node.CharMap",function(TValue){return{td:$n[5].SubstringMap$1.Node(TValue),att:1048707,a:1,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"Add",t:8,pi:[{n:"key",pt:$n[2].Char,ps:0},{n:"node",pt:$n[5].SubstringMap$1.Node(TValue),ps:1}],sn:"Add",rt:$n[5].SubstringMap$1.Node.CharMap(TValue),p:[$n[2].Char,$n[5].SubstringMap$1.Node(TValue)]},{ab:!0,a:2,n:"Get",t:8,pi:[{n:"key",pt:$n[2].Char,ps:0}],sn:"Get",rt:$n[5].SubstringMap$1.Node(TValue),p:[$n[2].Char]}]}},$n);$m("Kusto.Language.Utils.SubstringMap$1.Node.SingleCharMap",function(TValue){return{td:$n[5].SubstringMap$1.Node(TValue),att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].Char,$n[5].SubstringMap$1.Node(TValue)],pi:[{n:"key",pt:$n[2].Char,ps:0},{n:"node",pt:$n[5].SubstringMap$1.Node(TValue),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Add",t:8,pi:[{n:"key",pt:$n[2].Char,ps:0},{n:"node",pt:$n[5].SubstringMap$1.Node(TValue),ps:1}],sn:"Add",rt:$n[5].SubstringMap$1.Node.CharMap(TValue),p:[$n[2].Char,$n[5].SubstringMap$1.Node(TValue)]},{ov:!0,a:2,n:"Get",t:8,pi:[{n:"key",pt:$n[2].Char,ps:0}],sn:"Get",rt:$n[5].SubstringMap$1.Node(TValue),p:[$n[2].Char]},{a:1,n:"_key",t:4,rt:$n[2].Char,sn:"_key",ro:!0,box:function($v){return Bridge.box($v,System.Char,String.fromCharCode,System.Char.getHashCode)}},{a:1,n:"_node",t:4,rt:$n[5].SubstringMap$1.Node(TValue),sn:"_node",ro:!0}]}},$n);$m("Kusto.Language.Utils.SubstringMap$1.Node.ArrayCharMap",function(TValue){return{td:$n[5].SubstringMap$1.Node(TValue),att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].Int32],pi:[{n:"count",pt:$n[2].Int32,ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Add",t:8,pi:[{n:"key",pt:$n[2].Char,ps:0},{n:"node",pt:$n[5].SubstringMap$1.Node(TValue),ps:1}],sn:"Add",rt:$n[5].SubstringMap$1.Node.CharMap(TValue),p:[$n[2].Char,$n[5].SubstringMap$1.Node(TValue)]},{ov:!0,a:2,n:"Get",t:8,pi:[{n:"key",pt:$n[2].Char,ps:0}],sn:"Get",rt:$n[5].SubstringMap$1.Node(TValue),p:[$n[2].Char]},{a:1,n:"_length",t:4,rt:$n[2].Int32,sn:"_length",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_pairs",t:4,rt:System.Array.type(System.Collections.Generic.KeyValuePair$2(System.Char,Kusto.Language.Utils.SubstringMap$1.Node(TValue))),sn:"_pairs",ro:!0}]}},$n);$m("Kusto.Language.Utils.SubstringMap$1.Node.DictionaryMap",function(TValue){return{td:$n[5].SubstringMap$1.Node(TValue),att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[System.Array.type(System.Collections.Generic.KeyValuePair$2(System.Char,Kusto.Language.Utils.SubstringMap$1.Node(TValue)))],pi:[{n:"kvps",dv:null,o:!0,pt:System.Array.type(System.Collections.Generic.KeyValuePair$2(System.Char,Kusto.Language.Utils.SubstringMap$1.Node(TValue))),ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Add",t:8,pi:[{n:"key",pt:$n[2].Char,ps:0},{n:"node",pt:$n[5].SubstringMap$1.Node(TValue),ps:1}],sn:"Add",rt:$n[5].SubstringMap$1.Node.CharMap(TValue),p:[$n[2].Char,$n[5].SubstringMap$1.Node(TValue)]},{ov:!0,a:2,n:"Get",t:8,pi:[{n:"key",pt:$n[2].Char,ps:0}],sn:"Get",rt:$n[5].SubstringMap$1.Node(TValue),p:[$n[2].Char]},{a:1,n:"_map",t:4,rt:$n[0].Dictionary$2(System.Char,Kusto.Language.Utils.SubstringMap$1.Node(TValue)),sn:"_map",ro:!0}]}},$n);$m("Kusto.Language.Utils.TextKeyedDictionary$1",function(TValue){return{nested:[$n[5].TextKeyedDictionary$1.Key],att:1048576,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ContainsKey",t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ContainsKey",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"ContainsKey",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"ContainsKey$1",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetEnumerator",t:8,sn:"GetEnumerator",rt:$n[0].IEnumerator$1(TValue)},{a:2,n:"GetOrAddValue",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"evaluator",pt:Function,ps:1}],sn:"GetOrAddValue$1",rt:TValue,p:[$n[2].String,Function]},{a:2,n:"GetOrAddValue",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"newValue",pt:TValue,ps:1}],sn:"GetOrAddValue",rt:TValue,p:[$n[2].String,TValue]},{a:2,n:"GetOrAddValue",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2},{n:"evaluator",pt:Function,ps:3}],sn:"GetOrAddValue$3",rt:TValue,p:[$n[2].String,$n[2].Int32,$n[2].Int32,Function]},{a:2,n:"GetOrAddValue",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2},{n:"newValue",pt:TValue,ps:3}],sn:"GetOrAddValue$2",rt:TValue,p:[$n[2].String,$n[2].Int32,$n[2].Int32,TValue]},{a:2,n:"TryGetValue",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2},{n:"value",out:!0,pt:TValue,ps:3}],sn:"TryGetValue",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].Int32,TValue],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"map",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue),TValue),sn:"map",ro:!0}]}},$n);$m("Kusto.Language.Utils.TextKeyedDictionary$1.Key",function(TValue){return{td:$n[5].TextKeyedDictionary$1(TValue),att:1048843,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].Int32,$n[2].Int32],pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"$ctor2"},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[5].TextKeyedDictionary$1.Key(TValue),ps:0}],sn:"equalsT",rt:$n[2].Boolean,p:[$n[5].TextKeyedDictionary$1.Key(TValue)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"GetFNVHashCode",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"GetFNVHashCode",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[2].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"FnvOffsetBias",is:!0,t:4,rt:$n[2].Int32,sn:"FnvOffsetBias",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"FnvPrime",is:!0,t:4,rt:$n[2].Int32,sn:"FnvPrime",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"hash",t:4,rt:$n[2].Int32,sn:"hash",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"length",t:4,rt:$n[2].Int32,sn:"length",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"start",t:4,rt:$n[2].Int32,sn:"start",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"text",t:4,rt:$n[2].String,sn:"text",ro:!0}]}},$n);$m("Kusto.Language.Utils.TextKeyedDictionaryExtensions",function(){return{att:1048960,a:4,s:!0,m:[{a:2,n:"ToTextKeyedDictionary",is:!0,t:8,pi:[{n:"source",pt:$n[0].IEnumerable$1(System.Object),ps:0},{n:"keySelector",pt:Function,ps:1},{n:"valueSelector",pt:Function,ps:2}],tpc:2,tprm:["TSource","TValue"],sn:"ToTextKeyedDictionary",rt:$n[5].TextKeyedDictionary$1(System.Object),p:[$n[0].IEnumerable$1(System.Object),Function,Function]}]}},$n);$m("Kusto.Language.Utils.UniqueNameTable",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AddName",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"AddName",rt:$n[2].Void,p:[$n[2].String]},{a:2,n:"AddNames",t:8,pi:[{n:"names",pt:$n[0].IEnumerable$1(System.String),ps:0}],sn:"AddNames",rt:$n[2].Void,p:[$n[0].IEnumerable$1(System.String)]},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[2].Void},{a:2,n:"GetOrAddName",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"baseName",dv:null,o:!0,pt:$n[2].String,ps:1}],sn:"GetOrAddName",rt:$n[2].String,p:[$n[2].String,$n[2].String]},{a:1,n:"nameMap",t:4,rt:$n[0].Dictionary$2(System.String,System.Int32),sn:"nameMap",ro:!0}]}},$n);$m("Kusto.Language.Symbols.ArgumentKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Aggregate",is:!0,t:4,rt:$n[1].ArgumentKind,sn:"Aggregate",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ArgumentKind,System.Enum.toStringFn(Kusto.Language.Symbols.ArgumentKind))}},{a:2,n:"Column",is:!0,t:4,rt:$n[1].ArgumentKind,sn:"Column",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ArgumentKind,System.Enum.toStringFn(Kusto.Language.Symbols.ArgumentKind))}},{a:2,n:"Constant",is:!0,t:4,rt:$n[1].ArgumentKind,sn:"Constant",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ArgumentKind,System.Enum.toStringFn(Kusto.Language.Symbols.ArgumentKind))}},{a:2,n:"Expression",is:!0,t:4,rt:$n[1].ArgumentKind,sn:"Expression",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ArgumentKind,System.Enum.toStringFn(Kusto.Language.Symbols.ArgumentKind))}},{a:2,n:"Literal",is:!0,t:4,rt:$n[1].ArgumentKind,sn:"Literal",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ArgumentKind,System.Enum.toStringFn(Kusto.Language.Symbols.ArgumentKind))}},{a:2,n:"LiteralNotEmpty",is:!0,t:4,rt:$n[1].ArgumentKind,sn:"LiteralNotEmpty",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ArgumentKind,System.Enum.toStringFn(Kusto.Language.Symbols.ArgumentKind))}},{a:2,n:"Star",is:!0,t:4,rt:$n[1].ArgumentKind,sn:"Star",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ArgumentKind,System.Enum.toStringFn(Kusto.Language.Symbols.ArgumentKind))}}]}},$n);$m("Kusto.Language.Symbols.ClusterSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,System.Array.type(Kusto.Language.Symbols.DatabaseSymbol)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"databases",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.DatabaseSymbol),ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[0].IEnumerable$1(Kusto.Language.Symbols.DatabaseSymbol),$n[2].Boolean],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"databases",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.DatabaseSymbol),ps:1},{n:"isOpen",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"$ctor1"},{a:2,n:"AddDatabase",t:8,pi:[{n:"database",pt:$n[1].DatabaseSymbol,ps:0}],sn:"AddDatabase",rt:$n[1].ClusterSymbol,p:[$n[1].DatabaseSymbol]},{a:2,n:"AddOrUpdateDatabase",t:8,pi:[{n:"newDatabase",pt:$n[1].DatabaseSymbol,ps:0}],sn:"AddOrUpdateDatabase",rt:$n[1].ClusterSymbol,p:[$n[1].DatabaseSymbol]},{a:2,n:"GetDatabase",t:8,pi:[{n:"databaseName",pt:$n[2].String,ps:0}],sn:"GetDatabase",rt:$n[1].DatabaseSymbol,p:[$n[2].String]},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"IsCluster",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"IsCluster",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"RemoveDatabase",t:8,pi:[{n:"symbolToRemove",pt:$n[1].DatabaseSymbol,ps:0}],sn:"RemoveDatabase",rt:$n[1].ClusterSymbol,p:[$n[1].DatabaseSymbol]},{a:2,n:"RemoveDatabases",t:8,pi:[{n:"symbolsToRemove",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.DatabaseSymbol),ps:0}],sn:"RemoveDatabases",rt:$n[1].ClusterSymbol,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.DatabaseSymbol)]},{a:2,n:"UpdateDatabase",t:8,pi:[{n:"existingDatabase",pt:$n[1].DatabaseSymbol,ps:0},{n:"newDatabase",pt:$n[1].DatabaseSymbol,ps:1}],sn:"UpdateDatabase",rt:$n[1].ClusterSymbol,p:[$n[1].DatabaseSymbol,$n[1].DatabaseSymbol]},{a:2,n:"WithDatabases",t:8,pi:[{n:"databases",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.DatabaseSymbol),ps:0}],sn:"WithDatabases",rt:$n[1].ClusterSymbol,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.DatabaseSymbol)]},{a:2,n:"Databases",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.DatabaseSymbol),g:{a:2,n:"get_Databases",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.DatabaseSymbol),fg:"Databases"},fn:"Databases"},{a:2,n:"IsOpen",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsOpen",t:8,rt:$n[2].Boolean,fg:"IsOpen",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOpen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Members",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),g:{ov:!0,a:2,n:"get_Members",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),fg:"Members"},fn:"Members"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"Unknown",is:!0,t:4,rt:$n[1].ClusterSymbol,sn:"Unknown",ro:!0},{a:1,backing:!0,n:"<Databases>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.DatabaseSymbol),sn:"Databases"},{a:1,backing:!0,n:"<IsOpen>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsOpen",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Symbols.ColumnSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].TypeSymbol,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:2}],sn:"ctor"},{a:2,n:"Combine",is:!0,t:8,pi:[{n:"kind",pt:$n[1].CombineKind,ps:0},{n:"columnSets",pt:$n[0].IEnumerable$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol)),ps:1}],sn:"Combine",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),p:[$n[1].CombineKind,$n[0].IEnumerable$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol))]},{a:2,n:"Combine",is:!0,t:8,pi:[{n:"kind",pt:$n[1].CombineKind,ps:0},{n:"columnSets",ip:!0,pt:System.Array.type(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol)),ps:1}],sn:"Combine$1",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),p:[$n[1].CombineKind,System.Array.type(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol))]},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"WithDescription",t:8,pi:[{n:"description",pt:$n[2].String,ps:0}],sn:"WithDescription",rt:$n[1].ColumnSymbol,p:[$n[2].String]},{a:2,n:"WithName",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"WithName",rt:$n[1].ColumnSymbol,p:[$n[2].String]},{a:2,n:"WithType",t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"WithType",rt:$n[1].ColumnSymbol,p:[$n[1].TypeSymbol]},{a:2,n:"Description",t:16,rt:$n[2].String,g:{a:2,n:"get_Description",t:8,rt:$n[2].String,fg:"Description"},fn:"Description"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"Type",t:16,rt:$n[1].TypeSymbol,g:{a:2,n:"get_Type",t:8,rt:$n[1].TypeSymbol,fg:"Type"},fn:"Type"},{a:1,backing:!0,n:"<Description>k__BackingField",t:4,rt:$n[2].String,sn:"Description"},{a:1,backing:!0,n:"<Type>k__BackingField",t:4,rt:$n[1].TypeSymbol,sn:"Type"}]}},$n);$m("Kusto.Language.Symbols.CombineKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"UnifySameName",is:!0,t:4,rt:$n[1].CombineKind,sn:"UnifySameName",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.CombineKind,System.Enum.toStringFn(Kusto.Language.Symbols.CombineKind))}},{a:2,n:"UnifySameNameAndType",is:!0,t:4,rt:$n[1].CombineKind,sn:"UnifySameNameAndType",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.CombineKind,System.Enum.toStringFn(Kusto.Language.Symbols.CombineKind))}},{a:2,n:"UniqueNames",is:!0,t:4,rt:$n[1].CombineKind,sn:"UniqueNames",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.CombineKind,System.Enum.toStringFn(Kusto.Language.Symbols.CombineKind))}}]}},$n);$m("Kusto.Language.Symbols.CommandSymbol",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[1].TableSymbol],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"grammar",pt:$n[2].String,ps:1},{n:"resultType",pt:$n[1].TableSymbol,ps:2}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"grammar",pt:$n[2].String,ps:1},{n:"resultSchema",pt:$n[2].String,ps:2}],sn:"$ctor1"},{a:2,n:"Grammar",t:16,rt:$n[2].String,g:{a:2,n:"get_Grammar",t:8,rt:$n[2].String,fg:"Grammar"},fn:"Grammar"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{a:2,n:"ResultSchema",t:16,rt:$n[2].String,g:{a:2,n:"get_ResultSchema",t:8,rt:$n[2].String,fg:"ResultSchema"},fn:"ResultSchema"},{a:2,n:"ResultType",t:16,rt:$n[1].TableSymbol,g:{a:2,n:"get_ResultType",t:8,rt:$n[1].TableSymbol,fg:"ResultType"},fn:"ResultType"},{a:1,n:"resultSchema",t:4,rt:$n[2].String,sn:"resultSchema"},{a:1,n:"resultType",t:4,rt:$n[1].TableSymbol,sn:"resultType"},{a:1,backing:!0,n:"<Grammar>k__BackingField",t:4,rt:$n[2].String,sn:"Grammar"}]}},$n);$m("Kusto.Language.Symbols.DatabaseSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,System.Array.type(Kusto.Language.Symbols.Symbol)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"members",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Symbol),ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol),$n[2].Boolean],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"members",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol),ps:1},{n:"isOpen",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"$ctor1"},{a:2,n:"AddMembers",t:8,pi:[{n:"symbols",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Symbol),ps:0}],sn:"AddMembers",rt:$n[1].DatabaseSymbol,p:[System.Array.type(Kusto.Language.Symbols.Symbol)]},{a:2,n:"AddMembers",t:8,pi:[{n:"symbols",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol),ps:0}],sn:"AddMembers$1",rt:$n[1].DatabaseSymbol,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol)]},{a:2,n:"Contains",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"Contains",rt:$n[2].Boolean,p:[$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetAnyTable",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetAnyTable",rt:$n[1].TableSymbol,p:[$n[2].String]},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"GetExternalTable",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetExternalTable",rt:$n[1].TableSymbol,p:[$n[2].String]},{a:2,n:"GetFunction",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetFunction",rt:$n[1].FunctionSymbol,p:[$n[2].String]},{a:2,n:"GetMaterializedView",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetMaterializedView",rt:$n[1].TableSymbol,p:[$n[2].String]},{a:2,n:"GetMember",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetMember",rt:$n[1].Symbol,p:[$n[2].String]},{a:2,n:"GetTable",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetTable",rt:$n[1].TableSymbol,p:[$n[2].String]},{a:2,n:"WithMembers",t:8,pi:[{n:"members",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol),ps:0}],sn:"WithMembers",rt:$n[1].DatabaseSymbol,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol)]},{a:2,n:"ExternalTables",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),g:{a:2,n:"get_ExternalTables",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),fg:"ExternalTables"},fn:"ExternalTables"},{a:2,n:"Functions",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),g:{a:2,n:"get_Functions",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),fg:"Functions"},fn:"Functions"},{a:2,n:"IsOpen",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsOpen",t:8,rt:$n[2].Boolean,fg:"IsOpen",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOpen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{a:2,n:"MaterializedViews",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),g:{a:2,n:"get_MaterializedViews",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),fg:"MaterializedViews"},fn:"MaterializedViews"},{ov:!0,a:2,n:"Members",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),g:{ov:!0,a:2,n:"get_Members",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),fg:"Members"},fn:"Members"},{a:2,n:"Tables",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),g:{a:2,n:"get_Tables",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),fg:"Tables"},fn:"Tables"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"Unknown",is:!0,t:4,rt:$n[1].DatabaseSymbol,sn:"Unknown",ro:!0},{a:1,n:"externalTables",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),sn:"externalTables"},{a:1,n:"functions",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),sn:"functions"},{a:1,n:"materializedViews",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),sn:"materializedViews"},{a:1,n:"members",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),sn:"members",ro:!0},{a:1,n:"symbolSet",t:4,rt:$n[0].HashSet$1(Kusto.Language.Symbols.Symbol),sn:"symbolSet"},{a:1,n:"tables",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),sn:"tables"},{a:1,backing:!0,n:"<IsOpen>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsOpen",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Symbols.EmptyScope",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"GetSymbols",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"match",pt:$n[1].SymbolMatch,ps:1},{n:"symbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:2}],sn:"GetSymbols$1",rt:$n[2].Void,p:[$n[2].String,$n[1].SymbolMatch,$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:2,n:"Instance",is:!0,t:4,rt:$n[1].EmptyScope,sn:"Instance",ro:!0}]}},$n);$m("Kusto.Language.Symbols.ErrorSymbol",function(){return{att:1048833,a:2,m:[{a:1,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"IsError",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsError",t:8,rt:$n[2].Boolean,fg:"IsError",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsError"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"Instance",is:!0,t:4,rt:$n[1].ErrorSymbol,sn:"Instance",ro:!0}]}},$n);$m("Kusto.Language.Symbols.ResultNameKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Default",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"Default",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:2,n:"FirstArgument",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"FirstArgument",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:2,n:"FirstArgumentValueIfColumn",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"FirstArgumentValueIfColumn",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:2,n:"NameAndFirstArgument",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"NameAndFirstArgument",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:2,n:"NameAndOnlyArgument",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"NameAndOnlyArgument",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:2,n:"None",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:2,n:"OnlyArgument",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"OnlyArgument",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:2,n:"PrefixAndFirstArgument",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"PrefixAndFirstArgument",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:2,n:"PrefixAndOnlyArgument",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"PrefixAndOnlyArgument",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:2,n:"PrefixOnly",is:!0,t:4,rt:$n[1].ResultNameKind,sn:"PrefixOnly",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}}]}},$n);$m("Kusto.Language.Symbols.FunctionSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,System.Array.type(Kusto.Language.Symbols.Signature)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"signatures",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Signature),ps:1}],sn:"$ctor6"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].ReturnTypeKind,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"returnTypeKind",pt:$n[1].ReturnTypeKind,ps:1},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor4"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].ReturnTypeKind,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"returnTypeKind",pt:$n[1].ReturnTypeKind,ps:1},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor5"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].TypeSymbol,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"returnType",pt:$n[1].TypeSymbol,ps:1},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor7"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[3].FunctionBody,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"declaration",pt:$n[3].FunctionBody,ps:1},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor9"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[3].FunctionBody,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"declaration",pt:$n[3].FunctionBody,ps:1},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor10"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[0].IEnumerable$1(Kusto.Language.Symbols.Signature),$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"signatures",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Signature),ps:1},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:2}],sn:"$ctor12"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"body",pt:$n[2].String,ps:1},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor13"},{a:2,n:".ctor",t:1,p:[$n[2].String,Function,$n[1].Tabularity,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"customReturnType",pt:Function,ps:1},{n:"tabularity",pt:$n[1].Tabularity,ps:2},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:3}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,Function,$n[1].Tabularity,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"customReturnType",pt:Function,ps:1},{n:"tabularity",pt:$n[1].Tabularity,ps:2},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:3}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[2].String,Function,$n[1].Tabularity,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"customReturnType",pt:Function,ps:1},{n:"tabularity",pt:$n[1].Tabularity,ps:2},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:3}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[2].String,Function,$n[1].Tabularity,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"customReturnType",pt:Function,ps:1},{n:"tabularity",pt:$n[1].Tabularity,ps:2},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:3}],sn:"$ctor3"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].TypeSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"returnType",pt:$n[1].TypeSymbol,ps:1},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"$ctor8"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[1].Tabularity,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"body",pt:$n[2].String,ps:1},{n:"tabularity",pt:$n[1].Tabularity,ps:2},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:3}],sn:"$ctor14"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"body",pt:$n[2].String,ps:1},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"$ctor16"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[2].String,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"parameterList",pt:$n[2].String,ps:1},{n:"body",pt:$n[2].String,ps:2},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"$ctor17"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[1].Tabularity,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"body",pt:$n[2].String,ps:1},{n:"tabularity",pt:$n[1].Tabularity,ps:2},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:3},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:4}],sn:"$ctor15"},{a:1,n:".ctor",t:1,p:[$n[2].String,$n[0].IEnumerable$1(Kusto.Language.Symbols.Signature),$n[2].Boolean,$n[2].Boolean,$n[1].ResultNameKind,$n[2].String,$n[2].String,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"signatures",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Signature),ps:1},{n:"hidden",pt:$n[2].Boolean,ps:2},{n:"constantFoldable",pt:$n[2].Boolean,ps:3},{n:"resultNameKind",pt:$n[1].ResultNameKind,ps:4},{n:"resultNamePrefix",pt:$n[2].String,ps:5},{n:"description",pt:$n[2].String,ps:6},{n:"alternative",pt:$n[2].String,ps:7}],sn:"$ctor11"},{a:2,n:"ConstantFoldable",t:8,sn:"ConstantFoldable",rt:$n[1].FunctionSymbol},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"GetDisplay",t:8,pi:[{n:"verbose",pt:$n[2].Boolean,ps:0}],sn:"GetDisplay$1",rt:$n[2].String,p:[$n[2].Boolean]},{a:1,n:"GetParameterDisplay",t:8,pi:[{n:"parameter",pt:$n[1].Parameter,ps:0},{n:"verbose",pt:$n[2].Boolean,ps:1}],sn:"GetParameterDisplay",rt:$n[2].String,p:[$n[1].Parameter,$n[2].Boolean]},{a:2,n:"GetReturnType",t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"GetReturnType",rt:$n[1].TypeSymbol,p:[$n[4].GlobalState]},{a:1,n:"GetTypeDisplay",t:8,pi:[{n:"parameter",pt:$n[1].Parameter,ps:0}],sn:"GetTypeDisplay",rt:$n[2].String,p:[$n[1].Parameter]},{a:2,n:"Hide",t:8,sn:"Hide",rt:$n[1].FunctionSymbol},{a:2,n:"Obsolete",t:8,pi:[{n:"alternative",pt:$n[2].String,ps:0}],sn:"Obsolete",rt:$n[1].FunctionSymbol,p:[$n[2].String]},{a:1,n:"With",t:8,pi:[{n:"name",dv:null,o:!0,pt:$n[5].Optional$1(System.String),ps:0},{n:"signatures",dv:null,o:!0,pt:$n[5].Optional$1(System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Signature)),ps:1},{n:"isHidden",dv:null,o:!0,pt:$n[5].Optional$1(System.Boolean),ps:2},{n:"isConstantFoldable",dv:null,o:!0,pt:$n[5].Optional$1(System.Boolean),ps:3},{n:"resultNameKind",dv:null,o:!0,pt:$n[5].Optional$1(Kusto.Language.Symbols.ResultNameKind),ps:4},{n:"resultNamePrefix",dv:null,o:!0,pt:$n[5].Optional$1(System.String),ps:5},{n:"description",dv:null,o:!0,pt:$n[5].Optional$1(System.String),ps:6},{n:"alternative",dv:null,o:!0,pt:$n[5].Optional$1(System.String),ps:7}],sn:"With",rt:$n[1].FunctionSymbol,p:[$n[5].Optional$1(System.String),$n[5].Optional$1(System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Signature)),$n[5].Optional$1(System.Boolean),$n[5].Optional$1(System.Boolean),$n[5].Optional$1(Kusto.Language.Symbols.ResultNameKind),$n[5].Optional$1(System.String),$n[5].Optional$1(System.String),$n[5].Optional$1(System.String)]},{a:2,n:"WithDescription",t:8,pi:[{n:"description",pt:$n[2].String,ps:0}],sn:"WithDescription",rt:$n[1].FunctionSymbol,p:[$n[2].String]},{a:2,n:"WithIsConstantFoldable",t:8,pi:[{n:"isConstantFoldable",pt:$n[2].Boolean,ps:0}],sn:"WithIsConstantFoldable",rt:$n[1].FunctionSymbol,p:[$n[2].Boolean]},{a:2,n:"WithIsHidden",t:8,pi:[{n:"isHidden",pt:$n[2].Boolean,ps:0}],sn:"WithIsHidden",rt:$n[1].FunctionSymbol,p:[$n[2].Boolean]},{a:2,n:"WithIsObsolete",t:8,pi:[{n:"isObsolete",pt:$n[2].Boolean,ps:0},{n:"alternative",dv:null,o:!0,pt:$n[2].String,ps:1}],sn:"WithIsObsolete",rt:$n[1].FunctionSymbol,p:[$n[2].Boolean,$n[2].String]},{a:2,n:"WithResultNameKind",t:8,pi:[{n:"kind",pt:$n[1].ResultNameKind,ps:0}],sn:"WithResultNameKind",rt:$n[1].FunctionSymbol,p:[$n[1].ResultNameKind]},{a:2,n:"WithResultNamePrefix",t:8,pi:[{n:"resultNamePrefix",pt:$n[2].String,ps:0}],sn:"WithResultNamePrefix",rt:$n[1].FunctionSymbol,p:[$n[2].String]},{a:2,n:"Alternative",t:16,rt:$n[2].String,g:{a:2,n:"get_Alternative",t:8,rt:$n[2].String,fg:"Alternative"},fn:"Alternative"},{a:2,n:"Description",t:16,rt:$n[2].String,g:{a:2,n:"get_Description",t:8,rt:$n[2].String,fg:"Description"},fn:"Description"},{a:2,n:"IsConstantFoldable",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsConstantFoldable",t:8,rt:$n[2].Boolean,fg:"IsConstantFoldable",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsConstantFoldable"},{ov:!0,a:2,n:"IsHidden",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsHidden",t:8,rt:$n[2].Boolean,fg:"IsHidden",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsHidden"},{a:2,n:"IsObsolete",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsObsolete",t:8,rt:$n[2].Boolean,fg:"IsObsolete",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsObsolete"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{a:2,n:"MaxArgumentCount",t:16,rt:$n[2].Int32,g:{a:2,n:"get_MaxArgumentCount",t:8,rt:$n[2].Int32,fg:"MaxArgumentCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"MaxArgumentCount"},{a:2,n:"MinArgumentCount",t:16,rt:$n[2].Int32,g:{a:2,n:"get_MinArgumentCount",t:8,rt:$n[2].Int32,fg:"MinArgumentCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"MinArgumentCount"},{a:2,n:"ResultNameKind",t:16,rt:$n[1].ResultNameKind,g:{a:2,n:"get_ResultNameKind",t:8,rt:$n[1].ResultNameKind,fg:"ResultNameKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},fn:"ResultNameKind"},{a:2,n:"ResultNamePrefix",t:16,rt:$n[2].String,g:{a:2,n:"get_ResultNamePrefix",t:8,rt:$n[2].String,fg:"ResultNamePrefix"},fn:"ResultNamePrefix"},{a:2,n:"Signatures",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),g:{a:2,n:"get_Signatures",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),fg:"Signatures"},fn:"Signatures"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:1,n:"_isHidden",t:4,rt:$n[2].Boolean,sn:"_isHidden",ro:!0,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Alternative>k__BackingField",t:4,rt:$n[2].String,sn:"Alternative"},{a:1,backing:!0,n:"<Description>k__BackingField",t:4,rt:$n[2].String,sn:"Description"},{a:1,backing:!0,n:"<IsConstantFoldable>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsConstantFoldable",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<ResultNameKind>k__BackingField",t:4,rt:$n[1].ResultNameKind,sn:"ResultNameKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ResultNameKind,System.Enum.toStringFn(Kusto.Language.Symbols.ResultNameKind))}},{a:1,backing:!0,n:"<ResultNamePrefix>k__BackingField",t:4,rt:$n[2].String,sn:"ResultNamePrefix"},{a:1,backing:!0,n:"<Signatures>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),sn:"Signatures"}]}},$n);$m("Kusto.Language.Symbols.GroupSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[System.Array.type(Kusto.Language.Symbols.Symbol)],pi:[{n:"symbols",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Symbol),ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol)],pi:[{n:"symbols",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol),ps:0}],sn:"$ctor1"},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Members",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),g:{ov:!0,a:2,n:"get_Members",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),fg:"Members"},fn:"Members"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:1,n:"members",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),sn:"members",ro:!0}]}},$n);$m("Kusto.Language.Symbols.OperatorKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Add",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Add",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"And",is:!0,t:4,rt:$n[1].OperatorKind,sn:"And",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"BangTilde",is:!0,t:4,rt:$n[1].OperatorKind,sn:"BangTilde",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Between",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Between",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Contains",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Contains",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"ContainsCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"ContainsCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Divide",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Divide",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"EndsWith",is:!0,t:4,rt:$n[1].OperatorKind,sn:"EndsWith",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"EndsWithCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"EndsWithCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Equal",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Equal",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"EqualTilde",is:!0,t:4,rt:$n[1].OperatorKind,sn:"EqualTilde",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"GreaterThan",is:!0,t:4,rt:$n[1].OperatorKind,sn:"GreaterThan",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"GreaterThanOrEqual",is:!0,t:4,rt:$n[1].OperatorKind,sn:"GreaterThanOrEqual",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Has",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Has",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"HasAll",is:!0,t:4,rt:$n[1].OperatorKind,sn:"HasAll",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"HasAny",is:!0,t:4,rt:$n[1].OperatorKind,sn:"HasAny",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"HasCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"HasCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"HasPrefix",is:!0,t:4,rt:$n[1].OperatorKind,sn:"HasPrefix",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"HasPrefixCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"HasPrefixCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"HasSuffix",is:!0,t:4,rt:$n[1].OperatorKind,sn:"HasSuffix",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"HasSuffixCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"HasSuffixCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"In",is:!0,t:4,rt:$n[1].OperatorKind,sn:"In",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"InCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"InCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"LessThan",is:!0,t:4,rt:$n[1].OperatorKind,sn:"LessThan",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"LessThanOrEqual",is:!0,t:4,rt:$n[1].OperatorKind,sn:"LessThanOrEqual",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Like",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Like",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"LikeCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"LikeCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"MatchRegex",is:!0,t:4,rt:$n[1].OperatorKind,sn:"MatchRegex",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Modulo",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Modulo",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Multiply",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Multiply",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"None",is:!0,t:4,rt:$n[1].OperatorKind,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotBetween",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotBetween",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotContains",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotContains",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotContainsCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotContainsCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotEndsWith",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotEndsWith",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotEndsWithCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotEndsWithCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotEqual",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotEqual",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotHas",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotHas",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotHasCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotHasCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotHasPrefix",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotHasPrefix",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotHasPrefixCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotHasPrefixCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotHasSuffix",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotHasSuffix",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotHasSuffixCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotHasSuffixCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotIn",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotIn",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotInCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotInCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotLike",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotLike",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotLikeCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotLikeCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotStartsWith",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotStartsWith",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"NotStartsWithCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"NotStartsWithCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Or",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Or",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Search",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Search",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"StartsWith",is:!0,t:4,rt:$n[1].OperatorKind,sn:"StartsWith",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"StartsWithCs",is:!0,t:4,rt:$n[1].OperatorKind,sn:"StartsWithCs",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"Subtract",is:!0,t:4,rt:$n[1].OperatorKind,sn:"Subtract",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"UnaryMinus",is:!0,t:4,rt:$n[1].OperatorKind,sn:"UnaryMinus",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"UnaryPlus",is:!0,t:4,rt:$n[1].OperatorKind,sn:"UnaryPlus",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}}]}},$n);$m("Kusto.Language.Symbols.OperatorSymbol",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[1].OperatorKind,System.Array.type(Kusto.Language.Symbols.Signature)],pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"signatures",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Signature),ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].OperatorKind,$n[1].TypeSymbol],pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"result",pt:$n[1].TypeSymbol,ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].OperatorKind,$n[0].IEnumerable$1(Kusto.Language.Symbols.Signature)],pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"signatures",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Signature),ps:1}],sn:"$ctor2"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{a:2,n:"OperatorKind",t:16,rt:$n[1].OperatorKind,g:{a:2,n:"get_OperatorKind",t:8,rt:$n[1].OperatorKind,fg:"OperatorKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},fn:"OperatorKind"},{a:2,n:"Result",t:16,rt:$n[1].TypeSymbol,g:{a:2,n:"get_Result",t:8,rt:$n[1].TypeSymbol,fg:"Result"},fn:"Result"},{a:2,n:"Signatures",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),g:{a:2,n:"get_Signatures",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),fg:"Signatures"},fn:"Signatures"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:1,backing:!0,n:"<OperatorKind>k__BackingField",t:4,rt:$n[1].OperatorKind,sn:"OperatorKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:1,backing:!0,n:"<Result>k__BackingField",t:4,rt:$n[1].TypeSymbol,sn:"Result"},{a:1,backing:!0,n:"<Signatures>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),sn:"Signatures"}]}},$n);$m("Kusto.Language.Symbols.OptionSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[1].ScalarSymbol,$n[0].IReadOnlyList$1(System.String)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"description",pt:$n[2].String,ps:1},{n:"type",pt:$n[1].ScalarSymbol,ps:2},{n:"examples",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.String),ps:3}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol),$n[0].IReadOnlyList$1(System.String)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:1},{n:"types",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol),ps:2},{n:"examples",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.String),ps:3}],sn:"$ctor1"},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"Description",t:16,rt:$n[2].String,g:{a:2,n:"get_Description",t:8,rt:$n[2].String,fg:"Description"},fn:"Description"},{a:2,n:"Examples",t:16,rt:$n[0].IReadOnlyList$1(System.String),g:{a:2,n:"get_Examples",t:8,rt:$n[0].IReadOnlyList$1(System.String),fg:"Examples"},fn:"Examples"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"Types",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol),g:{a:2,n:"get_Types",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol),fg:"Types"},fn:"Types"},{a:1,backing:!0,n:"<Description>k__BackingField",t:4,rt:$n[2].String,sn:"Description"},{a:1,backing:!0,n:"<Examples>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"Examples"},{a:1,backing:!0,n:"<Types>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol),sn:"Types"}]}},$n);$m("Kusto.Language.Symbols.Parameter",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].TypeSymbol],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].ParameterTypeKind,$n[1].ArgumentKind,$n[0].IReadOnlyList$1(System.Object),$n[0].IReadOnlyList$1(System.String),$n[2].Boolean,$n[2].String,$n[2].Int32,$n[2].Int32,$n[3].Expression,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"typeKind",pt:$n[1].ParameterTypeKind,ps:1},{n:"argumentKind",dv:0,o:!0,pt:$n[1].ArgumentKind,ps:2},{n:"values",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.Object),ps:3},{n:"examples",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.String),ps:4},{n:"isCaseSensitive",dv:!1,o:!0,pt:$n[2].Boolean,ps:5},{n:"defaultValueIndicator",dv:null,o:!0,pt:$n[2].String,ps:6},{n:"minOccurring",dv:1,o:!0,pt:$n[2].Int32,ps:7},{n:"maxOccurring",dv:1,o:!0,pt:$n[2].Int32,ps:8},{n:"defaultValue",dv:null,o:!0,pt:$n[3].Expression,ps:9},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:10}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].TypeSymbol,$n[1].ArgumentKind,$n[0].IReadOnlyList$1(System.Object),$n[0].IReadOnlyList$1(System.String),$n[2].Boolean,$n[2].String,$n[2].Int32,$n[2].Int32,$n[3].Expression,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"argumentKind",dv:0,o:!0,pt:$n[1].ArgumentKind,ps:2},{n:"values",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.Object),ps:3},{n:"examples",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.String),ps:4},{n:"isCaseSensitive",dv:!1,o:!0,pt:$n[2].Boolean,ps:5},{n:"defaultValueIndicator",dv:null,o:!0,pt:$n[2].String,ps:6},{n:"minOccurring",dv:1,o:!0,pt:$n[2].Int32,ps:7},{n:"maxOccurring",dv:1,o:!0,pt:$n[2].Int32,ps:8},{n:"defaultValue",dv:null,o:!0,pt:$n[3].Expression,ps:9},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:10}],sn:"$ctor3"},{a:2,n:".ctor",t:1,p:[$n[2].String,System.Array.type(Kusto.Language.Symbols.TypeSymbol),$n[1].ArgumentKind,$n[0].IReadOnlyList$1(System.Object),$n[0].IReadOnlyList$1(System.String),$n[2].Boolean,$n[2].String,$n[2].Int32,$n[2].Int32,$n[3].Expression,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"types",pt:System.Array.type(Kusto.Language.Symbols.TypeSymbol),ps:1},{n:"argumentKind",dv:0,o:!0,pt:$n[1].ArgumentKind,ps:2},{n:"values",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.Object),ps:3},{n:"examples",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.String),ps:4},{n:"isCaseSensitive",dv:!1,o:!0,pt:$n[2].Boolean,ps:5},{n:"defaultValueIndicator",dv:null,o:!0,pt:$n[2].String,ps:6},{n:"minOccurring",dv:1,o:!0,pt:$n[2].Int32,ps:7},{n:"maxOccurring",dv:1,o:!0,pt:$n[2].Int32,ps:8},{n:"defaultValue",dv:null,o:!0,pt:$n[3].Expression,ps:9},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:10}],sn:"$ctor4"},{a:1,n:".ctor",t:1,p:[$n[2].String,$n[1].ParameterTypeKind,System.Array.type(Kusto.Language.Symbols.TypeSymbol),$n[1].ArgumentKind,$n[0].IEnumerable$1(System.Object),$n[0].IEnumerable$1(System.String),$n[2].Boolean,$n[2].String,$n[2].Int32,$n[2].Int32,$n[3].Expression,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"typeKind",pt:$n[1].ParameterTypeKind,ps:1},{n:"types",pt:System.Array.type(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"argumentKind",pt:$n[1].ArgumentKind,ps:3},{n:"values",pt:$n[0].IEnumerable$1(System.Object),ps:4},{n:"examples",pt:$n[0].IEnumerable$1(System.String),ps:5},{n:"isCaseSensitive",pt:$n[2].Boolean,ps:6},{n:"defaultValueIndicator",pt:$n[2].String,ps:7},{n:"minOccurring",pt:$n[2].Int32,ps:8},{n:"maxOccurring",pt:$n[2].Int32,ps:9},{n:"defaultValue",pt:$n[3].Expression,ps:10},{n:"description",pt:$n[2].String,ps:11}],sn:"$ctor1"},{a:2,n:"From",is:!0,t:8,pi:[{n:"declaration",pt:$n[3].FunctionParameter,ps:0}],sn:"From$1",rt:$n[1].Parameter,p:[$n[3].FunctionParameter]},{a:2,n:"From",is:!0,t:8,pi:[{n:"declaration",pt:$n[3].FunctionParameters,ps:0}],sn:"From$2",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),p:[$n[3].FunctionParameters]},{a:2,n:"From",is:!0,t:8,pi:[{n:"parameter",pt:$n[1].ParameterSymbol,ps:0},{n:"isOptional",dv:!1,o:!0,pt:$n[2].Boolean,ps:1},{n:"defaultValue",dv:null,o:!0,pt:$n[3].Expression,ps:2}],sn:"From",rt:$n[1].Parameter,p:[$n[1].ParameterSymbol,$n[2].Boolean,$n[3].Expression]},{a:2,n:"ParseList",is:!0,t:8,pi:[{n:"parameters",pt:$n[2].String,ps:0}],sn:"ParseList",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),p:[$n[2].String]},{a:2,n:"ArgumentKind",t:16,rt:$n[1].ArgumentKind,g:{a:2,n:"get_ArgumentKind",t:8,rt:$n[1].ArgumentKind,fg:"ArgumentKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ArgumentKind,System.Enum.toStringFn(Kusto.Language.Symbols.ArgumentKind))}},fn:"ArgumentKind"},{a:2,n:"DeclaredTypes",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),g:{a:2,n:"get_DeclaredTypes",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),fg:"DeclaredTypes"},fn:"DeclaredTypes"},{a:2,n:"DefaultValue",t:16,rt:$n[3].Expression,g:{a:2,n:"get_DefaultValue",t:8,rt:$n[3].Expression,fg:"DefaultValue"},fn:"DefaultValue"},{a:2,n:"DefaultValueIndicator",t:16,rt:$n[2].String,g:{a:2,n:"get_DefaultValueIndicator",t:8,rt:$n[2].String,fg:"DefaultValueIndicator"},fn:"DefaultValueIndicator"},{a:2,n:"Description",t:16,rt:$n[2].String,g:{a:2,n:"get_Description",t:8,rt:$n[2].String,fg:"Description"},fn:"Description"},{a:2,n:"Display",t:16,rt:$n[2].String,g:{a:2,n:"get_Display",t:8,rt:$n[2].String,fg:"Display"},fn:"Display"},{a:2,n:"Examples",t:16,rt:$n[0].IReadOnlyList$1(System.String),g:{a:2,n:"get_Examples",t:8,rt:$n[0].IReadOnlyList$1(System.String),fg:"Examples"},fn:"Examples"},{a:2,n:"IsCaseSensitive",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsCaseSensitive",t:8,rt:$n[2].Boolean,fg:"IsCaseSensitive",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsCaseSensitive"},{a:2,n:"IsOptional",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsOptional",t:8,rt:$n[2].Boolean,fg:"IsOptional",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOptional"},{a:2,n:"IsRepeatable",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsRepeatable",t:8,rt:$n[2].Boolean,fg:"IsRepeatable",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsRepeatable"},{a:2,n:"IsScalar",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsScalar",t:8,rt:$n[2].Boolean,fg:"IsScalar",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsScalar"},{a:2,n:"IsTabular",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsTabular",t:8,rt:$n[2].Boolean,fg:"IsTabular",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsTabular"},{a:2,n:"MaxOccurring",t:16,rt:$n[2].Int32,g:{a:2,n:"get_MaxOccurring",t:8,rt:$n[2].Int32,fg:"MaxOccurring",box:function($v){return Bridge.box($v,System.Int32)}},fn:"MaxOccurring"},{a:2,n:"MinOccurring",t:16,rt:$n[2].Int32,g:{a:2,n:"get_MinOccurring",t:8,rt:$n[2].Int32,fg:"MinOccurring",box:function($v){return Bridge.box($v,System.Int32)}},fn:"MinOccurring"},{a:2,n:"Name",t:16,rt:$n[2].String,g:{a:2,n:"get_Name",t:8,rt:$n[2].String,fg:"Name"},fn:"Name"},{a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"TypeDependsOnArguments",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_TypeDependsOnArguments",t:8,rt:$n[2].Boolean,fg:"TypeDependsOnArguments",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"TypeDependsOnArguments"},{a:2,n:"TypeDisplay",t:16,rt:$n[2].String,g:{a:2,n:"get_TypeDisplay",t:8,rt:$n[2].String,fg:"TypeDisplay"},fn:"TypeDisplay"},{a:2,n:"TypeKind",t:16,rt:$n[1].ParameterTypeKind,g:{a:2,n:"get_TypeKind",t:8,rt:$n[1].ParameterTypeKind,fg:"TypeKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},fn:"TypeKind"},{a:2,n:"Values",t:16,rt:$n[0].IReadOnlyList$1(System.Object),g:{a:2,n:"get_Values",t:8,rt:$n[0].IReadOnlyList$1(System.Object),fg:"Values"},fn:"Values"},{a:1,n:"NoExamples",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"NoExamples",ro:!0},{a:1,n:"NoValues",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.Object),sn:"NoValues",ro:!0},{a:1,backing:!0,n:"<ArgumentKind>k__BackingField",t:4,rt:$n[1].ArgumentKind,sn:"ArgumentKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ArgumentKind,System.Enum.toStringFn(Kusto.Language.Symbols.ArgumentKind))}},{a:1,backing:!0,n:"<DeclaredTypes>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),sn:"DeclaredTypes"},{a:1,backing:!0,n:"<DefaultValue>k__BackingField",t:4,rt:$n[3].Expression,sn:"DefaultValue"},{a:1,backing:!0,n:"<DefaultValueIndicator>k__BackingField",t:4,rt:$n[2].String,sn:"DefaultValueIndicator"},{a:1,backing:!0,n:"<Description>k__BackingField",t:4,rt:$n[2].String,sn:"Description"},{a:1,backing:!0,n:"<Examples>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"Examples"},{a:1,backing:!0,n:"<IsCaseSensitive>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsCaseSensitive",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<MaxOccurring>k__BackingField",t:4,rt:$n[2].Int32,sn:"MaxOccurring",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<MinOccurring>k__BackingField",t:4,rt:$n[2].Int32,sn:"MinOccurring",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[2].String,sn:"Name"},{a:1,backing:!0,n:"<TypeKind>k__BackingField",t:4,rt:$n[1].ParameterTypeKind,sn:"TypeKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:1,backing:!0,n:"<Values>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(System.Object),sn:"Values"}]}},$n);$m("Kusto.Language.Symbols.ParameterLayout",function(){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters$1",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{v:!0,a:2,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:1,n:"GetFakeExpressions",is:!0,t:8,pi:[{n:"types",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:0},{n:"expressions",pt:$n[0].List$1(Kusto.Language.Syntax.Expression),ps:1}],sn:"GetFakeExpressions",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].List$1(Kusto.Language.Syntax.Expression)]},{v:!0,a:2,n:"GetNextPossibleParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"possibleParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetNextPossibleParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{v:!0,a:2,n:"IsValidArgumentCount",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentCount",pt:$n[2].Int32,ps:1}],sn:"IsValidArgumentCount",rt:$n[2].Boolean,p:[$n[1].Signature,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"s_expressionListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression)),sn:"s_expressionListPool",ro:!0},{a:1,n:"s_parameterListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)),sn:"s_parameterListPool",ro:!0}]}},$n);$m("Kusto.Language.Symbols.ParameterLayouts",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Custom",is:!0,t:8,pi:[{n:"builder",pt:Function,ps:0}],sn:"Custom",rt:$n[1].ParameterLayout,p:[Function]},{a:2,n:"BlockRepeating",is:!0,t:4,rt:$n[1].ParameterLayout,sn:"BlockRepeating",ro:!0},{a:2,n:"Fixed",is:!0,t:4,rt:$n[1].ParameterLayout,sn:"Fixed",ro:!0},{a:2,n:"Repeating",is:!0,t:4,rt:$n[1].ParameterLayout,sn:"Repeating",ro:!0},{a:2,n:"RepeatingSkipping",is:!0,t:4,rt:$n[1].ParameterLayout,sn:"RepeatingSkipping",ro:!0}]}},$n);$m("Kusto.Language.Symbols.NonRepeatingParameterLayout",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters$1",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{ov:!0,a:2,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{ov:!0,a:2,n:"GetNextPossibleParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"existingArguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"possibleParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetNextPossibleParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:4,n:"LayoutParameters",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"nArguments",pt:$n[2].Int32,ps:1},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:2},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:3}],sn:"LayoutParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[2].Int32,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]}]}},$n);$m("Kusto.Language.Symbols.RepeatingParameterLayout",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[2].Boolean],pi:[{n:"allowSkippingOptionalParameters",pt:$n[2].Boolean,ps:0}],sn:"ctor"},{ov:!0,a:2,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters$1",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{ov:!0,a:2,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:1,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:3},{n:"iCurrentParameter",ref:!0,pt:$n[2].Int32,ps:4},{n:"iCurrentParameterCount",ref:!0,pt:$n[2].Int32,ps:5}],sn:"GetArgumentParameters$2",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].List$1(Kusto.Language.Symbols.Parameter),$n[2].Int32,$n[2].Int32]},{a:1,n:"GetArgumentTypes",is:!0,t:8,pi:[{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0},{n:"types",pt:$n[0].List$1(Kusto.Language.Symbols.TypeSymbol),ps:1}],sn:"GetArgumentTypes",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.TypeSymbol)]},{ov:!0,a:2,n:"GetNextPossibleParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"possibleParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetNextPossibleParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:1,n:"_allowSkippingOptionalParameters",t:4,rt:$n[2].Boolean,sn:"_allowSkippingOptionalParameters",ro:!0,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"s_parameterListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)),sn:"s_parameterListPool",ro:!0},{a:1,n:"s_typeListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol)),sn:"s_typeListPool",ro:!0}]}},$n);$m("Kusto.Language.Symbols.BlockRepeatingParameterLayout",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters$1",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{ov:!0,a:2,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:1,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"nArguments",pt:$n[2].Int32,ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters$2",rt:$n[2].Void,p:[$n[1].Signature,$n[2].Int32,$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{ov:!0,a:2,n:"GetNextPossibleParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"possibleParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetNextPossibleParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{ov:!0,a:2,n:"IsValidArgumentCount",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentCount",pt:$n[2].Int32,ps:1}],sn:"IsValidArgumentCount",rt:$n[2].Boolean,p:[$n[1].Signature,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Symbols.CustomParameterLayout",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[Function],pi:[{n:"builder",pt:Function,ps:0}],sn:"ctor"},{ov:!0,a:2,n:"GetArgumentParameters",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetArgumentParameters$1",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:1,n:"_builder",t:4,rt:Function,sn:"_builder",ro:!0}]}},$n);$m("Kusto.Language.Symbols.ParameterSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].TypeSymbol,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:2}],sn:"ctor"},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"Description",t:16,rt:$n[2].String,g:{a:2,n:"get_Description",t:8,rt:$n[2].String,fg:"Description"},fn:"Description"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"Type",t:16,rt:$n[1].TypeSymbol,g:{a:2,n:"get_Type",t:8,rt:$n[1].TypeSymbol,fg:"Type"},fn:"Type"},{a:1,backing:!0,n:"<Description>k__BackingField",t:4,rt:$n[2].String,sn:"Description"},{a:1,backing:!0,n:"<Type>k__BackingField",t:4,rt:$n[1].TypeSymbol,sn:"Type"}]}},$n);$m("Kusto.Language.Symbols.ParameterTypeKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Cluster",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Cluster",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"CommonNumber",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"CommonNumber",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"CommonOrderable",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"CommonOrderable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"CommonScalar",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"CommonScalar",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"CommonScalarOrDynamic",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"CommonScalarOrDynamic",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"CommonSummable",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"CommonSummable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Database",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Database",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Declared",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Declared",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Integer",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Integer",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"IntegerOrDynamic",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"IntegerOrDynamic",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"NotBool",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"NotBool",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"NotDynamic",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"NotDynamic",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"NotRealOrBool",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"NotRealOrBool",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Number",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Number",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Orderable",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Orderable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Parameter0",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Parameter0",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Parameter1",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Parameter1",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Parameter2",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Parameter2",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"RealOrDecimal",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"RealOrDecimal",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Scalar",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Scalar",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"StringOrDynamic",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"StringOrDynamic",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Summable",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Summable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}},{a:2,n:"Tabular",is:!0,t:4,rt:$n[1].ParameterTypeKind,sn:"Tabular",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind))}}]}},$n);$m("Kusto.Language.Symbols.PatternSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[1].Parameter,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.PatternSignature)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"parameters",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:1},{n:"pathParameter",dv:null,o:!0,pt:$n[1].Parameter,ps:2},{n:"signatures",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.PatternSignature),ps:3}],sn:"$ctor1"},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"PathParameter",t:16,rt:$n[1].Parameter,g:{a:2,n:"get_PathParameter",t:8,rt:$n[1].Parameter,fg:"PathParameter"},fn:"PathParameter"},{a:2,n:"Signatures",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.PatternSignature),g:{a:2,n:"get_Signatures",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.PatternSignature),fg:"Signatures"},fn:"Signatures"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),sn:"Parameters"},{a:1,backing:!0,n:"<PathParameter>k__BackingField",t:4,rt:$n[1].Parameter,sn:"PathParameter"},{a:1,backing:!0,n:"<Signatures>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.PatternSignature),sn:"Signatures"}]}},$n);$m("Kusto.Language.Symbols.PatternSignature",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(System.String),$n[2].String,$n[3].FunctionBody],pi:[{n:"argumentValues",pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"pathValue",pt:$n[2].String,ps:1},{n:"body",pt:$n[3].FunctionBody,ps:2}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(System.String),$n[2].String,$n[2].String],pi:[{n:"argumentValues",pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"pathValue",pt:$n[2].String,ps:1},{n:"body",pt:$n[2].String,ps:2}],sn:"$ctor1"},{a:1,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(System.String),$n[2].String,$n[2].String,$n[3].FunctionBody],pi:[{n:"argumentValues",pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"pathValue",pt:$n[2].String,ps:1},{n:"bodyText",pt:$n[2].String,ps:2},{n:"bodySyntax",pt:$n[3].FunctionBody,ps:3}],sn:"$ctor2"},{a:2,n:"ArgumentValues",t:16,rt:$n[0].IReadOnlyList$1(System.String),g:{a:2,n:"get_ArgumentValues",t:8,rt:$n[0].IReadOnlyList$1(System.String),fg:"ArgumentValues"},fn:"ArgumentValues"},{a:2,n:"PathValue",t:16,rt:$n[2].String,g:{a:2,n:"get_PathValue",t:8,rt:$n[2].String,fg:"PathValue"},fn:"PathValue"},{a:2,n:"Signature",t:16,rt:$n[1].Signature,g:{a:2,n:"get_Signature",t:8,rt:$n[1].Signature,fg:"Signature"},fn:"Signature"},{a:2,n:"Symbol",t:16,rt:$n[1].PatternSymbol,g:{a:2,n:"get_Symbol",t:8,rt:$n[1].PatternSymbol,fg:"Symbol"},s:{a:4,n:"set_Symbol",t:8,p:[$n[1].PatternSymbol],rt:$n[2].Void,fs:"Symbol"},fn:"Symbol"},{a:1,n:"_bodySyntax",t:4,rt:$n[3].FunctionBody,sn:"_bodySyntax",ro:!0},{a:1,n:"_bodyText",t:4,rt:$n[2].String,sn:"_bodyText",ro:!0},{a:1,n:"_signature",t:4,rt:$n[1].Signature,sn:"_signature"},{a:1,backing:!0,n:"<ArgumentValues>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"ArgumentValues"},{a:1,backing:!0,n:"<PathValue>k__BackingField",t:4,rt:$n[2].String,sn:"PathValue"},{a:1,backing:!0,n:"<Symbol>k__BackingField",t:4,rt:$n[1].PatternSymbol,sn:"Symbol"}]}},$n);$m("Kusto.Language.Symbols.ReturnTypeKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Common",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Common",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Computed",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Computed",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Custom",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Custom",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Declared",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Declared",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Parameter0",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Parameter0",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Parameter0Cluster",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Parameter0Cluster",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Parameter0Database",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Parameter0Database",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Parameter0ExternalTable",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Parameter0ExternalTable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Parameter0MaterializedView",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Parameter0MaterializedView",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Parameter0Promoted",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Parameter0Promoted",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Parameter0Table",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Parameter0Table",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Parameter1",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Parameter1",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Parameter2",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Parameter2",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"ParameterN",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"ParameterN",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"ParameterNLiteral",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"ParameterNLiteral",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:2,n:"Widest",is:!0,t:4,rt:$n[1].ReturnTypeKind,sn:"Widest",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}}]}},$n);$m("Kusto.Language.Symbols.ScalarSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].Array.type(System.String),$n[1].ScalarFlags,System.Array.type(Kusto.Language.Symbols.ScalarSymbol)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"aliases",dv:null,o:!0,pt:$n[2].Array.type(System.String),ps:1},{n:"flags",dv:0,o:!0,pt:$n[1].ScalarFlags,ps:2},{n:"widerThan",dv:null,o:!0,pt:System.Array.type(Kusto.Language.Symbols.ScalarSymbol),ps:3}],sn:"ctor"},{a:2,n:"From",is:!0,t:8,pi:[{n:"typeName",pt:$n[2].String,ps:0}],sn:"From",rt:$n[1].ScalarSymbol,p:[$n[2].String]},{a:2,n:"IsWiderThan",t:8,pi:[{n:"scalar",pt:$n[1].ScalarSymbol,ps:0}],sn:"IsWiderThan",rt:$n[2].Boolean,p:[$n[1].ScalarSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Aliases",t:16,rt:$n[0].IReadOnlyList$1(System.String),g:{a:2,n:"get_Aliases",t:8,rt:$n[0].IReadOnlyList$1(System.String),fg:"Aliases"},fn:"Aliases"},{a:2,n:"Flags",t:16,rt:$n[1].ScalarFlags,g:{a:2,n:"get_Flags",t:8,rt:$n[1].ScalarFlags,fg:"Flags",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ScalarFlags,System.Enum.toStringFn(Kusto.Language.Symbols.ScalarFlags))}},fn:"Flags"},{a:2,n:"IsInteger",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsInteger",t:8,rt:$n[2].Boolean,fg:"IsInteger",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsInteger"},{a:2,n:"IsInterval",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsInterval",t:8,rt:$n[2].Boolean,fg:"IsInterval",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsInterval"},{a:2,n:"IsNumeric",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsNumeric",t:8,rt:$n[2].Boolean,fg:"IsNumeric",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsNumeric"},{a:2,n:"IsOrderable",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsOrderable",t:8,rt:$n[2].Boolean,fg:"IsOrderable",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOrderable"},{a:2,n:"IsSummable",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsSummable",t:8,rt:$n[2].Boolean,fg:"IsSummable",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsSummable"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"WiderThan",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol),g:{a:2,n:"get_WiderThan",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol),fg:"WiderThan"},fn:"WiderThan"},{a:1,backing:!0,n:"<Aliases>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"Aliases"},{a:1,backing:!0,n:"<Flags>k__BackingField",t:4,rt:$n[1].ScalarFlags,sn:"Flags",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ScalarFlags,System.Enum.toStringFn(Kusto.Language.Symbols.ScalarFlags))}},{a:1,backing:!0,n:"<WiderThan>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol),sn:"WiderThan"}]}},$n);$m("Kusto.Language.Symbols.ScalarFlags",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"All",is:!0,t:4,rt:$n[1].ScalarFlags,sn:"All",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ScalarFlags,System.Enum.toStringFn(Kusto.Language.Symbols.ScalarFlags))}},{a:2,n:"Integer",is:!0,t:4,rt:$n[1].ScalarFlags,sn:"Integer",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ScalarFlags,System.Enum.toStringFn(Kusto.Language.Symbols.ScalarFlags))}},{a:2,n:"Interval",is:!0,t:4,rt:$n[1].ScalarFlags,sn:"Interval",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ScalarFlags,System.Enum.toStringFn(Kusto.Language.Symbols.ScalarFlags))}},{a:2,n:"None",is:!0,t:4,rt:$n[1].ScalarFlags,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ScalarFlags,System.Enum.toStringFn(Kusto.Language.Symbols.ScalarFlags))}},{a:2,n:"Numeric",is:!0,t:4,rt:$n[1].ScalarFlags,sn:"Numeric",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ScalarFlags,System.Enum.toStringFn(Kusto.Language.Symbols.ScalarFlags))}},{a:2,n:"Orderable",is:!0,t:4,rt:$n[1].ScalarFlags,sn:"Orderable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ScalarFlags,System.Enum.toStringFn(Kusto.Language.Symbols.ScalarFlags))}},{a:2,n:"Summable",is:!0,t:4,rt:$n[1].ScalarFlags,sn:"Summable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ScalarFlags,System.Enum.toStringFn(Kusto.Language.Symbols.ScalarFlags))}}]}},$n);$m("Kusto.Language.Symbols.ScalarTypes",function(){return{att:385,a:2,s:!0,m:[{n:".cctor",t:1,sn:"ctor",sm:!0},{a:2,n:"GetSymbol",is:!0,t:8,pi:[{n:"typeName",pt:$n[2].String,ps:0}],sn:"GetSymbol",rt:$n[1].ScalarSymbol,p:[$n[2].String]},{a:2,n:"All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol),sn:"All",ro:!0},{a:2,n:"Bool",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"Bool",ro:!0},{a:2,n:"DateTime",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"DateTime",ro:!0},{a:2,n:"Decimal",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"Decimal",ro:!0},{a:2,n:"Dynamic",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"Dynamic",ro:!0},{a:2,n:"Guid",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"Guid",ro:!0},{a:2,n:"Int",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"Int",ro:!0},{a:2,n:"Long",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"Long",ro:!0},{a:2,n:"Real",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"Real",ro:!0},{a:2,n:"String",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"String",ro:!0},{a:2,n:"TimeSpan",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"TimeSpan",ro:!0},{a:2,n:"Type",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"Type",ro:!0},{a:2,n:"Unknown",is:!0,t:4,rt:$n[1].ScalarSymbol,sn:"Unknown",ro:!0},{a:1,n:"s_typeMap",is:!0,t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.ScalarSymbol),sn:"s_typeMap",ro:!0}]}},$n);$m("Kusto.Language.Symbols.Scope",function(){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"GetSymbols",t:8,pi:[{n:"match",pt:$n[1].SymbolMatch,ps:0},{n:"symbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:1}],sn:"GetSymbols",rt:$n[2].Void,p:[$n[1].SymbolMatch,$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{ab:!0,a:2,n:"GetSymbols",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"match",pt:$n[1].SymbolMatch,ps:1},{n:"symbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:2}],sn:"GetSymbols$1",rt:$n[2].Void,p:[$n[2].String,$n[1].SymbolMatch,$n[0].List$1(Kusto.Language.Symbols.Symbol)]}]}},$n);$m("Kusto.Language.Symbols.Signature",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[1].ReturnTypeKind,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"returnKind",pt:$n[1].ReturnTypeKind,ps:0},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:1}],sn:"$ctor4"},{a:2,n:".ctor",t:1,p:[$n[1].ReturnTypeKind,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"returnKind",pt:$n[1].ReturnTypeKind,ps:0},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:1}],sn:"$ctor6"},{a:2,n:".ctor",t:1,p:[$n[1].TypeSymbol,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"returnType",pt:$n[1].TypeSymbol,ps:0},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:1}],sn:"$ctor7"},{a:2,n:".ctor",t:1,p:[$n[1].TypeSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"returnType",pt:$n[1].TypeSymbol,ps:0},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:1}],sn:"$ctor8"},{a:2,n:".ctor",t:1,p:[$n[3].FunctionBody,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"declaration",pt:$n[3].FunctionBody,ps:0},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:1}],sn:"$ctor9"},{a:2,n:".ctor",t:1,p:[$n[3].FunctionBody,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"declaration",pt:$n[3].FunctionBody,ps:0},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:1}],sn:"$ctor10"},{a:2,n:".ctor",t:1,p:[Function,$n[1].Tabularity,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"customReturnType",pt:Function,ps:0},{n:"tabularity",pt:$n[1].Tabularity,ps:1},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:2}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[Function,$n[1].Tabularity,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"customReturnType",pt:Function,ps:0},{n:"tabularity",pt:$n[1].Tabularity,ps:1},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[Function,$n[1].Tabularity,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"customReturnType",pt:Function,ps:0},{n:"tabularity",pt:$n[1].Tabularity,ps:1},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[Function,$n[1].Tabularity,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"customReturnType",pt:Function,ps:0},{n:"tabularity",pt:$n[1].Tabularity,ps:1},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor3"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].Tabularity,System.Array.type(Kusto.Language.Symbols.Parameter)],pi:[{n:"body",pt:$n[2].String,ps:0},{n:"tabularity",pt:$n[1].Tabularity,ps:1},{n:"parameters",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor11"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].Tabularity,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)],pi:[{n:"body",pt:$n[2].String,ps:0},{n:"tabularity",pt:$n[1].Tabularity,ps:1},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"$ctor12"},{a:1,n:".ctor",t:1,p:[$n[1].ReturnTypeKind,$n[1].TypeSymbol,$n[2].String,$n[3].FunctionBody,Function,$n[1].Tabularity,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[1].ParameterLayout,$n[2].Boolean],pi:[{n:"returnKind",pt:$n[1].ReturnTypeKind,ps:0},{n:"returnType",pt:$n[1].TypeSymbol,ps:1},{n:"body",pt:$n[2].String,ps:2},{n:"declaration",pt:$n[3].FunctionBody,ps:3},{n:"customReturnType",pt:Function,ps:4},{n:"tabularity",pt:$n[1].Tabularity,ps:5},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:6},{n:"layout",dv:null,o:!0,pt:$n[1].ParameterLayout,ps:7},{n:"isHidden",dv:!1,o:!0,pt:$n[2].Boolean,ps:8}],sn:"$ctor5"},{a:2,n:"ComputeTabularity",t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"ComputeTabularity",rt:$n[2].Void,p:[$n[4].GlobalState]},{a:2,n:"GetArgumentParameters",t:8,pi:[{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0}],sn:"GetArgumentParameters",rt:$n[0].List$1(Kusto.Language.Symbols.Parameter),p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression)]},{a:2,n:"GetArgumentParameters",t:8,pi:[{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:1}],sn:"GetArgumentParameters$2",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:2,n:"GetArgumentParameters",t:8,pi:[{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:0},{n:"argumentParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:1}],sn:"GetArgumentParameters$1",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:1,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"GetNextPossibleParameters",t:8,pi:[{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0},{n:"possibleParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:1}],sn:"GetNextPossibleParameters",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:2,n:"GetParameter",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetParameter",rt:$n[1].Parameter,p:[$n[2].String]},{a:2,n:"GetReturnType",t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"GetReturnType",rt:$n[1].TypeSymbol,p:[$n[4].GlobalState]},{a:2,n:"GetReturnType",t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:1}],sn:"GetReturnType$1",rt:$n[1].TypeSymbol,p:[$n[4].GlobalState,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:2,n:"GetReturnType",t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:1},{n:"argumentParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2}],sn:"GetReturnType$2",rt:$n[1].TypeSymbol,p:[$n[4].GlobalState,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter)]},{a:1,n:"GetSyntaxTabularity",t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"GetSyntaxTabularity",rt:$n[1].Tabularity,p:[$n[4].GlobalState],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},{a:2,n:"Hide",t:8,sn:"Hide",rt:$n[1].Signature},{a:2,n:"IsValidArgumentCount",t:8,pi:[{n:"argumentCount",pt:$n[2].Int32,ps:0}],sn:"IsValidArgumentCount",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"WithLayout",t:8,pi:[{n:"layout",pt:$n[1].ParameterLayout,ps:0}],sn:"WithLayout",rt:$n[1].Signature,p:[$n[1].ParameterLayout]},{a:2,n:"WithLayout",t:8,pi:[{n:"customBuilder",pt:Function,ps:0}],sn:"WithLayout$1",rt:$n[1].Signature,p:[Function]},{a:2,n:"AllowsNamedArguments",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_AllowsNamedArguments",t:8,rt:$n[2].Boolean,fg:"AllowsNamedArguments",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"AllowsNamedArguments"},{a:2,n:"Body",t:16,rt:$n[2].String,g:{a:2,n:"get_Body",t:8,rt:$n[2].String,fg:"Body"},fn:"Body"},{a:2,n:"CustomReturnType",t:16,rt:Function,g:{a:2,n:"get_CustomReturnType",t:8,rt:Function,fg:"CustomReturnType"},fn:"CustomReturnType"},{a:2,n:"Declaration",t:16,rt:$n[3].FunctionBody,g:{a:2,n:"get_Declaration",t:8,rt:$n[3].FunctionBody,fg:"Declaration"},fn:"Declaration"},{a:2,n:"DeclaredReturnType",t:16,rt:$n[1].TypeSymbol,g:{a:2,n:"get_DeclaredReturnType",t:8,rt:$n[1].TypeSymbol,fg:"DeclaredReturnType"},fn:"DeclaredReturnType"},{a:2,n:"Display",t:16,rt:$n[2].String,g:{a:2,n:"get_Display",t:8,rt:$n[2].String,fg:"Display"},fn:"Display"},{a:4,n:"FunctionBodyFacts",t:16,rt:$n[2].Nullable$1(Kusto.Language.Symbols.FunctionBodyFacts),g:{a:4,n:"get_FunctionBodyFacts",t:8,rt:$n[2].Nullable$1(Kusto.Language.Symbols.FunctionBodyFacts),fg:"FunctionBodyFacts",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Nullable.toStringFn(System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts)),System.Nullable.getHashCode)}},s:{a:4,n:"set_FunctionBodyFacts",t:8,p:[$n[2].Nullable$1(Kusto.Language.Symbols.FunctionBodyFacts)],rt:$n[2].Void,fs:"FunctionBodyFacts"},fn:"FunctionBodyFacts"},{a:2,n:"HasAggregateParameters",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasAggregateParameters",t:8,rt:$n[2].Boolean,fg:"HasAggregateParameters",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasAggregateParameters"},{a:4,n:"HasClusterCall",t:16,rt:$n[2].Boolean,g:{a:4,n:"get_HasClusterCall",t:8,rt:$n[2].Boolean,fg:"HasClusterCall",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasClusterCall"},{a:4,n:"HasDatabaseCall",t:16,rt:$n[2].Boolean,g:{a:4,n:"get_HasDatabaseCall",t:8,rt:$n[2].Boolean,fg:"HasDatabaseCall",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasDatabaseCall"},{a:2,n:"HasOptionalParameters",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasOptionalParameters",t:8,rt:$n[2].Boolean,fg:"HasOptionalParameters",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasOptionalParameters"},{a:2,n:"HasRepeatableParameters",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasRepeatableParameters",t:8,rt:$n[2].Boolean,fg:"HasRepeatableParameters",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasRepeatableParameters"},{a:4,n:"HasVariableReturnType",t:16,rt:$n[2].Boolean,g:{a:4,n:"get_HasVariableReturnType",t:8,rt:$n[2].Boolean,fg:"HasVariableReturnType",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasVariableReturnType"},{a:2,n:"IsHidden",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsHidden",t:8,rt:$n[2].Boolean,fg:"IsHidden",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsHidden"},{a:2,n:"IsScalar",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsScalar",t:8,rt:$n[2].Boolean,fg:"IsScalar",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsScalar"},{a:2,n:"IsTabular",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsTabular",t:8,rt:$n[2].Boolean,fg:"IsTabular",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsTabular"},{a:2,n:"Layout",t:16,rt:$n[1].ParameterLayout,g:{a:2,n:"get_Layout",t:8,rt:$n[1].ParameterLayout,fg:"Layout"},fn:"Layout"},{a:2,n:"MaxArgumentCount",t:16,rt:$n[2].Int32,g:{a:2,n:"get_MaxArgumentCount",t:8,rt:$n[2].Int32,fg:"MaxArgumentCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"MaxArgumentCount"},{a:2,n:"MinArgumentCount",t:16,rt:$n[2].Int32,g:{a:2,n:"get_MinArgumentCount",t:8,rt:$n[2].Int32,fg:"MinArgumentCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"MinArgumentCount"},{a:4,n:"NonVariableComputedReturnType",t:16,rt:$n[1].TypeSymbol,g:{a:4,n:"get_NonVariableComputedReturnType",t:8,rt:$n[1].TypeSymbol,fg:"NonVariableComputedReturnType"},s:{a:4,n:"set_NonVariableComputedReturnType",t:8,p:[$n[1].TypeSymbol],rt:$n[2].Void,fs:"NonVariableComputedReturnType"},fn:"NonVariableComputedReturnType"},{a:2,n:"Parameters",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"ReturnKind",t:16,rt:$n[1].ReturnTypeKind,g:{a:2,n:"get_ReturnKind",t:8,rt:$n[1].ReturnTypeKind,fg:"ReturnKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},fn:"ReturnKind"},{a:2,n:"ReturnTypeDisplay",t:16,rt:$n[2].String,g:{a:2,n:"get_ReturnTypeDisplay",t:8,rt:$n[2].String,fg:"ReturnTypeDisplay"},fn:"ReturnTypeDisplay"},{a:2,n:"Symbol",t:16,rt:$n[1].Symbol,g:{a:2,n:"get_Symbol",t:8,rt:$n[1].Symbol,fg:"Symbol"},s:{a:4,n:"set_Symbol",t:8,p:[$n[1].Symbol],rt:$n[2].Void,fs:"Symbol"},fn:"Symbol"},{a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"UnknownParameter",is:!0,t:4,rt:$n[1].Parameter,sn:"UnknownParameter",ro:!0},{a:1,n:"_body",t:4,rt:$n[2].String,sn:"_body"},{a:1,n:"_display",t:4,rt:$n[2].String,sn:"_display"},{a:1,n:"_returnType",t:4,rt:$n[1].TypeSymbol,sn:"_returnType"},{a:1,n:"_tabularity",t:4,rt:$n[1].Tabularity,sn:"_tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},{a:1,n:"nameToParameterMap",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.Parameter),sn:"nameToParameterMap"},{a:1,n:"s_parameterListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)),sn:"s_parameterListPool",ro:!0},{a:1,backing:!0,n:"<CustomReturnType>k__BackingField",t:4,rt:Function,sn:"CustomReturnType"},{a:1,backing:!0,n:"<Declaration>k__BackingField",t:4,rt:$n[3].FunctionBody,sn:"Declaration"},{a:1,backing:!0,n:"<FunctionBodyFacts>k__BackingField",t:4,rt:$n[2].Nullable$1(Kusto.Language.Symbols.FunctionBodyFacts),sn:"FunctionBodyFacts",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Nullable.toStringFn(System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts)),System.Nullable.getHashCode)}},{a:1,backing:!0,n:"<HasAggregateParameters>k__BackingField",t:4,rt:$n[2].Boolean,sn:"HasAggregateParameters",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<HasOptionalParameters>k__BackingField",t:4,rt:$n[2].Boolean,sn:"HasOptionalParameters",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<HasRepeatableParameters>k__BackingField",t:4,rt:$n[2].Boolean,sn:"HasRepeatableParameters",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<IsHidden>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsHidden",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Layout>k__BackingField",t:4,rt:$n[1].ParameterLayout,sn:"Layout"},{a:1,backing:!0,n:"<MaxArgumentCount>k__BackingField",t:4,rt:$n[2].Int32,sn:"MaxArgumentCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<MinArgumentCount>k__BackingField",t:4,rt:$n[2].Int32,sn:"MinArgumentCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<NonVariableComputedReturnType>k__BackingField",t:4,rt:$n[1].TypeSymbol,sn:"NonVariableComputedReturnType"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),sn:"Parameters"},{a:1,backing:!0,n:"<ReturnKind>k__BackingField",t:4,rt:$n[1].ReturnTypeKind,sn:"ReturnKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.ReturnTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ReturnTypeKind))}},{a:1,backing:!0,n:"<Symbol>k__BackingField",t:4,rt:$n[1].Symbol,sn:"Symbol"}]}},$n);$m("Kusto.Language.Symbols.FunctionBodyFacts",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Cluster",is:!0,t:4,rt:$n[1].FunctionBodyFacts,sn:"Cluster",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}},{a:2,n:"Database",is:!0,t:4,rt:$n[1].FunctionBodyFacts,sn:"Database",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}},{a:2,n:"ExternalTable",is:!0,t:4,rt:$n[1].FunctionBodyFacts,sn:"ExternalTable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}},{a:2,n:"MaterializedView",is:!0,t:4,rt:$n[1].FunctionBodyFacts,sn:"MaterializedView",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}},{a:2,n:"None",is:!0,t:4,rt:$n[1].FunctionBodyFacts,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}},{a:2,n:"QualifiedTable",is:!0,t:4,rt:$n[1].FunctionBodyFacts,sn:"QualifiedTable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}},{a:2,n:"Table",is:!0,t:4,rt:$n[1].FunctionBodyFacts,sn:"Table",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}},{a:2,n:"VariableReturn",is:!0,t:4,rt:$n[1].FunctionBodyFacts,sn:"VariableReturn",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}}]}},$n);$m("Kusto.Language.Symbols.Symbol",function(){return{att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"ctor"},{v:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"GetExpressionResultType",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"GetExpressionResultType",rt:$n[1].TypeSymbol,p:[$n[1].Symbol]},{a:2,n:"GetFirstMember",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"match",dv:1019,o:!0,pt:$n[1].SymbolMatch,ps:1},{n:"ignoreCase",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"GetFirstMember",rt:$n[1].Symbol,p:[$n[2].String,$n[1].SymbolMatch,$n[2].Boolean]},{a:2,n:"GetMembers",t:8,pi:[{n:"match",pt:$n[1].SymbolMatch,ps:0},{n:"symbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:1},{n:"ignoreCase",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"GetMembers",rt:$n[2].Void,p:[$n[1].SymbolMatch,$n[0].List$1(Kusto.Language.Symbols.Symbol),$n[2].Boolean]},{v:!0,a:2,n:"GetMembers",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"match",pt:$n[1].SymbolMatch,ps:1},{n:"symbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:2},{n:"ignoreCase",dv:!1,o:!0,pt:$n[2].Boolean,ps:3}],sn:"GetMembers$1",rt:$n[2].Void,p:[$n[2].String,$n[1].SymbolMatch,$n[0].List$1(Kusto.Language.Symbols.Symbol),$n[2].Boolean]},{a:2,n:"Display",t:16,rt:$n[2].String,g:{a:2,n:"get_Display",t:8,rt:$n[2].String,fg:"Display"},fn:"Display"},{v:!0,a:2,n:"IsError",t:16,rt:$n[2].Boolean,g:{v:!0,a:2,n:"get_IsError",t:8,rt:$n[2].Boolean,fg:"IsError",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsError"},{v:!0,a:2,n:"IsHidden",t:16,rt:$n[2].Boolean,g:{v:!0,a:2,n:"get_IsHidden",t:8,rt:$n[2].Boolean,fg:"IsHidden",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsHidden"},{a:2,n:"IsScalar",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsScalar",t:8,rt:$n[2].Boolean,fg:"IsScalar",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsScalar"},{a:2,n:"IsTabular",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsTabular",t:8,rt:$n[2].Boolean,fg:"IsTabular",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsTabular"},{v:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{v:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{v:!0,a:2,n:"Members",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),g:{v:!0,a:2,n:"get_Members",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),fg:"Members"},fn:"Members"},{a:2,n:"Name",t:16,rt:$n[2].String,g:{a:2,n:"get_Name",t:8,rt:$n[2].String,fg:"Name"},fn:"Name"},{v:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{v:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:1,n:"_display",t:4,rt:$n[2].String,sn:"_display"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[2].String,sn:"Name"}]}},$n);$m("Kusto.Language.Symbols.SymbolKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Cluster",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Cluster",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Column",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Column",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Command",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Command",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Database",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Database",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Error",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Error",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Function",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Function",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Group",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Group",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"MaterializedView",is:!0,t:4,rt:$n[1].SymbolKind,sn:"MaterializedView",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"None",is:!0,t:4,rt:$n[1].SymbolKind,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Operator",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Operator",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Option",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Option",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Parameter",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Parameter",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Pattern",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Pattern",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"QueryOperatorParameter",is:!0,t:4,rt:$n[1].SymbolKind,sn:"QueryOperatorParameter",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Scalar",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Scalar",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Table",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Table",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Tuple",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Tuple",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Variable",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Variable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},{a:2,n:"Void",is:!0,t:4,rt:$n[1].SymbolKind,sn:"Void",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}}]}},$n);$m("Kusto.Language.Symbols.SymbolMatch",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Any",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Any",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Cluster",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Cluster",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Column",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Column",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Database",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Database",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Default",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Default",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"ExternalTable",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"ExternalTable",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Function",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Function",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Local",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Local",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"MaterializedView",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"MaterializedView",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"None",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Option",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Option",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Scalar",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Scalar",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Table",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Table",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:2,n:"Tabular",is:!0,t:4,rt:$n[1].SymbolMatch,sn:"Tabular",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}}]}},$n);$m("Kusto.Language.Symbols.SymbolMatchExtensions",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Matches",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0},{n:"match",pt:$n[1].SymbolMatch,ps:1}],sn:"Matches",rt:$n[2].Boolean,p:[$n[1].Symbol,$n[1].SymbolMatch],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Matches",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0},{n:"name",pt:$n[2].String,ps:1},{n:"match",pt:$n[1].SymbolMatch,ps:2},{n:"ignoreCase",dv:!1,o:!0,pt:$n[2].Boolean,ps:3}],sn:"Matches$1",rt:$n[2].Boolean,p:[$n[1].Symbol,$n[2].String,$n[1].SymbolMatch,$n[2].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Symbols.TableState",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"None",is:!0,t:4,rt:$n[1].TableState,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableState))}},{a:2,n:"Open",is:!0,t:4,rt:$n[1].TableState,sn:"Open",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableState))}},{a:2,n:"Serialized",is:!0,t:4,rt:$n[1].TableState,sn:"Serialized",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableState))}},{a:2,n:"Sorted",is:!0,t:4,rt:$n[1].TableState,sn:"Sorted",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableState))}}]}},$n);$m("Kusto.Language.Symbols.TableStateExtensions",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Has",is:!0,t:8,pi:[{n:"state",pt:$n[1].TableState,ps:0},{n:"test",pt:$n[1].TableState,ps:1}],sn:"Has",rt:$n[2].Boolean,p:[$n[1].TableState,$n[1].TableState],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"New",is:!0,t:8,pi:[{n:"state",pt:$n[1].TableState,ps:0}],sn:"New",rt:$n[1].TableState,p:[$n[1].TableState],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableState))}},{a:2,n:"Open",is:!0,t:8,pi:[{n:"state",pt:$n[1].TableState,ps:0}],sn:"Open",rt:$n[1].TableState,p:[$n[1].TableState],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableState))}},{a:2,n:"Unsorted",is:!0,t:8,pi:[{n:"state",pt:$n[1].TableState,ps:0}],sn:"Unsorted",rt:$n[1].TableState,p:[$n[1].TableState],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableState))}},{a:2,n:"With",is:!0,t:8,pi:[{n:"state",pt:$n[1].TableState,ps:0},{n:"stateToAdd",pt:$n[1].TableState,ps:1}],sn:"With",rt:$n[1].TableState,p:[$n[1].TableState,$n[1].TableState],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableState))}},{a:2,n:"Without",is:!0,t:8,pi:[{n:"state",pt:$n[1].TableState,ps:0},{n:"stateToRemove",pt:$n[1].TableState,ps:1}],sn:"Without",rt:$n[1].TableState,p:[$n[1].TableState,$n[1].TableState],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableState))}}]}},$n);$m("Kusto.Language.Symbols.TableSymbol",function(){return{nested:[$n[1].TableSymbol.TableState],att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[System.Array.type(Kusto.Language.Symbols.ColumnSymbol)],pi:[{n:"columns",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)],pi:[{n:"columns",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[2].String,System.Array.type(Kusto.Language.Symbols.ColumnSymbol)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"columns",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.ColumnSymbol),ps:1}],sn:"$ctor3"},{a:1,n:".ctor",t:1,p:[$n[1].TableSymbol.TableState,$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),$n[2].String],pi:[{n:"state",pt:$n[1].TableSymbol.TableState,ps:0},{n:"columns",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),ps:1},{n:"description",pt:$n[2].String,ps:2}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"columns",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),ps:1},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:2}],sn:"$ctor5"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"schema",pt:$n[2].String,ps:1},{n:"description",dv:null,o:!0,pt:$n[2].String,ps:2}],sn:"$ctor6"},{a:1,n:".ctor",t:1,p:[$n[2].String,$n[1].TableSymbol.TableState,$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"state",pt:$n[1].TableSymbol.TableState,ps:1},{n:"columns",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),ps:2},{n:"description",pt:$n[2].String,ps:3}],sn:"$ctor4"},{a:2,n:"AddColumns",t:8,pi:[{n:"columns",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"AddColumns",rt:$n[1].TableSymbol,p:[System.Array.type(Kusto.Language.Symbols.ColumnSymbol)]},{a:2,n:"AddColumns",t:8,pi:[{n:"columns",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"AddColumns$1",rt:$n[1].TableSymbol,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:2,n:"Combine",is:!0,t:8,pi:[{n:"kind",pt:$n[1].CombineKind,ps:0},{n:"tables",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.TableSymbol),ps:1}],sn:"Combine",rt:$n[1].TableSymbol,p:[$n[1].CombineKind,System.Array.type(Kusto.Language.Symbols.TableSymbol)]},{a:2,n:"Combine",is:!0,t:8,pi:[{n:"kind",pt:$n[1].CombineKind,ps:0},{n:"tables",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.TableSymbol),ps:1}],sn:"Combine$1",rt:$n[1].TableSymbol,p:[$n[1].CombineKind,$n[0].IEnumerable$1(Kusto.Language.Symbols.TableSymbol)]},{a:2,n:"From",is:!0,t:8,pi:[{n:"schema",pt:$n[2].String,ps:0}],sn:"From",rt:$n[1].TableSymbol,p:[$n[2].String]},{a:2,n:"GetColumn",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetColumn",rt:$n[1].ColumnSymbol,p:[$n[2].String]},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{ov:!0,a:2,n:"GetMembers",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"match",pt:$n[1].SymbolMatch,ps:1},{n:"symbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:2},{n:"ignoreCase",dv:!1,o:!0,pt:$n[2].Boolean,ps:3}],sn:"GetMembers$1",rt:$n[2].Void,p:[$n[2].String,$n[1].SymbolMatch,$n[0].List$1(Kusto.Language.Symbols.Symbol),$n[2].Boolean]},{a:2,n:"TryGetColumn",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"column",out:!0,pt:$n[1].ColumnSymbol,ps:1}],sn:"TryGetColumn",rt:$n[2].Boolean,p:[$n[2].String,$n[1].ColumnSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"WithColumns",t:8,pi:[{n:"columns",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"WithColumns",rt:$n[1].TableSymbol,p:[System.Array.type(Kusto.Language.Symbols.ColumnSymbol)]},{a:2,n:"WithColumns",t:8,pi:[{n:"columns",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"WithColumns$1",rt:$n[1].TableSymbol,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:2,n:"WithDescripton",t:8,pi:[{n:"description",pt:$n[2].String,ps:0}],sn:"WithDescripton",rt:$n[1].TableSymbol,p:[$n[2].String]},{a:2,n:"WithInheritableProperties",t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0}],sn:"WithInheritableProperties",rt:$n[1].TableSymbol,p:[$n[1].TableSymbol]},{a:2,n:"WithIsExternal",t:8,pi:[{n:"isExternal",pt:$n[2].Boolean,ps:0}],sn:"WithIsExternal",rt:$n[1].TableSymbol,p:[$n[2].Boolean]},{a:2,n:"WithIsMaterializedView",t:8,pi:[{n:"isMaterializedView",pt:$n[2].Boolean,ps:0}],sn:"WithIsMaterializedView",rt:$n[1].TableSymbol,p:[$n[2].Boolean]},{a:2,n:"WithIsOpen",t:8,pi:[{n:"isOpen",pt:$n[2].Boolean,ps:0}],sn:"WithIsOpen",rt:$n[1].TableSymbol,p:[$n[2].Boolean]},{a:2,n:"WithIsSerialized",t:8,pi:[{n:"isSerialized",pt:$n[2].Boolean,ps:0}],sn:"WithIsSerialized",rt:$n[1].TableSymbol,p:[$n[2].Boolean]},{a:2,n:"WithIsSorted",t:8,pi:[{n:"isSorted",pt:$n[2].Boolean,ps:0}],sn:"WithIsSorted",rt:$n[1].TableSymbol,p:[$n[2].Boolean]},{a:2,n:"WithName",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"WithName",rt:$n[1].TableSymbol,p:[$n[2].String]},{a:1,n:"WithState",t:8,pi:[{n:"newState",pt:$n[1].TableSymbol.TableState,ps:0}],sn:"WithState",rt:$n[1].TableSymbol,p:[$n[1].TableSymbol.TableState]},{a:1,n:"ColumnMap",t:16,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol),g:{a:1,n:"get_ColumnMap",t:8,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol),fg:"ColumnMap"},fn:"ColumnMap"},{a:2,n:"Columns",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),g:{a:2,n:"get_Columns",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),fg:"Columns"},fn:"Columns"},{a:1,n:"DebugDisplay",t:16,rt:$n[2].String,g:{a:1,n:"get_DebugDisplay",t:8,rt:$n[2].String,fg:"DebugDisplay"},fn:"DebugDisplay"},{a:2,n:"Description",t:16,rt:$n[2].String,g:{a:2,n:"get_Description",t:8,rt:$n[2].String,fg:"Description"},fn:"Description"},{a:2,n:"IsExternal",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsExternal",t:8,rt:$n[2].Boolean,fg:"IsExternal",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsExternal"},{a:2,n:"IsMaterializedView",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsMaterializedView",t:8,rt:$n[2].Boolean,fg:"IsMaterializedView",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsMaterializedView"},{a:2,n:"IsOpen",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsOpen",t:8,rt:$n[2].Boolean,fg:"IsOpen",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOpen"},{a:2,n:"IsSerialized",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsSerialized",t:8,rt:$n[2].Boolean,fg:"IsSerialized",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsSerialized"},{a:2,n:"IsSorted",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsSorted",t:8,rt:$n[2].Boolean,fg:"IsSorted",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsSorted"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Members",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),g:{ov:!0,a:2,n:"get_Members",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),fg:"Members"},fn:"Members"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"Empty",is:!0,t:4,rt:$n[1].TableSymbol,sn:"Empty",ro:!0},{a:1,n:"InheritableState",is:!0,t:4,rt:$n[1].TableSymbol.TableState,sn:"InheritableState",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableSymbol.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableSymbol.TableState))}},{a:1,n:"lazyColumnMap",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol),sn:"lazyColumnMap"},{a:1,n:"state",t:4,rt:$n[1].TableSymbol.TableState,sn:"state",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableSymbol.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableSymbol.TableState))}},{a:1,backing:!0,n:"<Columns>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),sn:"Columns"},{a:1,backing:!0,n:"<Description>k__BackingField",t:4,rt:$n[2].String,sn:"Description"}]}},$n);$m("Kusto.Language.Symbols.TableSymbol.TableState",function(){return{td:$n[1].TableSymbol,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"External",is:!0,t:4,rt:$n[1].TableSymbol.TableState,sn:"External",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableSymbol.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableSymbol.TableState))}},{a:2,n:"MaterializedView",is:!0,t:4,rt:$n[1].TableSymbol.TableState,sn:"MaterializedView",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableSymbol.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableSymbol.TableState))}},{a:2,n:"None",is:!0,t:4,rt:$n[1].TableSymbol.TableState,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableSymbol.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableSymbol.TableState))}},{a:2,n:"Open",is:!0,t:4,rt:$n[1].TableSymbol.TableState,sn:"Open",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableSymbol.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableSymbol.TableState))}},{a:2,n:"Serialized",is:!0,t:4,rt:$n[1].TableSymbol.TableState,sn:"Serialized",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableSymbol.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableSymbol.TableState))}},{a:2,n:"Sorted",is:!0,t:4,rt:$n[1].TableSymbol.TableState,sn:"Sorted",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.TableSymbol.TableState,System.Enum.toStringFn(Kusto.Language.Symbols.TableSymbol.TableState))}}]}},$n);$m("Kusto.Language.Symbols.Tabularity",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"None",is:!0,t:4,rt:$n[1].Tabularity,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},{a:2,n:"Scalar",is:!0,t:4,rt:$n[1].Tabularity,sn:"Scalar",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},{a:2,n:"Tabular",is:!0,t:4,rt:$n[1].Tabularity,sn:"Tabular",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},{a:2,n:"Unknown",is:!0,t:4,rt:$n[1].Tabularity,sn:"Unknown",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},{a:2,n:"Unspecified",is:!0,t:4,rt:$n[1].Tabularity,sn:"Unspecified",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}}]}},$n);$m("Kusto.Language.Symbols.TupleSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[System.Array.type(Kusto.Language.Symbols.ColumnSymbol)],pi:[{n:"columns",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),$n[1].TableSymbol],pi:[{n:"columns",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),ps:0},{n:"relatedTable",dv:null,o:!0,pt:$n[1].TableSymbol,ps:1}],sn:"$ctor1"},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"WithColumns",t:8,pi:[{n:"columns",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"WithColumns",rt:$n[1].TupleSymbol,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:2,n:"Columns",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),g:{a:2,n:"get_Columns",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),fg:"Columns"},fn:"Columns"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Members",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),g:{ov:!0,a:2,n:"get_Members",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),fg:"Members"},fn:"Members"},{a:2,n:"RelatedTable",t:16,rt:$n[1].TableSymbol,g:{a:2,n:"get_RelatedTable",t:8,rt:$n[1].TableSymbol,fg:"RelatedTable"},fn:"RelatedTable"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:1,backing:!0,n:"<Columns>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),sn:"Columns"},{a:1,backing:!0,n:"<RelatedTable>k__BackingField",t:4,rt:$n[1].TableSymbol,sn:"RelatedTable"}]}},$n);$m("Kusto.Language.Symbols.TypeSymbol",function(){return{att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Symbols.VariableSymbol",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[1].TypeSymbol,$n[2].Boolean,$n[2].Object],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"isConstant",dv:!1,o:!0,pt:$n[2].Boolean,ps:2},{n:"constantValue",dv:null,o:!0,pt:$n[2].Object,ps:3}],sn:"ctor"},{ov:!0,a:3,n:"GetDisplay",t:8,sn:"GetDisplay",rt:$n[2].String},{a:2,n:"ConstantValue",t:16,rt:$n[2].Object,g:{a:2,n:"get_ConstantValue",t:8,rt:$n[2].Object,fg:"ConstantValue"},fn:"ConstantValue"},{a:2,n:"IsConstant",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsConstant",t:8,rt:$n[2].Boolean,fg:"IsConstant",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsConstant"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"Type",t:16,rt:$n[1].TypeSymbol,g:{a:2,n:"get_Type",t:8,rt:$n[1].TypeSymbol,fg:"Type"},fn:"Type"},{a:1,backing:!0,n:"<ConstantValue>k__BackingField",t:4,rt:$n[2].Object,sn:"ConstantValue"},{a:1,backing:!0,n:"<IsConstant>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsConstant",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Type>k__BackingField",t:4,rt:$n[1].TypeSymbol,sn:"Type"}]}},$n);$m("Kusto.Language.Symbols.VoidSymbol",function(){return{att:1048833,a:2,m:[{a:1,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[1].SymbolKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[1].SymbolKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolKind,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolKind))}},fn:"Kind"},{ov:!0,a:2,n:"Tabularity",t:16,rt:$n[1].Tabularity,g:{ov:!0,a:2,n:"get_Tabularity",t:8,rt:$n[1].Tabularity,fg:"Tabularity",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.Tabularity,System.Enum.toStringFn(Kusto.Language.Symbols.Tabularity))}},fn:"Tabularity"},{a:2,n:"Instance",is:!0,t:4,rt:$n[1].VoidSymbol,sn:"Instance",ro:!0}]}},$n);$m("Kusto.Language.Syntax.FakeExpression",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Create",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"Create",rt:$n[3].Expression,p:[$n[1].TypeSymbol]},{a:2,n:"CreateNamed",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1}],sn:"CreateNamed",rt:$n[3].Expression,p:[$n[2].String,$n[1].TypeSymbol]}]}},$n);$m("Kusto.Language.Syntax.SemanticInfo",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",pt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic),ps:0}],sn:"$ctor4"},{a:2,n:".ctor",t:1,p:[$n[1].TypeSymbol,$n[4].Diagnostic],pi:[{n:"result",pt:$n[1].TypeSymbol,ps:0},{n:"diagnostic",pt:$n[4].Diagnostic,ps:1}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[1].Symbol,$n[1].TypeSymbol,$n[4].Diagnostic],pi:[{n:"referenced",pt:$n[1].Symbol,ps:0},{n:"result",pt:$n[1].TypeSymbol,ps:1},{n:"diagnostic",pt:$n[4].Diagnostic,ps:2}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].TypeSymbol,$n[0].IEnumerable$1(Kusto.Language.Diagnostic),$n[2].Boolean,Function],pi:[{n:"result",pt:$n[1].TypeSymbol,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic),ps:1},{n:"isConstant",dv:!1,o:!0,pt:$n[2].Boolean,ps:2},{n:"expander",dv:null,o:!0,pt:Function,ps:3}],sn:"$ctor3"},{a:2,n:".ctor",t:1,p:[$n[1].Symbol,$n[1].TypeSymbol,$n[0].IEnumerable$1(Kusto.Language.Diagnostic),$n[2].Boolean,Function],pi:[{n:"referenced",pt:$n[1].Symbol,ps:0},{n:"result",pt:$n[1].TypeSymbol,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic),ps:2},{n:"isConstant",dv:!1,o:!0,pt:$n[2].Boolean,ps:3},{n:"expander",dv:null,o:!0,pt:Function,ps:4}],sn:"$ctor1"},{a:2,n:"WithDiagnostics",t:8,pi:[{n:"diagnostics",pt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic),ps:0}],sn:"WithDiagnostics",rt:$n[3].SemanticInfo,p:[$n[0].IEnumerable$1(Kusto.Language.Diagnostic)]},{a:2,n:"WithExpander",t:8,pi:[{n:"expander",pt:Function,ps:0}],sn:"WithExpander",rt:$n[3].SemanticInfo,p:[Function]},{a:2,n:"WithIsConstant",t:8,pi:[{n:"isConstant",pt:$n[2].Boolean,ps:0}],sn:"WithIsConstant",rt:$n[3].SemanticInfo,p:[$n[2].Boolean]},{a:2,n:"WithReferencedSymbol",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"WithReferencedSymbol",rt:$n[3].SemanticInfo,p:[$n[1].Symbol]},{a:2,n:"WithResultType",t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"WithResultType",rt:$n[3].SemanticInfo,p:[$n[1].TypeSymbol]},{a:2,n:"Diagnostics",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),g:{a:2,n:"get_Diagnostics",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),fg:"Diagnostics"},fn:"Diagnostics"},{a:2,n:"Expander",t:16,rt:Function,g:{a:2,n:"get_Expander",t:8,rt:Function,fg:"Expander"},fn:"Expander"},{a:2,n:"IsConstant",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsConstant",t:8,rt:$n[2].Boolean,fg:"IsConstant",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsConstant"},{a:2,n:"ReferencedSymbol",t:16,rt:$n[1].Symbol,g:{a:2,n:"get_ReferencedSymbol",t:8,rt:$n[1].Symbol,fg:"ReferencedSymbol"},fn:"ReferencedSymbol"},{a:2,n:"ResultType",t:16,rt:$n[1].TypeSymbol,g:{a:2,n:"get_ResultType",t:8,rt:$n[1].TypeSymbol,fg:"ResultType"},fn:"ResultType"},{a:2,n:"Empty",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"Empty",ro:!0},{a:1,backing:!0,n:"<Diagnostics>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"Diagnostics"},{a:1,backing:!0,n:"<Expander>k__BackingField",t:4,rt:Function,sn:"Expander"},{a:1,backing:!0,n:"<IsConstant>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsConstant",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<ReferencedSymbol>k__BackingField",t:4,rt:$n[1].Symbol,sn:"ReferencedSymbol"},{a:1,backing:!0,n:"<ResultType>k__BackingField",t:4,rt:$n[1].TypeSymbol,sn:"ResultType"}]}},$n);$m("Kusto.Language.Syntax.SyntaxNode",function(){return{att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"},{ab:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ab:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{a:2,n:"Clone",t:8,sn:"Clone$1",rt:$n[3].SyntaxNode},{a:2,n:"GetExpansion",t:8,sn:"GetExpansion",rt:$n[3].SyntaxNode},{a:4,n:"GetSemanticInfo",t:8,sn:"GetSemanticInfo",rt:$n[3].SemanticInfo},{ov:!0,a:3,n:"Init",t:8,sn:"Init",rt:$n[2].Void},{a:2,n:"WalkNodes",t:8,pi:[{n:"action",pt:Function,ps:0}],sn:"WalkNodes",rt:$n[2].Void,p:[Function]},{ov:!0,a:2,n:"FullWidth",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_FullWidth",t:8,rt:$n[2].Int32,fg:"FullWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FullWidth"},{a:4,n:"IsBound",t:16,rt:$n[2].Boolean,g:{a:4,n:"get_IsBound",t:8,rt:$n[2].Boolean,fg:"IsBound",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsBound"},{a:2,n:"ReferencedSymbol",t:16,rt:$n[1].Symbol,g:{a:2,n:"get_ReferencedSymbol",t:8,rt:$n[1].Symbol,fg:"ReferencedSymbol"},fn:"ReferencedSymbol"},{a:2,n:"SemanticDiagnostics",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),g:{a:2,n:"get_SemanticDiagnostics",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),fg:"SemanticDiagnostics"},fn:"SemanticDiagnostics"},{a:1,n:"fullWidth",t:4,rt:$n[2].Int32,sn:"fullWidth",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Syntax.DiagnosticsInclude",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Expansion",is:!0,t:4,rt:$n[3].DiagnosticsInclude,sn:"Expansion",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.DiagnosticsInclude,System.Enum.toStringFn(Kusto.Language.Syntax.DiagnosticsInclude))}},{a:2,n:"Semantic",is:!0,t:4,rt:$n[3].DiagnosticsInclude,sn:"Semantic",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.DiagnosticsInclude,System.Enum.toStringFn(Kusto.Language.Syntax.DiagnosticsInclude))}},{a:2,n:"Syntactic",is:!0,t:4,rt:$n[3].DiagnosticsInclude,sn:"Syntactic",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.DiagnosticsInclude,System.Enum.toStringFn(Kusto.Language.Syntax.DiagnosticsInclude))}}]}},$n);$m("Kusto.Language.Syntax.SyntaxElement",function(){return{nested:[$n[3].SyntaxElement.Flags,$n[3].SyntaxElement.ExtendedData],att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"},{a:3,n:"Attach",t:8,pi:[{n:"element",pt:System.Object,ps:0},{n:"optional",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],tpc:1,tprm:["TElement"],sn:"Attach",rt:System.Object,p:[System.Object,$n[2].Boolean]},{a:2,n:"Clone",t:8,sn:"Clone",rt:$n[3].SyntaxElement},{ab:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{a:3,n:"ComputeFullWidth",t:8,sn:"ComputeFullWidth",rt:$n[2].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:3,n:"ComputeTriviaStart",t:8,sn:"ComputeTriviaStart",rt:$n[2].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:3,n:"GatherDiagnostics",is:!0,t:8,pi:[{n:"root",pt:$n[3].SyntaxElement,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"include",pt:$n[3].DiagnosticsInclude,ps:2},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:3}],sn:"GatherDiagnostics",rt:$n[2].Void,p:[$n[3].SyntaxElement,$n[0].List$1(Kusto.Language.Diagnostic),$n[3].DiagnosticsInclude,$n[5].CancellationToken]},{a:2,n:"GetAncestors",t:8,pi:[{n:"predicate",dv:null,o:!0,pt:Function,ps:0}],tpc:1,tprm:["TElement"],sn:"GetAncestors",rt:$n[0].IReadOnlyList$1(System.Object),p:[Function]},{a:2,n:"GetAncestorsOrSelf",t:8,pi:[{n:"predicate",dv:null,o:!0,pt:Function,ps:0}],tpc:1,tprm:["TElement"],sn:"GetAncestorsOrSelf",rt:$n[0].IReadOnlyList$1(System.Object),p:[Function]},{v:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{a:2,n:"GetChildIndex",t:8,pi:[{n:"child",pt:$n[3].SyntaxElement,ps:0}],sn:"GetChildIndex",rt:$n[2].Int32,p:[$n[3].SyntaxElement],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetCommonAncestor",is:!0,t:8,pi:[{n:"a",pt:$n[3].SyntaxElement,ps:0},{n:"b",pt:$n[3].SyntaxElement,ps:1}],sn:"GetCommonAncestor",rt:$n[3].SyntaxNode,p:[$n[3].SyntaxElement,$n[3].SyntaxElement]},{v:!0,a:2,n:"GetCompletionHint",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHint",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{v:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"GetContainedDiagnostics",t:8,pi:[{n:"include",dv:3,o:!0,pt:$n[3].DiagnosticsInclude,ps:0},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:1}],sn:"GetContainedDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[3].DiagnosticsInclude,$n[5].CancellationToken]},{a:2,n:"GetContainedSyntaxDiagnostics",t:8,sn:"GetContainedSyntaxDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)},{a:2,n:"GetDescendantIndex",t:8,pi:[{n:"descendant",pt:$n[3].SyntaxElement,ps:0}],sn:"GetDescendantIndex",rt:$n[2].Int32,p:[$n[3].SyntaxElement],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetDescendants",t:8,pi:[{n:"predicate",dv:null,o:!0,pt:Function,ps:0}],tpc:1,tprm:["TElement"],sn:"GetDescendants",rt:$n[0].IReadOnlyList$1(System.Object),p:[Function]},{a:1,n:"GetDescendants",is:!0,t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"predicate",pt:Function,ps:1},{n:"includeSelf",pt:$n[2].Boolean,ps:2}],tpc:1,tprm:["TElement"],sn:"GetDescendants",rt:$n[0].IReadOnlyList$1(System.Object),p:[$n[3].SyntaxElement,Function,$n[2].Boolean]},{a:2,n:"GetDescendantsOrSelf",t:8,pi:[{n:"predicate",dv:null,o:!0,pt:Function,ps:0}],tpc:1,tprm:["TElement"],sn:"GetDescendantsOrSelf",rt:$n[0].IReadOnlyList$1(System.Object),p:[Function]},{a:4,n:"GetExtendedData",t:8,pi:[{n:"create",pt:$n[2].Boolean,ps:0}],sn:"GetExtendedData",rt:$n[3].SyntaxElement.ExtendedData,p:[$n[2].Boolean]},{a:2,n:"GetFirstAncestor",t:8,pi:[{n:"predicate",dv:null,o:!0,pt:Function,ps:0}],tpc:1,tprm:["TElement"],sn:"GetFirstAncestor",rt:System.Object,p:[Function]},{a:2,n:"GetFirstAncestorOrSelf",t:8,pi:[{n:"predicate",dv:null,o:!0,pt:Function,ps:0}],tpc:1,tprm:["TElement"],sn:"GetFirstAncestorOrSelf",rt:System.Object,p:[Function]},{a:2,n:"GetFirstDescendant",t:8,pi:[{n:"predicate",dv:null,o:!0,pt:Function,ps:0}],tpc:1,tprm:["TElement"],sn:"GetFirstDescendant",rt:System.Object,p:[Function]},{a:1,n:"GetFirstDescendant",is:!0,t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"predicate",pt:Function,ps:1},{n:"includeSelf",pt:$n[2].Boolean,ps:2}],tpc:1,tprm:["TElement"],sn:"GetFirstDescendant",rt:System.Object,p:[$n[3].SyntaxElement,Function,$n[2].Boolean]},{a:2,n:"GetFirstDescendantOrSelf",t:8,pi:[{n:"predicate",dv:null,o:!0,pt:Function,ps:0}],tpc:1,tprm:["TElement"],sn:"GetFirstDescendantOrSelf",rt:System.Object,p:[Function]},{a:2,n:"GetFirstToken",t:8,pi:[{n:"includeZeroWidthTokens",dv:!1,o:!0,pt:$n[2].Boolean,ps:0}],sn:"GetFirstToken",rt:$n[3].SyntaxToken,p:[$n[2].Boolean]},{a:2,n:"GetLastToken",t:8,pi:[{n:"includeZeroWidthTokens",dv:!1,o:!0,pt:$n[2].Boolean,ps:0}],sn:"GetLastToken",rt:$n[3].SyntaxToken,p:[$n[2].Boolean]},{v:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"GetNextSibling",t:8,pi:[{n:"includeZeroWidthElements",dv:!1,o:!0,pt:$n[2].Boolean,ps:0}],sn:"GetNextSibling",rt:$n[3].SyntaxElement,p:[$n[2].Boolean]},{a:3,n:"GetNextToken",is:!0,t:8,pi:[{n:"root",pt:$n[3].SyntaxElement,ps:0},{n:"token",pt:$n[3].SyntaxToken,ps:1},{n:"includeZeroWidthTokens",pt:$n[2].Boolean,ps:2}],sn:"GetNextToken",rt:$n[3].SyntaxToken,p:[$n[3].SyntaxElement,$n[3].SyntaxToken,$n[2].Boolean]},{a:2,n:"GetNodeAt",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"GetNodeAt",rt:$n[3].SyntaxNode,p:[$n[2].Int32,$n[2].Int32]},{a:2,n:"GetPreviousSibling",t:8,pi:[{n:"includeZeroWidthElements",dv:!1,o:!0,pt:$n[2].Boolean,ps:0}],sn:"GetPreviousSibling",rt:$n[3].SyntaxElement,p:[$n[2].Boolean]},{a:3,n:"GetPreviousToken",is:!0,t:8,pi:[{n:"root",pt:$n[3].SyntaxElement,ps:0},{n:"token",pt:$n[3].SyntaxToken,ps:1},{n:"includeZeroWidthTokens",pt:$n[2].Boolean,ps:2}],sn:"GetPreviousToken",rt:$n[3].SyntaxToken,p:[$n[3].SyntaxElement,$n[3].SyntaxToken,$n[2].Boolean]},{a:2,n:"GetTokenAt",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetTokenAt",rt:$n[3].SyntaxToken,p:[$n[2].Int32]},{a:2,n:"GetTokens",t:8,pi:[{n:"includeZeroWidthTokens",dv:!1,o:!0,pt:$n[2].Boolean,ps:0}],sn:"GetTokens",rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxToken),p:[$n[2].Boolean]},{a:2,n:"HasMissingChildren",t:8,sn:"HasMissingChildren",rt:$n[2].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{v:!0,a:3,n:"Init",t:8,sn:"Init",rt:$n[2].Void},{a:4,n:"InitializeTriviaStarts",t:8,sn:"InitializeTriviaStarts",rt:$n[2].Void},{a:2,n:"IsAncestorOf",t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0}],sn:"IsAncestorOf",rt:$n[2].Boolean,p:[$n[3].SyntaxElement],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{v:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SetDiagnostics",t:8,pi:[{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"SetDiagnostics",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)]},{a:1,n:"SetLocation",is:!0,t:8,pi:[{n:"d",pt:$n[4].Diagnostic,ps:0},{n:"location",pt:$n[3].SyntaxElement,ps:1}],sn:"SetLocation",rt:$n[4].Diagnostic,p:[$n[4].Diagnostic,$n[3].SyntaxElement]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[2].String},{v:!0,a:2,n:"ToString",t:8,pi:[{n:"includeTrivia",pt:$n[3].IncludeTrivia,ps:0}],sn:"ToString",rt:$n[2].String,p:[$n[3].IncludeTrivia]},{a:2,n:"ToString",t:8,pi:[{n:"includeTrivia",pt:$n[3].IncludeTrivia,ps:0},{n:"maxLength",pt:$n[2].Int32,ps:1}],sn:"ToString$1",rt:$n[2].String,p:[$n[3].IncludeTrivia,$n[2].Int32]},{a:2,n:"WalkElements",t:8,pi:[{n:"action",pt:Function,ps:0}],sn:"WalkElements",rt:$n[2].Void,p:[Function]},{a:2,n:"WalkElements",is:!0,t:8,pi:[{n:"root",pt:$n[3].SyntaxElement,ps:0},{n:"fnBefore",dv:null,o:!0,pt:Function,ps:1},{n:"fnAfter",dv:null,o:!0,pt:Function,ps:2},{n:"fnDescend",dv:null,o:!0,pt:Function,ps:3}],sn:"WalkElements",rt:$n[2].Void,p:[$n[3].SyntaxElement,Function,Function,Function]},{a:2,n:"WalkNodes",is:!0,t:8,pi:[{n:"root",pt:$n[3].SyntaxNode,ps:0},{n:"fnBefore",dv:null,o:!0,pt:Function,ps:1},{n:"fnAfter",dv:null,o:!0,pt:Function,ps:2},{n:"fnDescend",dv:null,o:!0,pt:Function,ps:3}],sn:"WalkNodes",rt:$n[2].Void,p:[$n[3].SyntaxNode,Function,Function,Function]},{a:2,n:"WalkTokens",t:8,pi:[{n:"action",pt:Function,ps:0}],sn:"WalkTokens",rt:$n[2].Void,p:[Function]},{a:2,n:"WalkTokens",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"end",pt:$n[2].Int32,ps:1},{n:"action",pt:Function,ps:2}],sn:"WalkTokens$1",rt:$n[2].Void,p:[$n[2].Int32,$n[2].Int32,Function]},{a:2,n:"WithAdditionalDiagnostics",t:8,pi:[{n:"diagnostics",ip:!0,pt:System.Array.type(Kusto.Language.Diagnostic),ps:0}],sn:"WithAdditionalDiagnostics",rt:$n[3].SyntaxElement,p:[System.Array.type(Kusto.Language.Diagnostic)]},{a:2,n:"WithAdditionalDiagnostics",t:8,pi:[{n:"diagnostics",pt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic),ps:0}],sn:"WithAdditionalDiagnostics$1",rt:$n[3].SyntaxElement,p:[$n[0].IEnumerable$1(Kusto.Language.Diagnostic)]},{a:2,n:"WithDiagnostics",t:8,pi:[{n:"diagnostics",pt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic),ps:0}],sn:"WithDiagnostics",rt:$n[3].SyntaxElement,p:[$n[0].IEnumerable$1(Kusto.Language.Diagnostic)]},{v:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{v:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:1,n:"Children",t:16,rt:System.Array.type(Kusto.Language.Syntax.SyntaxElement),g:{a:1,n:"get_Children",t:8,rt:System.Array.type(Kusto.Language.Syntax.SyntaxElement),fg:"Children"},fn:"Children"},{a:2,n:"ContainsSyntaxDiagnostics",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_ContainsSyntaxDiagnostics",t:8,rt:$n[2].Boolean,fg:"ContainsSyntaxDiagnostics",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"ContainsSyntaxDiagnostics"},{a:1,n:"DebugText",t:16,rt:$n[2].String,g:{a:1,n:"get_DebugText",t:8,rt:$n[2].String,fg:"DebugText"},fn:"DebugText"},{a:2,n:"Depth",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Depth",t:8,rt:$n[2].Int32,fg:"Depth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Depth"},{a:2,n:"End",t:16,rt:$n[2].Int32,g:{a:2,n:"get_End",t:8,rt:$n[2].Int32,fg:"End",box:function($v){return Bridge.box($v,System.Int32)}},fn:"End"},{v:!0,a:2,n:"FullWidth",t:16,rt:$n[2].Int32,g:{v:!0,a:2,n:"get_FullWidth",t:8,rt:$n[2].Int32,fg:"FullWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FullWidth"},{a:2,n:"HasSyntaxDiagnostics",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasSyntaxDiagnostics",t:8,rt:$n[2].Boolean,fg:"HasSyntaxDiagnostics",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasSyntaxDiagnostics"},{a:2,n:"IndexInParent",t:16,rt:$n[2].Int32,g:{a:2,n:"get_IndexInParent",t:8,rt:$n[2].Int32,fg:"IndexInParent",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:1,n:"set_IndexInParent",t:8,p:[$n[2].Int32],rt:$n[2].Void,fs:"IndexInParent"},fn:"IndexInParent"},{v:!0,a:2,n:"IsMissing",t:16,rt:$n[2].Boolean,g:{v:!0,a:2,n:"get_IsMissing",t:8,rt:$n[2].Boolean,fg:"IsMissing",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsMissing"},{v:!0,a:2,n:"IsToken",t:16,rt:$n[2].Boolean,g:{v:!0,a:2,n:"get_IsToken",t:8,rt:$n[2].Boolean,fg:"IsToken",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsToken"},{v:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{v:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"NameInParent",t:16,rt:$n[2].String,g:{a:2,n:"get_NameInParent",t:8,rt:$n[2].String,fg:"NameInParent"},fn:"NameInParent"},{a:3,n:"OffsetInParent",t:16,rt:$n[2].Int32,g:{a:3,n:"get_OffsetInParent",t:8,rt:$n[2].Int32,fg:"OffsetInParent",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:1,n:"set_OffsetInParent",t:8,p:[$n[2].Int32],rt:$n[2].Void,fs:"OffsetInParent"},fn:"OffsetInParent"},{a:2,n:"Parent",t:16,rt:$n[3].SyntaxNode,g:{a:2,n:"get_Parent",t:8,rt:$n[3].SyntaxNode,fg:"Parent"},s:{a:1,n:"set_Parent",t:8,p:[$n[3].SyntaxNode],rt:$n[2].Void,fs:"Parent"},fn:"Parent"},{a:2,n:"Root",t:16,rt:$n[3].SyntaxElement,g:{a:2,n:"get_Root",t:8,rt:$n[3].SyntaxElement,fg:"Root"},fn:"Root"},{a:2,n:"SyntaxDiagnostics",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),g:{a:2,n:"get_SyntaxDiagnostics",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),fg:"SyntaxDiagnostics"},fn:"SyntaxDiagnostics"},{a:2,n:"TextStart",t:16,rt:$n[2].Int32,g:{a:2,n:"get_TextStart",t:8,rt:$n[2].Int32,fg:"TextStart",box:function($v){return Bridge.box($v,System.Int32)}},fn:"TextStart"},{a:2,n:"TriviaStart",t:16,rt:$n[2].Int32,g:{a:2,n:"get_TriviaStart",t:8,rt:$n[2].Int32,fg:"TriviaStart",box:function($v){return Bridge.box($v,System.Int32)}},fn:"TriviaStart"},{v:!0,a:2,n:"TriviaWidth",t:16,rt:$n[2].Int32,g:{v:!0,a:2,n:"get_TriviaWidth",t:8,rt:$n[2].Int32,fg:"TriviaWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"TriviaWidth"},{v:!0,a:2,n:"Width",t:16,rt:$n[2].Int32,g:{v:!0,a:2,n:"get_Width",t:8,rt:$n[2].Int32,fg:"Width",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Width"},{a:1,n:"_triviaStart",t:4,rt:$n[2].Int32,sn:"_triviaStart",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"extendedData",t:4,rt:$n[3].SyntaxElement.ExtendedData,sn:"extendedData"},{a:1,n:"flags",t:4,rt:$n[3].SyntaxElement.Flags,sn:"flags",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxElement.Flags,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxElement.Flags))}},{a:1,backing:!0,n:"<IndexInParent>k__BackingField",t:4,rt:$n[2].Int32,sn:"IndexInParent",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<OffsetInParent>k__BackingField",t:4,rt:$n[2].Int32,sn:"OffsetInParent",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Parent>k__BackingField",t:4,rt:$n[3].SyntaxNode,sn:"Parent"}]}},$n);$m("Kusto.Language.Syntax.SyntaxElement.Flags",function(){return{td:$n[3].SyntaxElement,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ContainsDiagnostics",is:!0,t:4,rt:$n[3].SyntaxElement.Flags,sn:"ContainsDiagnostics",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxElement.Flags,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxElement.Flags))}}]}},$n);$m("Kusto.Language.Syntax.SyntaxElement.ExtendedData",function(){return{td:$n[3].SyntaxElement,att:1048581,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"SemanticInfo",t:4,rt:$n[3].SemanticInfo,sn:"SemanticInfo"},{a:2,n:"SyntaxDiagnostics",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"SyntaxDiagnostics"}]}},$n);$m("Kusto.Language.Syntax.Expression",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"},{a:2,n:"ConstantValue",t:16,rt:$n[2].Object,g:{a:2,n:"get_ConstantValue",t:8,rt:$n[2].Object,fg:"ConstantValue"},fn:"ConstantValue"},{a:2,n:"IsConstant",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsConstant",t:8,rt:$n[2].Boolean,fg:"IsConstant",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsConstant"},{v:!0,a:2,n:"IsLiteral",t:16,rt:$n[2].Boolean,g:{v:!0,a:2,n:"get_IsLiteral",t:8,rt:$n[2].Boolean,fg:"IsLiteral",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsLiteral"},{v:!0,a:2,n:"LiteralValue",t:16,rt:$n[2].Object,g:{v:!0,a:2,n:"get_LiteralValue",t:8,rt:$n[2].Object,fg:"LiteralValue"},fn:"LiteralValue"},{a:2,n:"ResultType",t:16,rt:$n[1].TypeSymbol,g:{a:2,n:"get_ResultType",t:8,rt:$n[1].TypeSymbol,fg:"ResultType"},fn:"ResultType"}]}},$n);$m("Kusto.Language.Syntax.DirectiveBlock",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"directiveToken",pt:$n[3].SyntaxToken,ps:0},{n:"skippedTokens",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),ps:1},{n:"endOfText",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DirectiveToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DirectiveToken",t:8,rt:$n[3].SyntaxToken,fg:"DirectiveToken"},fn:"DirectiveToken"},{a:2,n:"EndOfText",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EndOfText",t:8,rt:$n[3].SyntaxToken,fg:"EndOfText"},fn:"EndOfText"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"SkippedTokens",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),g:{a:2,n:"get_SkippedTokens",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),fg:"SkippedTokens"},fn:"SkippedTokens"},{a:1,backing:!0,n:"<DirectiveToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DirectiveToken"},{a:1,backing:!0,n:"<EndOfText>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EndOfText"},{a:1,backing:!0,n:"<SkippedTokens>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),sn:"SkippedTokens"}]}},$n);$m("Kusto.Language.Syntax.SkippedTokens",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"tokens",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Tokens",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),g:{a:2,n:"get_Tokens",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),fg:"Tokens"},fn:"Tokens"},{a:1,backing:!0,n:"<Tokens>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),sn:"Tokens"}]}},$n);$m("Kusto.Language.Syntax.QueryBlock",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),$n[3].SkippedTokens,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"statements",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),ps:0},{n:"skippedTokens",pt:$n[3].SkippedTokens,ps:1},{n:"endOfQuery",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"EndOfQuery",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EndOfQuery",t:8,rt:$n[3].SyntaxToken,fg:"EndOfQuery"},fn:"EndOfQuery"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"SkippedTokens",t:16,rt:$n[3].SkippedTokens,g:{a:2,n:"get_SkippedTokens",t:8,rt:$n[3].SkippedTokens,fg:"SkippedTokens"},fn:"SkippedTokens"},{a:2,n:"Statements",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),g:{a:2,n:"get_Statements",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),fg:"Statements"},fn:"Statements"},{a:1,backing:!0,n:"<EndOfQuery>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EndOfQuery"},{a:1,backing:!0,n:"<SkippedTokens>k__BackingField",t:4,rt:$n[3].SkippedTokens,sn:"SkippedTokens"},{a:1,backing:!0,n:"<Statements>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),sn:"Statements"}]}},$n);$m("Kusto.Language.Syntax.Clause",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.TypeOfLiteralExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"typeOfKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"types",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{ov:!0,a:2,n:"IsLiteral",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsLiteral",t:8,rt:$n[2].Boolean,fg:"IsLiteral",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsLiteral"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{ov:!0,a:2,n:"LiteralValue",t:16,rt:$n[2].Object,g:{ov:!0,a:2,n:"get_LiteralValue",t:8,rt:$n[2].Object,fg:"LiteralValue"},fn:"LiteralValue"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"TypeOfKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_TypeOfKeyword",t:8,rt:$n[3].SyntaxToken,fg:"TypeOfKeyword"},fn:"TypeOfKeyword"},{a:2,n:"Types",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Types",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Types"},fn:"Types"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<TypeOfKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"TypeOfKeyword"},{a:1,backing:!0,n:"<Types>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Types"}]}},$n);$m("Kusto.Language.Syntax.QueryOperator",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.BadQueryOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"keyword",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Keyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Keyword",t:8,rt:$n[3].SyntaxToken,fg:"Keyword"},fn:"Keyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Keyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Keyword"}]}},$n);$m("Kusto.Language.Syntax.Statement",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.CompoundStringLiteralExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"tokens",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"IsLiteral",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsLiteral",t:8,rt:$n[2].Boolean,fg:"IsLiteral",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsLiteral"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{ov:!0,a:2,n:"LiteralValue",t:16,rt:$n[2].Object,g:{ov:!0,a:2,n:"get_LiteralValue",t:8,rt:$n[2].Object,fg:"LiteralValue"},fn:"LiteralValue"},{a:2,n:"Tokens",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),g:{a:2,n:"get_Tokens",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),fg:"Tokens"},fn:"Tokens"},{a:1,n:"literalValue",t:4,rt:$n[2].String,sn:"literalValue"},{a:1,backing:!0,n:"<Tokens>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),sn:"Tokens"}]}},$n);$m("Kusto.Language.Syntax.Name",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"},{v:!0,a:2,n:"SimpleName",t:16,rt:$n[2].String,g:{v:!0,a:2,n:"get_SimpleName",t:8,rt:$n[2].String,fg:"SimpleName"},fn:"SimpleName"}]}},$n);$m("Kusto.Language.Syntax.TokenName",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Name",t:8,rt:$n[3].SyntaxToken,fg:"Name"},fn:"Name"},{ov:!0,a:2,n:"SimpleName",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_SimpleName",t:8,rt:$n[2].String,fg:"SimpleName"},fn:"SimpleName"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.BracketedName",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openBracket",pt:$n[3].SyntaxToken,ps:0},{n:"name",pt:$n[3].Expression,ps:1},{n:"closeBracket",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBracket",t:8,rt:$n[3].SyntaxToken,fg:"CloseBracket"},fn:"CloseBracket"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Name",t:8,rt:$n[3].Expression,fg:"Name"},fn:"Name"},{a:2,n:"OpenBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBracket",t:8,rt:$n[3].SyntaxToken,fg:"OpenBracket"},fn:"OpenBracket"},{ov:!0,a:2,n:"SimpleName",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_SimpleName",t:8,rt:$n[2].String,fg:"SimpleName"},fn:"SimpleName"},{a:1,backing:!0,n:"<CloseBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBracket"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].Expression,sn:"Name"},{a:1,backing:!0,n:"<OpenBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBracket"}]}},$n);$m("Kusto.Language.Syntax.BracedName",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openBrace",pt:$n[3].SyntaxToken,ps:0},{n:"name",pt:$n[3].SyntaxToken,ps:1},{n:"closeBrace",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBrace",t:8,rt:$n[3].SyntaxToken,fg:"CloseBrace"},fn:"CloseBrace"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Name",t:8,rt:$n[3].SyntaxToken,fg:"Name"},fn:"Name"},{a:2,n:"OpenBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBrace",t:8,rt:$n[3].SyntaxToken,fg:"OpenBrace"},fn:"OpenBrace"},{ov:!0,a:2,n:"SimpleName",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_SimpleName",t:8,rt:$n[2].String,fg:"SimpleName"},fn:"SimpleName"},{a:1,backing:!0,n:"<CloseBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBrace"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Name"},{a:1,backing:!0,n:"<OpenBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBrace"}]}},$n);$m("Kusto.Language.Syntax.WildcardedName",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"pattern",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Pattern",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Pattern",t:8,rt:$n[3].SyntaxToken,fg:"Pattern"},fn:"Pattern"},{ov:!0,a:2,n:"SimpleName",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_SimpleName",t:8,rt:$n[2].String,fg:"SimpleName"},fn:"SimpleName"},{a:1,backing:!0,n:"<Pattern>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Pattern"}]}},$n);$m("Kusto.Language.Syntax.BracketedWildcardedName",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openBracket",pt:$n[3].SyntaxToken,ps:0},{n:"pattern",pt:$n[3].SyntaxToken,ps:1},{n:"closeBracket",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBracket",t:8,rt:$n[3].SyntaxToken,fg:"CloseBracket"},fn:"CloseBracket"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBracket",t:8,rt:$n[3].SyntaxToken,fg:"OpenBracket"},fn:"OpenBracket"},{a:2,n:"Pattern",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Pattern",t:8,rt:$n[3].SyntaxToken,fg:"Pattern"},fn:"Pattern"},{ov:!0,a:2,n:"SimpleName",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_SimpleName",t:8,rt:$n[2].String,fg:"SimpleName"},fn:"SimpleName"},{a:1,backing:!0,n:"<CloseBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBracket"},{a:1,backing:!0,n:"<OpenBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBracket"},{a:1,backing:!0,n:"<Pattern>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Pattern"}]}},$n);$m("Kusto.Language.Syntax.NameDeclaration",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Name,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].Name,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"nameToken",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].Name,g:{a:2,n:"get_Name",t:8,rt:$n[3].Name,fg:"Name"},fn:"Name"},{a:2,n:"SimpleName",t:16,rt:$n[2].String,g:{a:2,n:"get_SimpleName",t:8,rt:$n[2].String,fg:"SimpleName"},fn:"SimpleName"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].Name,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.NameReference",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].Name,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].Name,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"nameToken",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"$ctor2"},{a:4,n:".ctor",t:1,p:[$n[3].Name,$n[1].SymbolMatch,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].Name,ps:0},{n:"match",pt:$n[1].SymbolMatch,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Match",t:16,rt:$n[1].SymbolMatch,g:{a:2,n:"get_Match",t:8,rt:$n[1].SymbolMatch,fg:"Match",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},fn:"Match"},{a:2,n:"Name",t:16,rt:$n[3].Name,g:{a:2,n:"get_Name",t:8,rt:$n[3].Name,fg:"Name"},fn:"Name"},{a:2,n:"SimpleName",t:16,rt:$n[2].String,g:{a:2,n:"get_SimpleName",t:8,rt:$n[2].String,fg:"SimpleName"},fn:"SimpleName"},{a:1,backing:!0,n:"<Match>k__BackingField",t:4,rt:$n[1].SymbolMatch,sn:"Match",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].Name,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.LiteralExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxKind,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"token",pt:$n[3].SyntaxToken,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"IsLiteral",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsLiteral",t:8,rt:$n[2].Boolean,fg:"IsLiteral",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsLiteral"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{ov:!0,a:2,n:"LiteralValue",t:16,rt:$n[2].Object,g:{ov:!0,a:2,n:"get_LiteralValue",t:8,rt:$n[2].Object,fg:"LiteralValue"},fn:"LiteralValue"},{a:2,n:"Token",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Token",t:8,rt:$n[3].SyntaxToken,fg:"Token"},fn:"Token"},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,backing:!0,n:"<Token>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Token"}]}},$n);$m("Kusto.Language.Syntax.StarExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"asteriskToken",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"AsteriskToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_AsteriskToken",t:8,rt:$n[3].SyntaxToken,fg:"AsteriskToken"},fn:"AsteriskToken"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<AsteriskToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"AsteriskToken"}]}},$n);$m("Kusto.Language.Syntax.AtExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"atToken",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"AtToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_AtToken",t:8,rt:$n[3].SyntaxToken,fg:"AtToken"},fn:"AtToken"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<AtToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"AtToken"}]}},$n);$m("Kusto.Language.Syntax.JsonExpression",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.JsonPair",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].SyntaxToken,ps:0},{n:"colon",pt:$n[3].SyntaxToken,ps:1},{n:"value",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Colon",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Colon",t:8,rt:$n[3].SyntaxToken,fg:"Colon"},fn:"Colon"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Name",t:8,rt:$n[3].SyntaxToken,fg:"Name"},fn:"Name"},{a:2,n:"Value",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Value",t:8,rt:$n[3].Expression,fg:"Value"},fn:"Value"},{a:1,backing:!0,n:"<Colon>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Colon"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Name"},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:$n[3].Expression,sn:"Value"}]}},$n);$m("Kusto.Language.Syntax.JsonObjectExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.JsonPair)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openBrace",pt:$n[3].SyntaxToken,ps:0},{n:"pairs",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.JsonPair)),ps:1},{n:"closeBrace",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBrace",t:8,rt:$n[3].SyntaxToken,fg:"CloseBrace"},fn:"CloseBrace"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBrace",t:8,rt:$n[3].SyntaxToken,fg:"OpenBrace"},fn:"OpenBrace"},{a:2,n:"Pairs",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.JsonPair)),g:{a:2,n:"get_Pairs",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.JsonPair)),fg:"Pairs"},fn:"Pairs"},{a:1,backing:!0,n:"<CloseBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBrace"},{a:1,backing:!0,n:"<OpenBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBrace"},{a:1,backing:!0,n:"<Pairs>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.JsonPair)),sn:"Pairs"}]}},$n);$m("Kusto.Language.Syntax.JsonArrayExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openBracket",pt:$n[3].SyntaxToken,ps:0},{n:"values",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"closeBracket",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBracket",t:8,rt:$n[3].SyntaxToken,fg:"CloseBracket"},fn:"CloseBracket"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBracket",t:8,rt:$n[3].SyntaxToken,fg:"OpenBracket"},fn:"OpenBracket"},{a:2,n:"Values",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Values",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Values"},fn:"Values"},{a:1,backing:!0,n:"<CloseBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBracket"},{a:1,backing:!0,n:"<OpenBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBracket"},{a:1,backing:!0,n:"<Values>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Values"}]}},$n);$m("Kusto.Language.Syntax.DynamicExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"dynamic",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Dynamic",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Dynamic",t:8,rt:$n[3].SyntaxToken,fg:"Dynamic"},fn:"Dynamic"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"IsLiteral",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsLiteral",t:8,rt:$n[2].Boolean,fg:"IsLiteral",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsLiteral"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{ov:!0,a:2,n:"LiteralValue",t:16,rt:$n[2].Object,g:{ov:!0,a:2,n:"get_LiteralValue",t:8,rt:$n[2].Object,fg:"LiteralValue"},fn:"LiteralValue"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Dynamic>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Dynamic"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.ParenthesizedExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openParen",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"closeParen",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.ExpressionList",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openParen",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"closeParen",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.ExpressionCouple",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openParen",pt:$n[3].SyntaxToken,ps:0},{n:"first",pt:$n[3].Expression,ps:1},{n:"dotDot",pt:$n[3].SyntaxToken,ps:2},{n:"second",pt:$n[3].Expression,ps:3},{n:"closeParen",pt:$n[3].SyntaxToken,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"DotDot",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DotDot",t:8,rt:$n[3].SyntaxToken,fg:"DotDot"},fn:"DotDot"},{a:2,n:"First",t:16,rt:$n[3].Expression,g:{a:2,n:"get_First",t:8,rt:$n[3].Expression,fg:"First"},fn:"First"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"Second",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Second",t:8,rt:$n[3].Expression,fg:"Second"},fn:"Second"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<DotDot>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DotDot"},{a:1,backing:!0,n:"<First>k__BackingField",t:4,rt:$n[3].Expression,sn:"First"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<Second>k__BackingField",t:4,rt:$n[3].Expression,sn:"Second"}]}},$n);$m("Kusto.Language.Syntax.PrefixUnaryExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxKind,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"operator",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Operator",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Operator",t:8,rt:$n[3].SyntaxToken,fg:"Operator"},fn:"Operator"},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Operator>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Operator"}]}},$n);$m("Kusto.Language.Syntax.BinaryExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxKind,$n[3].Expression,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"left",pt:$n[3].Expression,ps:1},{n:"operator",pt:$n[3].SyntaxToken,ps:2},{n:"right",pt:$n[3].Expression,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Left",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Left",t:8,rt:$n[3].Expression,fg:"Left"},fn:"Left"},{a:2,n:"Operator",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Operator",t:8,rt:$n[3].SyntaxToken,fg:"Operator"},fn:"Operator"},{a:2,n:"Right",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Right",t:8,rt:$n[3].Expression,fg:"Right"},fn:"Right"},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,backing:!0,n:"<Left>k__BackingField",t:4,rt:$n[3].Expression,sn:"Left"},{a:1,backing:!0,n:"<Operator>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Operator"},{a:1,backing:!0,n:"<Right>k__BackingField",t:4,rt:$n[3].Expression,sn:"Right"}]}},$n);$m("Kusto.Language.Syntax.InExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxKind,$n[3].Expression,$n[3].SyntaxToken,$n[3].ExpressionList,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"left",pt:$n[3].Expression,ps:1},{n:"operator",pt:$n[3].SyntaxToken,ps:2},{n:"right",pt:$n[3].ExpressionList,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Left",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Left",t:8,rt:$n[3].Expression,fg:"Left"},fn:"Left"},{a:2,n:"Operator",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Operator",t:8,rt:$n[3].SyntaxToken,fg:"Operator"},fn:"Operator"},{a:2,n:"Right",t:16,rt:$n[3].ExpressionList,g:{a:2,n:"get_Right",t:8,rt:$n[3].ExpressionList,fg:"Right"},fn:"Right"},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,backing:!0,n:"<Left>k__BackingField",t:4,rt:$n[3].Expression,sn:"Left"},{a:1,backing:!0,n:"<Operator>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Operator"},{a:1,backing:!0,n:"<Right>k__BackingField",t:4,rt:$n[3].ExpressionList,sn:"Right"}]}},$n);$m("Kusto.Language.Syntax.HasAnyExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxKind,$n[3].Expression,$n[3].SyntaxToken,$n[3].ExpressionList,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"left",pt:$n[3].Expression,ps:1},{n:"operator",pt:$n[3].SyntaxToken,ps:2},{n:"right",pt:$n[3].ExpressionList,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Left",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Left",t:8,rt:$n[3].Expression,fg:"Left"},fn:"Left"},{a:2,n:"Operator",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Operator",t:8,rt:$n[3].SyntaxToken,fg:"Operator"},fn:"Operator"},{a:2,n:"Right",t:16,rt:$n[3].ExpressionList,g:{a:2,n:"get_Right",t:8,rt:$n[3].ExpressionList,fg:"Right"},fn:"Right"},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,backing:!0,n:"<Left>k__BackingField",t:4,rt:$n[3].Expression,sn:"Left"},{a:1,backing:!0,n:"<Operator>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Operator"},{a:1,backing:!0,n:"<Right>k__BackingField",t:4,rt:$n[3].ExpressionList,sn:"Right"}]}},$n);$m("Kusto.Language.Syntax.HasAllExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxKind,$n[3].Expression,$n[3].SyntaxToken,$n[3].ExpressionList,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"left",pt:$n[3].Expression,ps:1},{n:"operator",pt:$n[3].SyntaxToken,ps:2},{n:"right",pt:$n[3].ExpressionList,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Left",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Left",t:8,rt:$n[3].Expression,fg:"Left"},fn:"Left"},{a:2,n:"Operator",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Operator",t:8,rt:$n[3].SyntaxToken,fg:"Operator"},fn:"Operator"},{a:2,n:"Right",t:16,rt:$n[3].ExpressionList,g:{a:2,n:"get_Right",t:8,rt:$n[3].ExpressionList,fg:"Right"},fn:"Right"},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,backing:!0,n:"<Left>k__BackingField",t:4,rt:$n[3].Expression,sn:"Left"},{a:1,backing:!0,n:"<Operator>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Operator"},{a:1,backing:!0,n:"<Right>k__BackingField",t:4,rt:$n[3].ExpressionList,sn:"Right"}]}},$n);$m("Kusto.Language.Syntax.BetweenExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxKind,$n[3].Expression,$n[3].SyntaxToken,$n[3].ExpressionCouple,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"left",pt:$n[3].Expression,ps:1},{n:"operator",pt:$n[3].SyntaxToken,ps:2},{n:"right",pt:$n[3].ExpressionCouple,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Left",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Left",t:8,rt:$n[3].Expression,fg:"Left"},fn:"Left"},{a:2,n:"Operator",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Operator",t:8,rt:$n[3].SyntaxToken,fg:"Operator"},fn:"Operator"},{a:2,n:"Right",t:16,rt:$n[3].ExpressionCouple,g:{a:2,n:"get_Right",t:8,rt:$n[3].ExpressionCouple,fg:"Right"},fn:"Right"},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,backing:!0,n:"<Left>k__BackingField",t:4,rt:$n[3].Expression,sn:"Left"},{a:1,backing:!0,n:"<Operator>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Operator"},{a:1,backing:!0,n:"<Right>k__BackingField",t:4,rt:$n[3].ExpressionCouple,sn:"Right"}]}},$n);$m("Kusto.Language.Syntax.FunctionCallExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].NameReference,$n[3].ExpressionList,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].NameReference,ps:0},{n:"argumentList",pt:$n[3].ExpressionList,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ArgumentList",t:16,rt:$n[3].ExpressionList,g:{a:2,n:"get_ArgumentList",t:8,rt:$n[3].ExpressionList,fg:"ArgumentList"},fn:"ArgumentList"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameReference,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameReference,fg:"Name"},fn:"Name"},{a:1,backing:!0,n:"<ArgumentList>k__BackingField",t:4,rt:$n[3].ExpressionList,sn:"ArgumentList"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameReference,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.ToScalarExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].NamedParameter,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"toScalar",pt:$n[3].SyntaxToken,ps:0},{n:"kindParameter",pt:$n[3].NamedParameter,ps:1},{n:"openParen",pt:$n[3].SyntaxToken,ps:2},{n:"expression",pt:$n[3].Expression,ps:3},{n:"closeParen",pt:$n[3].SyntaxToken,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"KindParameter",t:16,rt:$n[3].NamedParameter,g:{a:2,n:"get_KindParameter",t:8,rt:$n[3].NamedParameter,fg:"KindParameter"},fn:"KindParameter"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"ToScalar",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ToScalar",t:8,rt:$n[3].SyntaxToken,fg:"ToScalar"},fn:"ToScalar"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<KindParameter>k__BackingField",t:4,rt:$n[3].NamedParameter,sn:"KindParameter"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<ToScalar>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ToScalar"}]}},$n);$m("Kusto.Language.Syntax.ToTableExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].NamedParameter,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"toTable",pt:$n[3].SyntaxToken,ps:0},{n:"kindParameter",pt:$n[3].NamedParameter,ps:1},{n:"openParen",pt:$n[3].SyntaxToken,ps:2},{n:"expression",pt:$n[3].Expression,ps:3},{n:"closeParen",pt:$n[3].SyntaxToken,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"KindParameter",t:16,rt:$n[3].NamedParameter,g:{a:2,n:"get_KindParameter",t:8,rt:$n[3].NamedParameter,fg:"KindParameter"},fn:"KindParameter"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"ToTable",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ToTable",t:8,rt:$n[3].SyntaxToken,fg:"ToTable"},fn:"ToTable"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<KindParameter>k__BackingField",t:4,rt:$n[3].NamedParameter,sn:"KindParameter"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<ToTable>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ToTable"}]}},$n);$m("Kusto.Language.Syntax.MaterializedViewCombineExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].MaterializedViewCombineNameClause,$n[3].MaterializedViewCombineClause,$n[3].MaterializedViewCombineClause,$n[3].MaterializedViewCombineClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"materializedViewCombineKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"viewName",pt:$n[3].MaterializedViewCombineNameClause,ps:1},{n:"baseClause",pt:$n[3].MaterializedViewCombineClause,ps:2},{n:"deltaClause",pt:$n[3].MaterializedViewCombineClause,ps:3},{n:"aggregationsClause",pt:$n[3].MaterializedViewCombineClause,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"AggregationsClause",t:16,rt:$n[3].MaterializedViewCombineClause,g:{a:2,n:"get_AggregationsClause",t:8,rt:$n[3].MaterializedViewCombineClause,fg:"AggregationsClause"},fn:"AggregationsClause"},{a:2,n:"BaseClause",t:16,rt:$n[3].MaterializedViewCombineClause,g:{a:2,n:"get_BaseClause",t:8,rt:$n[3].MaterializedViewCombineClause,fg:"BaseClause"},fn:"BaseClause"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DeltaClause",t:16,rt:$n[3].MaterializedViewCombineClause,g:{a:2,n:"get_DeltaClause",t:8,rt:$n[3].MaterializedViewCombineClause,fg:"DeltaClause"},fn:"DeltaClause"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"MaterializedViewCombineKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_MaterializedViewCombineKeyword",t:8,rt:$n[3].SyntaxToken,fg:"MaterializedViewCombineKeyword"},fn:"MaterializedViewCombineKeyword"},{a:2,n:"ViewName",t:16,rt:$n[3].MaterializedViewCombineNameClause,g:{a:2,n:"get_ViewName",t:8,rt:$n[3].MaterializedViewCombineNameClause,fg:"ViewName"},fn:"ViewName"},{a:1,backing:!0,n:"<AggregationsClause>k__BackingField",t:4,rt:$n[3].MaterializedViewCombineClause,sn:"AggregationsClause"},{a:1,backing:!0,n:"<BaseClause>k__BackingField",t:4,rt:$n[3].MaterializedViewCombineClause,sn:"BaseClause"},{a:1,backing:!0,n:"<DeltaClause>k__BackingField",t:4,rt:$n[3].MaterializedViewCombineClause,sn:"DeltaClause"},{a:1,backing:!0,n:"<MaterializedViewCombineKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"MaterializedViewCombineKeyword"},{a:1,backing:!0,n:"<ViewName>k__BackingField",t:4,rt:$n[3].MaterializedViewCombineNameClause,sn:"ViewName"}]}},$n);$m("Kusto.Language.Syntax.MaterializedViewCombineNameClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openParen",pt:$n[3].SyntaxToken,ps:0},{n:"value",pt:$n[3].Expression,ps:1},{n:"closeParen",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"Value",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Value",t:8,rt:$n[3].Expression,fg:"Value"},fn:"Value"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:$n[3].Expression,sn:"Value"}]}},$n);$m("Kusto.Language.Syntax.MaterializedViewCombineClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"keyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{a:2,n:"Keyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Keyword",t:8,rt:$n[3].SyntaxToken,fg:"Keyword"},fn:"Keyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Keyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Keyword"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.NamedExpression",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.SimpleNamedExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].NameDeclaration,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].NameDeclaration,ps:0},{n:"equalToken",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"EqualToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EqualToken",t:8,rt:$n[3].SyntaxToken,fg:"EqualToken"},fn:"EqualToken"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:1,backing:!0,n:"<EqualToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EqualToken"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.RenameList",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openParen",pt:$n[3].SyntaxToken,ps:0},{n:"names",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),ps:1},{n:"closeParen",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Names",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),g:{a:2,n:"get_Names",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),fg:"Names"},fn:"Names"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Names>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),sn:"Names"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.CompoundNamedExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].RenameList,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"names",pt:$n[3].RenameList,ps:0},{n:"equalToken",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"EqualToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EqualToken",t:8,rt:$n[3].SyntaxToken,fg:"EqualToken"},fn:"EqualToken"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Names",t:16,rt:$n[3].RenameList,g:{a:2,n:"get_Names",t:8,rt:$n[3].RenameList,fg:"Names"},fn:"Names"},{a:1,backing:!0,n:"<EqualToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EqualToken"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Names>k__BackingField",t:4,rt:$n[3].RenameList,sn:"Names"}]}},$n);$m("Kusto.Language.Syntax.BracketedExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openBracket",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"closeBracket",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBracket",t:8,rt:$n[3].SyntaxToken,fg:"CloseBracket"},fn:"CloseBracket"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBracket",t:8,rt:$n[3].SyntaxToken,fg:"OpenBracket"},fn:"OpenBracket"},{a:1,backing:!0,n:"<CloseBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBracket"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OpenBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBracket"}]}},$n);$m("Kusto.Language.Syntax.PathExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Expression,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"dot",pt:$n[3].SyntaxToken,ps:1},{n:"selector",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Dot",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Dot",t:8,rt:$n[3].SyntaxToken,fg:"Dot"},fn:"Dot"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Selector",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Selector",t:8,rt:$n[3].Expression,fg:"Selector"},fn:"Selector"},{a:1,backing:!0,n:"<Dot>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Dot"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Selector>k__BackingField",t:4,rt:$n[3].Expression,sn:"Selector"}]}},$n);$m("Kusto.Language.Syntax.ElementExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Expression,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"selector",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Selector",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Selector",t:8,rt:$n[3].Expression,fg:"Selector"},fn:"Selector"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Selector>k__BackingField",t:4,rt:$n[3].Expression,sn:"Selector"}]}},$n);$m("Kusto.Language.Syntax.PipeExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Expression,$n[3].SyntaxToken,$n[3].QueryOperator,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"bar",pt:$n[3].SyntaxToken,ps:1},{n:"operator",pt:$n[3].QueryOperator,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"Bar",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Bar",t:8,rt:$n[3].SyntaxToken,fg:"Bar"},fn:"Bar"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Operator",t:16,rt:$n[3].QueryOperator,g:{a:2,n:"get_Operator",t:8,rt:$n[3].QueryOperator,fg:"Operator"},fn:"Operator"},{a:1,backing:!0,n:"<Bar>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Bar"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Operator>k__BackingField",t:4,rt:$n[3].QueryOperator,sn:"Operator"}]}},$n);$m("Kusto.Language.Syntax.RangeOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].NameDeclaration,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"rangeToken",pt:$n[3].SyntaxToken,ps:0},{n:"name",pt:$n[3].NameDeclaration,ps:1},{n:"fromToken",pt:$n[3].SyntaxToken,ps:2},{n:"from",pt:$n[3].Expression,ps:3},{n:"toToken",pt:$n[3].SyntaxToken,ps:4},{n:"to",pt:$n[3].Expression,ps:5},{n:"stepToken",pt:$n[3].SyntaxToken,ps:6},{n:"step",pt:$n[3].Expression,ps:7},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:8}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"From",t:16,rt:$n[3].Expression,g:{a:2,n:"get_From",t:8,rt:$n[3].Expression,fg:"From"},fn:"From"},{a:2,n:"FromToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_FromToken",t:8,rt:$n[3].SyntaxToken,fg:"FromToken"},fn:"FromToken"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:2,n:"RangeToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_RangeToken",t:8,rt:$n[3].SyntaxToken,fg:"RangeToken"},fn:"RangeToken"},{a:2,n:"Step",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Step",t:8,rt:$n[3].Expression,fg:"Step"},fn:"Step"},{a:2,n:"StepToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_StepToken",t:8,rt:$n[3].SyntaxToken,fg:"StepToken"},fn:"StepToken"},{a:2,n:"To",t:16,rt:$n[3].Expression,g:{a:2,n:"get_To",t:8,rt:$n[3].Expression,fg:"To"},fn:"To"},{a:2,n:"ToToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ToToken",t:8,rt:$n[3].SyntaxToken,fg:"ToToken"},fn:"ToToken"},{a:1,backing:!0,n:"<From>k__BackingField",t:4,rt:$n[3].Expression,sn:"From"},{a:1,backing:!0,n:"<FromToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"FromToken"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"},{a:1,backing:!0,n:"<RangeToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"RangeToken"},{a:1,backing:!0,n:"<Step>k__BackingField",t:4,rt:$n[3].Expression,sn:"Step"},{a:1,backing:!0,n:"<StepToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"StepToken"},{a:1,backing:!0,n:"<To>k__BackingField",t:4,rt:$n[3].Expression,sn:"To"},{a:1,backing:!0,n:"<ToToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ToToken"}]}},$n);$m("Kusto.Language.Syntax.NamedParameter",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].NameDeclaration,$n[3].SyntaxToken,$n[3].Expression,$n[8].CompletionHint,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].NameDeclaration,ps:0},{n:"equalToken",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"expressionHint",dv:0,o:!0,pt:$n[8].CompletionHint,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetCompletionHint",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHint",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"EqualToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EqualToken",t:8,rt:$n[3].SyntaxToken,fg:"EqualToken"},fn:"EqualToken"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{a:2,n:"ExpressionHint",t:16,rt:$n[8].CompletionHint,g:{a:2,n:"get_ExpressionHint",t:8,rt:$n[8].CompletionHint,fg:"ExpressionHint",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},fn:"ExpressionHint"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:1,backing:!0,n:"<EqualToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EqualToken"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<ExpressionHint>k__BackingField",t:4,rt:$n[8].CompletionHint,sn:"ExpressionHint",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.ConsumeOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"consumeKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"ConsumeKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ConsumeKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ConsumeKeyword"},fn:"ConsumeKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:1,backing:!0,n:"<ConsumeKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ConsumeKeyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"}]}},$n);$m("Kusto.Language.Syntax.CountOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].CountAsIdentifierClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"countKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"asIdentifier",pt:$n[3].CountAsIdentifierClause,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"AsIdentifier",t:16,rt:$n[3].CountAsIdentifierClause,g:{a:2,n:"get_AsIdentifier",t:8,rt:$n[3].CountAsIdentifierClause,fg:"AsIdentifier"},fn:"AsIdentifier"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CountKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CountKeyword",t:8,rt:$n[3].SyntaxToken,fg:"CountKeyword"},fn:"CountKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<AsIdentifier>k__BackingField",t:4,rt:$n[3].CountAsIdentifierClause,sn:"AsIdentifier"},{a:1,backing:!0,n:"<CountKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CountKeyword"}]}},$n);$m("Kusto.Language.Syntax.CountAsIdentifierClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"asKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"identifier",pt:$n[3].SyntaxToken,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"AsKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_AsKeyword",t:8,rt:$n[3].SyntaxToken,fg:"AsKeyword"},fn:"AsKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Identifier",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Identifier",t:8,rt:$n[3].SyntaxToken,fg:"Identifier"},fn:"Identifier"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<AsKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"AsKeyword"},{a:1,backing:!0,n:"<Identifier>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Identifier"}]}},$n);$m("Kusto.Language.Syntax.ExecuteAndCacheOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"executeAndCacheKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"ExecuteAndCacheKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ExecuteAndCacheKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ExecuteAndCacheKeyword"},fn:"ExecuteAndCacheKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<ExecuteAndCacheKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ExecuteAndCacheKeyword"}]}},$n);$m("Kusto.Language.Syntax.ExtendOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"extendKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{a:2,n:"ExtendKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ExtendKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ExtendKeyword"},fn:"ExtendKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<ExtendKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ExtendKeyword"}]}},$n);$m("Kusto.Language.Syntax.FacetOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].FacetWithClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"facetKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"byKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:2},{n:"withClause",pt:$n[3].FacetWithClause,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{a:2,n:"FacetKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_FacetKeyword",t:8,rt:$n[3].SyntaxToken,fg:"FacetKeyword"},fn:"FacetKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"WithClause",t:16,rt:$n[3].FacetWithClause,g:{a:2,n:"get_WithClause",t:8,rt:$n[3].FacetWithClause,fg:"WithClause"},fn:"WithClause"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<FacetKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"FacetKeyword"},{a:1,backing:!0,n:"<WithClause>k__BackingField",t:4,rt:$n[3].FacetWithClause,sn:"WithClause"}]}},$n);$m("Kusto.Language.Syntax.FacetWithClause",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.FacetWithOperatorClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].QueryOperator,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"withKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"operator",pt:$n[3].QueryOperator,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Operator",t:16,rt:$n[3].QueryOperator,g:{a:2,n:"get_Operator",t:8,rt:$n[3].QueryOperator,fg:"Operator"},fn:"Operator"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<Operator>k__BackingField",t:4,rt:$n[3].QueryOperator,sn:"Operator"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.FacetWithExpressionClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"withKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.FilterOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"keyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"condition",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Condition",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Condition",t:8,rt:$n[3].Expression,fg:"Condition"},fn:"Condition"},{a:2,n:"Keyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Keyword",t:8,rt:$n[3].SyntaxToken,fg:"Keyword"},fn:"Keyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:1,backing:!0,n:"<Condition>k__BackingField",t:4,rt:$n[3].Expression,sn:"Condition"},{a:1,backing:!0,n:"<Keyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Keyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"}]}},$n);$m("Kusto.Language.Syntax.GetSchemaOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"getSchemaKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"GetSchemaKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_GetSchemaKeyword",t:8,rt:$n[3].SyntaxToken,fg:"GetSchemaKeyword"},fn:"GetSchemaKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<GetSchemaKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"GetSchemaKeyword"}]}},$n);$m("Kusto.Language.Syntax.FindOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].DataScopeClause,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].FindInClause,$n[3].SyntaxToken,$n[3].Expression,$n[3].FindProjectClause,$n[3].FindProjectClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"findKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"dataScope",pt:$n[3].DataScopeClause,ps:1},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:2},{n:"inClause",pt:$n[3].FindInClause,ps:3},{n:"whereKeyword",pt:$n[3].SyntaxToken,ps:4},{n:"condition",pt:$n[3].Expression,ps:5},{n:"project",pt:$n[3].FindProjectClause,ps:6},{n:"projectAway",pt:$n[3].FindProjectClause,ps:7},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:8}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Condition",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Condition",t:8,rt:$n[3].Expression,fg:"Condition"},fn:"Condition"},{a:2,n:"DataScope",t:16,rt:$n[3].DataScopeClause,g:{a:2,n:"get_DataScope",t:8,rt:$n[3].DataScopeClause,fg:"DataScope"},fn:"DataScope"},{a:2,n:"FindKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_FindKeyword",t:8,rt:$n[3].SyntaxToken,fg:"FindKeyword"},fn:"FindKeyword"},{a:2,n:"InClause",t:16,rt:$n[3].FindInClause,g:{a:2,n:"get_InClause",t:8,rt:$n[3].FindInClause,fg:"InClause"},fn:"InClause"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"Project",t:16,rt:$n[3].FindProjectClause,g:{a:2,n:"get_Project",t:8,rt:$n[3].FindProjectClause,fg:"Project"},fn:"Project"},{a:2,n:"ProjectAway",t:16,rt:$n[3].FindProjectClause,g:{a:2,n:"get_ProjectAway",t:8,rt:$n[3].FindProjectClause,fg:"ProjectAway"},fn:"ProjectAway"},{a:2,n:"WhereKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WhereKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WhereKeyword"},fn:"WhereKeyword"},{a:1,backing:!0,n:"<Condition>k__BackingField",t:4,rt:$n[3].Expression,sn:"Condition"},{a:1,backing:!0,n:"<DataScope>k__BackingField",t:4,rt:$n[3].DataScopeClause,sn:"DataScope"},{a:1,backing:!0,n:"<FindKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"FindKeyword"},{a:1,backing:!0,n:"<InClause>k__BackingField",t:4,rt:$n[3].FindInClause,sn:"InClause"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<Project>k__BackingField",t:4,rt:$n[3].FindProjectClause,sn:"Project"},{a:1,backing:!0,n:"<ProjectAway>k__BackingField",t:4,rt:$n[3].FindProjectClause,sn:"ProjectAway"},{a:1,backing:!0,n:"<WhereKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WhereKeyword"}]}},$n);$m("Kusto.Language.Syntax.DataScopeClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"dataScopeKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"equalToken",pt:$n[3].SyntaxToken,ps:1},{n:"value",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DataScopeKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DataScopeKeyword",t:8,rt:$n[3].SyntaxToken,fg:"DataScopeKeyword"},fn:"DataScopeKeyword"},{a:2,n:"EqualToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EqualToken",t:8,rt:$n[3].SyntaxToken,fg:"EqualToken"},fn:"EqualToken"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Value",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Value",t:8,rt:$n[3].SyntaxToken,fg:"Value"},fn:"Value"},{a:1,backing:!0,n:"<DataScopeKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DataScopeKeyword"},{a:1,backing:!0,n:"<EqualToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EqualToken"},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Value"}]}},$n);$m("Kusto.Language.Syntax.TypedColumnReference",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].NameReference,$n[3].SyntaxToken,$n[3].TypeExpression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"column",pt:$n[3].NameReference,ps:0},{n:"colonToken",pt:$n[3].SyntaxToken,ps:1},{n:"type",pt:$n[3].TypeExpression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"ColonToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ColonToken",t:8,rt:$n[3].SyntaxToken,fg:"ColonToken"},fn:"ColonToken"},{a:2,n:"Column",t:16,rt:$n[3].NameReference,g:{a:2,n:"get_Column",t:8,rt:$n[3].NameReference,fg:"Column"},fn:"Column"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Type",t:16,rt:$n[3].TypeExpression,g:{a:2,n:"get_Type",t:8,rt:$n[3].TypeExpression,fg:"Type"},fn:"Type"},{a:1,backing:!0,n:"<ColonToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ColonToken"},{a:1,backing:!0,n:"<Column>k__BackingField",t:4,rt:$n[3].NameReference,sn:"Column"},{a:1,backing:!0,n:"<Type>k__BackingField",t:4,rt:$n[3].TypeExpression,sn:"Type"}]}},$n);$m("Kusto.Language.Syntax.FindInClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"inKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{a:2,n:"InKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_InKeyword",t:8,rt:$n[3].SyntaxToken,fg:"InKeyword"},fn:"InKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<InKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"InKeyword"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.FindProjectClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"projectKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"columns",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Columns",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Columns",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Columns"},fn:"Columns"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ProjectKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ProjectKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ProjectKeyword"},fn:"ProjectKeyword"},{a:1,backing:!0,n:"<Columns>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Columns"},{a:1,backing:!0,n:"<ProjectKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ProjectKeyword"}]}},$n);$m("Kusto.Language.Syntax.PackExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"packKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"asteriskToken",pt:$n[3].SyntaxToken,ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"AsteriskToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_AsteriskToken",t:8,rt:$n[3].SyntaxToken,fg:"AsteriskToken"},fn:"AsteriskToken"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"PackKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_PackKeyword",t:8,rt:$n[3].SyntaxToken,fg:"PackKeyword"},fn:"PackKeyword"},{a:1,backing:!0,n:"<AsteriskToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"AsteriskToken"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<PackKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"PackKeyword"}]}},$n);$m("Kusto.Language.Syntax.NameAndTypeDeclaration",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].NameDeclaration,$n[3].SyntaxToken,$n[3].TypeExpression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].NameDeclaration,ps:0},{n:"colon",pt:$n[3].SyntaxToken,ps:1},{n:"type",pt:$n[3].TypeExpression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Colon",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Colon",t:8,rt:$n[3].SyntaxToken,fg:"Colon"},fn:"Colon"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:2,n:"Type",t:16,rt:$n[3].TypeExpression,g:{a:2,n:"get_Type",t:8,rt:$n[3].TypeExpression,fg:"Type"},fn:"Type"},{a:1,backing:!0,n:"<Colon>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Colon"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"},{a:1,backing:!0,n:"<Type>k__BackingField",t:4,rt:$n[3].TypeExpression,sn:"Type"}]}},$n);$m("Kusto.Language.Syntax.TypeExpression",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.PrimitiveTypeExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"type",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Type",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Type",t:8,rt:$n[3].SyntaxToken,fg:"Type"},fn:"Type"},{a:1,backing:!0,n:"<Type>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Type"}]}},$n);$m("Kusto.Language.Syntax.SearchOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].DataScopeClause,$n[3].FindInClause,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"searchKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"dataScope",pt:$n[3].DataScopeClause,ps:2},{n:"inClause",pt:$n[3].FindInClause,ps:3},{n:"condition",pt:$n[3].Expression,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Condition",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Condition",t:8,rt:$n[3].Expression,fg:"Condition"},fn:"Condition"},{a:2,n:"DataScope",t:16,rt:$n[3].DataScopeClause,g:{a:2,n:"get_DataScope",t:8,rt:$n[3].DataScopeClause,fg:"DataScope"},fn:"DataScope"},{a:2,n:"InClause",t:16,rt:$n[3].FindInClause,g:{a:2,n:"get_InClause",t:8,rt:$n[3].FindInClause,fg:"InClause"},fn:"InClause"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"SearchKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_SearchKeyword",t:8,rt:$n[3].SyntaxToken,fg:"SearchKeyword"},fn:"SearchKeyword"},{a:1,backing:!0,n:"<Condition>k__BackingField",t:4,rt:$n[3].Expression,sn:"Condition"},{a:1,backing:!0,n:"<DataScope>k__BackingField",t:4,rt:$n[3].DataScopeClause,sn:"DataScope"},{a:1,backing:!0,n:"<InClause>k__BackingField",t:4,rt:$n[3].FindInClause,sn:"InClause"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<SearchKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"SearchKeyword"}]}},$n);$m("Kusto.Language.Syntax.ForkOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.ForkExpression),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"forkKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.ForkExpression),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.ForkExpression),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.ForkExpression),fg:"Expressions"},fn:"Expressions"},{a:2,n:"ForkKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ForkKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ForkKeyword"},fn:"ForkKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.ForkExpression),sn:"Expressions"},{a:1,backing:!0,n:"<ForkKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ForkKeyword"}]}},$n);$m("Kusto.Language.Syntax.NameEqualsClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].NameDeclaration,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].NameDeclaration,ps:0},{n:"equalToken",pt:$n[3].SyntaxToken,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"EqualToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EqualToken",t:8,rt:$n[3].SyntaxToken,fg:"EqualToken"},fn:"EqualToken"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:1,backing:!0,n:"<EqualToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EqualToken"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.ForkExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].NameEqualsClause,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"nameEquals",pt:$n[3].NameEqualsClause,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"NameEquals",t:16,rt:$n[3].NameEqualsClause,g:{a:2,n:"get_NameEquals",t:8,rt:$n[3].NameEqualsClause,fg:"NameEquals"},fn:"NameEquals"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<NameEquals>k__BackingField",t:4,rt:$n[3].NameEqualsClause,sn:"NameEquals"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeSeriesExpression)),$n[3].MakeSeriesOnClause,$n[3].MakeSeriesRangeClause,$n[3].MakeSeriesByClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"makeSeriesKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"aggregates",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeSeriesExpression)),ps:2},{n:"onClause",pt:$n[3].MakeSeriesOnClause,ps:3},{n:"rangeClause",pt:$n[3].MakeSeriesRangeClause,ps:4},{n:"byClause",pt:$n[3].MakeSeriesByClause,ps:5},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:6}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Aggregates",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeSeriesExpression)),g:{a:2,n:"get_Aggregates",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeSeriesExpression)),fg:"Aggregates"},fn:"Aggregates"},{a:2,n:"ByClause",t:16,rt:$n[3].MakeSeriesByClause,g:{a:2,n:"get_ByClause",t:8,rt:$n[3].MakeSeriesByClause,fg:"ByClause"},fn:"ByClause"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"MakeSeriesKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_MakeSeriesKeyword",t:8,rt:$n[3].SyntaxToken,fg:"MakeSeriesKeyword"},fn:"MakeSeriesKeyword"},{a:2,n:"OnClause",t:16,rt:$n[3].MakeSeriesOnClause,g:{a:2,n:"get_OnClause",t:8,rt:$n[3].MakeSeriesOnClause,fg:"OnClause"},fn:"OnClause"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"RangeClause",t:16,rt:$n[3].MakeSeriesRangeClause,g:{a:2,n:"get_RangeClause",t:8,rt:$n[3].MakeSeriesRangeClause,fg:"RangeClause"},fn:"RangeClause"},{a:1,backing:!0,n:"<Aggregates>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeSeriesExpression)),sn:"Aggregates"},{a:1,backing:!0,n:"<ByClause>k__BackingField",t:4,rt:$n[3].MakeSeriesByClause,sn:"ByClause"},{a:1,backing:!0,n:"<MakeSeriesKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"MakeSeriesKeyword"},{a:1,backing:!0,n:"<OnClause>k__BackingField",t:4,rt:$n[3].MakeSeriesOnClause,sn:"OnClause"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<RangeClause>k__BackingField",t:4,rt:$n[3].MakeSeriesRangeClause,sn:"RangeClause"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Expression,$n[3].DefaultExpressionClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"defaultExpression",pt:$n[3].DefaultExpressionClause,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DefaultExpression",t:16,rt:$n[3].DefaultExpressionClause,g:{a:2,n:"get_DefaultExpression",t:8,rt:$n[3].DefaultExpressionClause,fg:"DefaultExpression"},fn:"DefaultExpression"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<DefaultExpression>k__BackingField",t:4,rt:$n[3].DefaultExpressionClause,sn:"DefaultExpression"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"}]}},$n);$m("Kusto.Language.Syntax.DefaultExpressionClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"defaultKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"equalToken",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DefaultKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DefaultKeyword",t:8,rt:$n[3].SyntaxToken,fg:"DefaultKeyword"},fn:"DefaultKeyword"},{a:2,n:"EqualToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EqualToken",t:8,rt:$n[3].SyntaxToken,fg:"EqualToken"},fn:"EqualToken"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<DefaultKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DefaultKeyword"},{a:1,backing:!0,n:"<EqualToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EqualToken"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesOnClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"onKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OnKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OnKeyword",t:8,rt:$n[3].SyntaxToken,fg:"OnKeyword"},fn:"OnKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OnKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OnKeyword"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesFromClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"fromKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{a:2,n:"FromKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_FromKeyword",t:8,rt:$n[3].SyntaxToken,fg:"FromKeyword"},fn:"FromKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<FromKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"FromKeyword"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesToClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"toKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ToKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ToKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ToKeyword"},fn:"ToKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<ToKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ToKeyword"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesStepClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"stepKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"StepKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_StepKeyword",t:8,rt:$n[3].SyntaxToken,fg:"StepKeyword"},fn:"StepKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<StepKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"StepKeyword"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesRangeClause",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesInRangeClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].ExpressionList,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"inKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"rangeKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"arguments",pt:$n[3].ExpressionList,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"Arguments",t:16,rt:$n[3].ExpressionList,g:{a:2,n:"get_Arguments",t:8,rt:$n[3].ExpressionList,fg:"Arguments"},fn:"Arguments"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"InKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_InKeyword",t:8,rt:$n[3].SyntaxToken,fg:"InKeyword"},fn:"InKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"RangeKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_RangeKeyword",t:8,rt:$n[3].SyntaxToken,fg:"RangeKeyword"},fn:"RangeKeyword"},{a:1,backing:!0,n:"<Arguments>k__BackingField",t:4,rt:$n[3].ExpressionList,sn:"Arguments"},{a:1,backing:!0,n:"<InKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"InKeyword"},{a:1,backing:!0,n:"<RangeKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"RangeKeyword"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesFromToStepClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].MakeSeriesFromClause,$n[3].MakeSeriesToClause,$n[3].MakeSeriesStepClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"makeSeriesFromClause",pt:$n[3].MakeSeriesFromClause,ps:0},{n:"makeSeriesToClause",pt:$n[3].MakeSeriesToClause,ps:1},{n:"makeSeriesStepClause",pt:$n[3].MakeSeriesStepClause,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"MakeSeriesFromClause",t:16,rt:$n[3].MakeSeriesFromClause,g:{a:2,n:"get_MakeSeriesFromClause",t:8,rt:$n[3].MakeSeriesFromClause,fg:"MakeSeriesFromClause"},fn:"MakeSeriesFromClause"},{a:2,n:"MakeSeriesStepClause",t:16,rt:$n[3].MakeSeriesStepClause,g:{a:2,n:"get_MakeSeriesStepClause",t:8,rt:$n[3].MakeSeriesStepClause,fg:"MakeSeriesStepClause"},fn:"MakeSeriesStepClause"},{a:2,n:"MakeSeriesToClause",t:16,rt:$n[3].MakeSeriesToClause,g:{a:2,n:"get_MakeSeriesToClause",t:8,rt:$n[3].MakeSeriesToClause,fg:"MakeSeriesToClause"},fn:"MakeSeriesToClause"},{a:1,backing:!0,n:"<MakeSeriesFromClause>k__BackingField",t:4,rt:$n[3].MakeSeriesFromClause,sn:"MakeSeriesFromClause"},{a:1,backing:!0,n:"<MakeSeriesStepClause>k__BackingField",t:4,rt:$n[3].MakeSeriesStepClause,sn:"MakeSeriesStepClause"},{a:1,backing:!0,n:"<MakeSeriesToClause>k__BackingField",t:4,rt:$n[3].MakeSeriesToClause,sn:"MakeSeriesToClause"}]}},$n);$m("Kusto.Language.Syntax.MakeSeriesByClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"byKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"}]}},$n);$m("Kusto.Language.Syntax.MvExpandOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),$n[3].MvExpandRowLimitClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"mvExpandKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),ps:2},{n:"rowLimitClause",pt:$n[3].MvExpandRowLimitClause,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"MvExpandKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_MvExpandKeyword",t:8,rt:$n[3].SyntaxToken,fg:"MvExpandKeyword"},fn:"MvExpandKeyword"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"RowLimitClause",t:16,rt:$n[3].MvExpandRowLimitClause,g:{a:2,n:"get_RowLimitClause",t:8,rt:$n[3].MvExpandRowLimitClause,fg:"RowLimitClause"},fn:"RowLimitClause"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),sn:"Expressions"},{a:1,backing:!0,n:"<MvExpandKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"MvExpandKeyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<RowLimitClause>k__BackingField",t:4,rt:$n[3].MvExpandRowLimitClause,sn:"RowLimitClause"}]}},$n);$m("Kusto.Language.Syntax.MvExpandExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Expression,$n[3].ToTypeOfClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"toTypeOf",pt:$n[3].ToTypeOfClause,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ToTypeOf",t:16,rt:$n[3].ToTypeOfClause,g:{a:2,n:"get_ToTypeOf",t:8,rt:$n[3].ToTypeOfClause,fg:"ToTypeOf"},fn:"ToTypeOf"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<ToTypeOf>k__BackingField",t:4,rt:$n[3].ToTypeOfClause,sn:"ToTypeOf"}]}},$n);$m("Kusto.Language.Syntax.MvExpandRowLimitClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"limitKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"rowLimit",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"LimitKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_LimitKeyword",t:8,rt:$n[3].SyntaxToken,fg:"LimitKeyword"},fn:"LimitKeyword"},{a:2,n:"RowLimit",t:16,rt:$n[3].Expression,g:{a:2,n:"get_RowLimit",t:8,rt:$n[3].Expression,fg:"RowLimit"},fn:"RowLimit"},{a:1,backing:!0,n:"<LimitKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"LimitKeyword"},{a:1,backing:!0,n:"<RowLimit>k__BackingField",t:4,rt:$n[3].Expression,sn:"RowLimit"}]}},$n);$m("Kusto.Language.Syntax.MvApplyOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),$n[3].MvApplyRowLimitClause,$n[3].MvApplyContextIdClause,$n[3].SyntaxToken,$n[3].MvApplySubqueryExpression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"mvApplyKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),ps:2},{n:"rowLimitClause",pt:$n[3].MvApplyRowLimitClause,ps:3},{n:"contextIdClause",pt:$n[3].MvApplyContextIdClause,ps:4},{n:"onKeyword",pt:$n[3].SyntaxToken,ps:5},{n:"subquery",pt:$n[3].MvApplySubqueryExpression,ps:6},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:7}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"ContextIdClause",t:16,rt:$n[3].MvApplyContextIdClause,g:{a:2,n:"get_ContextIdClause",t:8,rt:$n[3].MvApplyContextIdClause,fg:"ContextIdClause"},fn:"ContextIdClause"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"MvApplyKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_MvApplyKeyword",t:8,rt:$n[3].SyntaxToken,fg:"MvApplyKeyword"},fn:"MvApplyKeyword"},{a:2,n:"OnKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OnKeyword",t:8,rt:$n[3].SyntaxToken,fg:"OnKeyword"},fn:"OnKeyword"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"RowLimitClause",t:16,rt:$n[3].MvApplyRowLimitClause,g:{a:2,n:"get_RowLimitClause",t:8,rt:$n[3].MvApplyRowLimitClause,fg:"RowLimitClause"},fn:"RowLimitClause"},{a:2,n:"Subquery",t:16,rt:$n[3].MvApplySubqueryExpression,g:{a:2,n:"get_Subquery",t:8,rt:$n[3].MvApplySubqueryExpression,fg:"Subquery"},fn:"Subquery"},{a:1,backing:!0,n:"<ContextIdClause>k__BackingField",t:4,rt:$n[3].MvApplyContextIdClause,sn:"ContextIdClause"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),sn:"Expressions"},{a:1,backing:!0,n:"<MvApplyKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"MvApplyKeyword"},{a:1,backing:!0,n:"<OnKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OnKeyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<RowLimitClause>k__BackingField",t:4,rt:$n[3].MvApplyRowLimitClause,sn:"RowLimitClause"},{a:1,backing:!0,n:"<Subquery>k__BackingField",t:4,rt:$n[3].MvApplySubqueryExpression,sn:"Subquery"}]}},$n);$m("Kusto.Language.Syntax.MvApplyExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Expression,$n[3].ToTypeOfClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"toTypeOf",pt:$n[3].ToTypeOfClause,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ToTypeOf",t:16,rt:$n[3].ToTypeOfClause,g:{a:2,n:"get_ToTypeOf",t:8,rt:$n[3].ToTypeOfClause,fg:"ToTypeOf"},fn:"ToTypeOf"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<ToTypeOf>k__BackingField",t:4,rt:$n[3].ToTypeOfClause,sn:"ToTypeOf"}]}},$n);$m("Kusto.Language.Syntax.MvApplyRowLimitClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"limitKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"rowLimit",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"LimitKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_LimitKeyword",t:8,rt:$n[3].SyntaxToken,fg:"LimitKeyword"},fn:"LimitKeyword"},{a:2,n:"RowLimit",t:16,rt:$n[3].Expression,g:{a:2,n:"get_RowLimit",t:8,rt:$n[3].Expression,fg:"RowLimit"},fn:"RowLimit"},{a:1,backing:!0,n:"<LimitKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"LimitKeyword"},{a:1,backing:!0,n:"<RowLimit>k__BackingField",t:4,rt:$n[3].Expression,sn:"RowLimit"}]}},$n);$m("Kusto.Language.Syntax.MvApplyContextIdClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"idKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"id",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Id",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Id",t:8,rt:$n[3].Expression,fg:"Id"},fn:"Id"},{a:2,n:"IdKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_IdKeyword",t:8,rt:$n[3].SyntaxToken,fg:"IdKeyword"},fn:"IdKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Id>k__BackingField",t:4,rt:$n[3].Expression,sn:"Id"},{a:1,backing:!0,n:"<IdKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"IdKeyword"}]}},$n);$m("Kusto.Language.Syntax.MvApplySubqueryExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openParen",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"closeParen",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.ToTypeOfClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].TypeOfLiteralExpression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"toKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"typeOf",pt:$n[3].TypeOfLiteralExpression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ToKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ToKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ToKeyword"},fn:"ToKeyword"},{a:2,n:"TypeOf",t:16,rt:$n[3].TypeOfLiteralExpression,g:{a:2,n:"get_TypeOf",t:8,rt:$n[3].TypeOfLiteralExpression,fg:"TypeOf"},fn:"TypeOf"},{a:1,backing:!0,n:"<ToKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ToKeyword"},{a:1,backing:!0,n:"<TypeOf>k__BackingField",t:4,rt:$n[3].TypeOfLiteralExpression,sn:"TypeOf"}]}},$n);$m("Kusto.Language.Syntax.EvaluateSchemaClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SchemaTypeExpression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"colonKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"schema",pt:$n[3].SchemaTypeExpression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"ColonKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ColonKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ColonKeyword"},fn:"ColonKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Schema",t:16,rt:$n[3].SchemaTypeExpression,g:{a:2,n:"get_Schema",t:8,rt:$n[3].SchemaTypeExpression,fg:"Schema"},fn:"Schema"},{a:1,backing:!0,n:"<ColonKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ColonKeyword"},{a:1,backing:!0,n:"<Schema>k__BackingField",t:4,rt:$n[3].SchemaTypeExpression,sn:"Schema"}]}},$n);$m("Kusto.Language.Syntax.EvaluateOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].FunctionCallExpression,$n[3].EvaluateSchemaClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"evaluateKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"functionCall",pt:$n[3].FunctionCallExpression,ps:2},{n:"schema",pt:$n[3].EvaluateSchemaClause,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"EvaluateKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EvaluateKeyword",t:8,rt:$n[3].SyntaxToken,fg:"EvaluateKeyword"},fn:"EvaluateKeyword"},{a:2,n:"FunctionCall",t:16,rt:$n[3].FunctionCallExpression,g:{a:2,n:"get_FunctionCall",t:8,rt:$n[3].FunctionCallExpression,fg:"FunctionCall"},fn:"FunctionCall"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"Schema",t:16,rt:$n[3].EvaluateSchemaClause,g:{a:2,n:"get_Schema",t:8,rt:$n[3].EvaluateSchemaClause,fg:"Schema"},fn:"Schema"},{a:1,backing:!0,n:"<EvaluateKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EvaluateKeyword"},{a:1,backing:!0,n:"<FunctionCall>k__BackingField",t:4,rt:$n[3].FunctionCallExpression,sn:"FunctionCall"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<Schema>k__BackingField",t:4,rt:$n[3].EvaluateSchemaClause,sn:"Schema"}]}},$n);$m("Kusto.Language.Syntax.ParseOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].Expression,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"parseKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"withKeyword",pt:$n[3].SyntaxToken,ps:3},{n:"patterns",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"ParseKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ParseKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ParseKeyword"},fn:"ParseKeyword"},{a:2,n:"Patterns",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),g:{a:2,n:"get_Patterns",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),fg:"Patterns"},fn:"Patterns"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<ParseKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ParseKeyword"},{a:1,backing:!0,n:"<Patterns>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),sn:"Patterns"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.ParseWhereOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].Expression,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"parseKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"withKeyword",pt:$n[3].SyntaxToken,ps:3},{n:"patterns",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"ParseKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ParseKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ParseKeyword"},fn:"ParseKeyword"},{a:2,n:"Patterns",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),g:{a:2,n:"get_Patterns",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),fg:"Patterns"},fn:"Patterns"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<ParseKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ParseKeyword"},{a:1,backing:!0,n:"<Patterns>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),sn:"Patterns"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.PartitionOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxToken,$n[3].Expression,$n[3].PartitionOperand,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"partitionKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"byKeyword",pt:$n[3].SyntaxToken,ps:2},{n:"byExpression",pt:$n[3].Expression,ps:3},{n:"operand",pt:$n[3].PartitionOperand,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ByExpression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_ByExpression",t:8,rt:$n[3].Expression,fg:"ByExpression"},fn:"ByExpression"},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Operand",t:16,rt:$n[3].PartitionOperand,g:{a:2,n:"get_Operand",t:8,rt:$n[3].PartitionOperand,fg:"Operand"},fn:"Operand"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"PartitionKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_PartitionKeyword",t:8,rt:$n[3].SyntaxToken,fg:"PartitionKeyword"},fn:"PartitionKeyword"},{a:1,backing:!0,n:"<ByExpression>k__BackingField",t:4,rt:$n[3].Expression,sn:"ByExpression"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Operand>k__BackingField",t:4,rt:$n[3].PartitionOperand,sn:"Operand"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<PartitionKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"PartitionKeyword"}]}},$n);$m("Kusto.Language.Syntax.PartitionOperand",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.PartitionQuery",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openBrace",pt:$n[3].SyntaxToken,ps:0},{n:"query",pt:$n[3].Expression,ps:1},{n:"closeBrace",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBrace",t:8,rt:$n[3].SyntaxToken,fg:"CloseBrace"},fn:"CloseBrace"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBrace",t:8,rt:$n[3].SyntaxToken,fg:"OpenBrace"},fn:"OpenBrace"},{a:2,n:"Query",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Query",t:8,rt:$n[3].Expression,fg:"Query"},fn:"Query"},{a:1,backing:!0,n:"<CloseBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBrace"},{a:1,backing:!0,n:"<OpenBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBrace"},{a:1,backing:!0,n:"<Query>k__BackingField",t:4,rt:$n[3].Expression,sn:"Query"}]}},$n);$m("Kusto.Language.Syntax.PartitionScope",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"inKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{a:2,n:"InKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_InKeyword",t:8,rt:$n[3].SyntaxToken,fg:"InKeyword"},fn:"InKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<InKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"InKeyword"}]}},$n);$m("Kusto.Language.Syntax.PartitionSubquery",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].PartitionScope,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"scope",pt:$n[3].PartitionScope,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"subquery",pt:$n[3].Expression,ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"Scope",t:16,rt:$n[3].PartitionScope,g:{a:2,n:"get_Scope",t:8,rt:$n[3].PartitionScope,fg:"Scope"},fn:"Scope"},{a:2,n:"Subquery",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Subquery",t:8,rt:$n[3].Expression,fg:"Subquery"},fn:"Subquery"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<Scope>k__BackingField",t:4,rt:$n[3].PartitionScope,sn:"Scope"},{a:1,backing:!0,n:"<Subquery>k__BackingField",t:4,rt:$n[3].Expression,sn:"Subquery"}]}},$n);$m("Kusto.Language.Syntax.ProjectOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"projectKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ProjectKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ProjectKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ProjectKeyword"},fn:"ProjectKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<ProjectKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ProjectKeyword"}]}},$n);$m("Kusto.Language.Syntax.ProjectAwayOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"projectAwayKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ProjectAwayKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ProjectAwayKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ProjectAwayKeyword"},fn:"ProjectAwayKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<ProjectAwayKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ProjectAwayKeyword"}]}},$n);$m("Kusto.Language.Syntax.ProjectKeepOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"projectKeepKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ProjectKeepKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ProjectKeepKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ProjectKeepKeyword"},fn:"ProjectKeepKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<ProjectKeepKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ProjectKeepKeyword"}]}},$n);$m("Kusto.Language.Syntax.ProjectRenameOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"projectRenameKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ProjectRenameKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ProjectRenameKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ProjectRenameKeyword"},fn:"ProjectRenameKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<ProjectRenameKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ProjectRenameKeyword"}]}},$n);$m("Kusto.Language.Syntax.ProjectReorderOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"projectReorderKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ProjectReorderKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ProjectReorderKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ProjectReorderKeyword"},fn:"ProjectReorderKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<ProjectReorderKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ProjectReorderKeyword"}]}},$n);$m("Kusto.Language.Syntax.SampleOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"sampleKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"SampleKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_SampleKeyword",t:8,rt:$n[3].SyntaxToken,fg:"SampleKeyword"},fn:"SampleKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<SampleKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"SampleKeyword"}]}},$n);$m("Kusto.Language.Syntax.SampleDistinctOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].Expression,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"sampleDistinctKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"ofKeyword",pt:$n[3].SyntaxToken,ps:3},{n:"ofExpression",pt:$n[3].Expression,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OfExpression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_OfExpression",t:8,rt:$n[3].Expression,fg:"OfExpression"},fn:"OfExpression"},{a:2,n:"OfKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OfKeyword",t:8,rt:$n[3].SyntaxToken,fg:"OfKeyword"},fn:"OfKeyword"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"SampleDistinctKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_SampleDistinctKeyword",t:8,rt:$n[3].SyntaxToken,fg:"SampleDistinctKeyword"},fn:"SampleDistinctKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OfExpression>k__BackingField",t:4,rt:$n[3].Expression,sn:"OfExpression"},{a:1,backing:!0,n:"<OfKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OfKeyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<SampleDistinctKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"SampleDistinctKeyword"}]}},$n);$m("Kusto.Language.Syntax.ReduceByOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxToken,$n[3].Expression,$n[3].ReduceByWithClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"reduceKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"byKeyword",pt:$n[3].SyntaxToken,ps:2},{n:"expression",pt:$n[3].Expression,ps:3},{n:"with",pt:$n[3].ReduceByWithClause,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"ReduceKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ReduceKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ReduceKeyword"},fn:"ReduceKeyword"},{a:2,n:"With",t:16,rt:$n[3].ReduceByWithClause,g:{a:2,n:"get_With",t:8,rt:$n[3].ReduceByWithClause,fg:"With"},fn:"With"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<ReduceKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ReduceKeyword"},{a:1,backing:!0,n:"<With>k__BackingField",t:4,rt:$n[3].ReduceByWithClause,sn:"With"}]}},$n);$m("Kusto.Language.Syntax.ReduceByWithClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"withKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),fg:"Parameters"},fn:"Parameters"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),sn:"Parameters"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.SummarizeOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].SummarizeByClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"summarizeKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"aggregates",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:2},{n:"byClause",pt:$n[3].SummarizeByClause,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Aggregates",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Aggregates",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Aggregates"},fn:"Aggregates"},{a:2,n:"ByClause",t:16,rt:$n[3].SummarizeByClause,g:{a:2,n:"get_ByClause",t:8,rt:$n[3].SummarizeByClause,fg:"ByClause"},fn:"ByClause"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"SummarizeKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_SummarizeKeyword",t:8,rt:$n[3].SyntaxToken,fg:"SummarizeKeyword"},fn:"SummarizeKeyword"},{a:1,backing:!0,n:"<Aggregates>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Aggregates"},{a:1,backing:!0,n:"<ByClause>k__BackingField",t:4,rt:$n[3].SummarizeByClause,sn:"ByClause"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<SummarizeKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"SummarizeKeyword"}]}},$n);$m("Kusto.Language.Syntax.SummarizeByClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"byKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"}]}},$n);$m("Kusto.Language.Syntax.DistinctOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"distinctKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DistinctKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DistinctKeyword",t:8,rt:$n[3].SyntaxToken,fg:"DistinctKeyword"},fn:"DistinctKeyword"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:1,backing:!0,n:"<DistinctKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DistinctKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"}]}},$n);$m("Kusto.Language.Syntax.TakeOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"keyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{a:2,n:"Keyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Keyword",t:8,rt:$n[3].SyntaxToken,fg:"Keyword"},fn:"Keyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Keyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Keyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"}]}},$n);$m("Kusto.Language.Syntax.SortOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"keyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"byKeyword",pt:$n[3].SyntaxToken,ps:2},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{a:2,n:"Keyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Keyword",t:8,rt:$n[3].SyntaxToken,fg:"Keyword"},fn:"Keyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<Keyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Keyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"}]}},$n);$m("Kusto.Language.Syntax.OrderedExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Expression,$n[3].OrderingClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"ordering",pt:$n[3].OrderingClause,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Ordering",t:16,rt:$n[3].OrderingClause,g:{a:2,n:"get_Ordering",t:8,rt:$n[3].OrderingClause,fg:"Ordering"},fn:"Ordering"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Ordering>k__BackingField",t:4,rt:$n[3].OrderingClause,sn:"Ordering"}]}},$n);$m("Kusto.Language.Syntax.OrderingClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].OrderingNullsClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"ascOrDescKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"nullsClause",pt:$n[3].OrderingNullsClause,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"AscOrDescKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_AscOrDescKeyword",t:8,rt:$n[3].SyntaxToken,fg:"AscOrDescKeyword"},fn:"AscOrDescKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"NullsClause",t:16,rt:$n[3].OrderingNullsClause,g:{a:2,n:"get_NullsClause",t:8,rt:$n[3].OrderingNullsClause,fg:"NullsClause"},fn:"NullsClause"},{a:1,backing:!0,n:"<AscOrDescKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"AscOrDescKeyword"},{a:1,backing:!0,n:"<NullsClause>k__BackingField",t:4,rt:$n[3].OrderingNullsClause,sn:"NullsClause"}]}},$n);$m("Kusto.Language.Syntax.OrderingNullsClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"nullsKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"firstOrLastKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"FirstOrLastKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_FirstOrLastKeyword",t:8,rt:$n[3].SyntaxToken,fg:"FirstOrLastKeyword"},fn:"FirstOrLastKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"NullsKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_NullsKeyword",t:8,rt:$n[3].SyntaxToken,fg:"NullsKeyword"},fn:"NullsKeyword"},{a:1,backing:!0,n:"<FirstOrLastKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"FirstOrLastKeyword"},{a:1,backing:!0,n:"<NullsKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"NullsKeyword"}]}},$n);$m("Kusto.Language.Syntax.TopHittersOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[3].Expression,$n[3].TopHittersByClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"topHittersKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"ofKeyword",pt:$n[3].SyntaxToken,ps:2},{n:"ofExpression",pt:$n[3].Expression,ps:3},{n:"byClause",pt:$n[3].TopHittersByClause,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"ByClause",t:16,rt:$n[3].TopHittersByClause,g:{a:2,n:"get_ByClause",t:8,rt:$n[3].TopHittersByClause,fg:"ByClause"},fn:"ByClause"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OfExpression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_OfExpression",t:8,rt:$n[3].Expression,fg:"OfExpression"},fn:"OfExpression"},{a:2,n:"OfKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OfKeyword",t:8,rt:$n[3].SyntaxToken,fg:"OfKeyword"},fn:"OfKeyword"},{a:2,n:"TopHittersKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_TopHittersKeyword",t:8,rt:$n[3].SyntaxToken,fg:"TopHittersKeyword"},fn:"TopHittersKeyword"},{a:1,backing:!0,n:"<ByClause>k__BackingField",t:4,rt:$n[3].TopHittersByClause,sn:"ByClause"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OfExpression>k__BackingField",t:4,rt:$n[3].Expression,sn:"OfExpression"},{a:1,backing:!0,n:"<OfKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OfKeyword"},{a:1,backing:!0,n:"<TopHittersKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"TopHittersKeyword"}]}},$n);$m("Kusto.Language.Syntax.TopHittersByClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"byKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"}]}},$n);$m("Kusto.Language.Syntax.TopOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].Expression,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"topKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"byKeyword",pt:$n[3].SyntaxToken,ps:3},{n:"byExpression",pt:$n[3].Expression,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ByExpression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_ByExpression",t:8,rt:$n[3].Expression,fg:"ByExpression"},fn:"ByExpression"},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"TopKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_TopKeyword",t:8,rt:$n[3].SyntaxToken,fg:"TopKeyword"},fn:"TopKeyword"},{a:1,backing:!0,n:"<ByExpression>k__BackingField",t:4,rt:$n[3].Expression,sn:"ByExpression"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<TopKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"TopKeyword"}]}},$n);$m("Kusto.Language.Syntax.TopNestedOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.TopNestedClause)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"clauses",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.TopNestedClause)),ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Clauses",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.TopNestedClause)),g:{a:2,n:"get_Clauses",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.TopNestedClause)),fg:"Clauses"},fn:"Clauses"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Clauses>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.TopNestedClause)),sn:"Clauses"}]}},$n);$m("Kusto.Language.Syntax.TopNestedClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[3].Expression,$n[3].TopNestedWithOthersClause,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"topNestedKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"ofKeyword",pt:$n[3].SyntaxToken,ps:2},{n:"ofExpression",pt:$n[3].Expression,ps:3},{n:"withOthersClause",pt:$n[3].TopNestedWithOthersClause,ps:4},{n:"byKeyword",pt:$n[3].SyntaxToken,ps:5},{n:"byExpression",pt:$n[3].Expression,ps:6},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:7}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"ByExpression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_ByExpression",t:8,rt:$n[3].Expression,fg:"ByExpression"},fn:"ByExpression"},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OfExpression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_OfExpression",t:8,rt:$n[3].Expression,fg:"OfExpression"},fn:"OfExpression"},{a:2,n:"OfKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OfKeyword",t:8,rt:$n[3].SyntaxToken,fg:"OfKeyword"},fn:"OfKeyword"},{a:2,n:"TopNestedKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_TopNestedKeyword",t:8,rt:$n[3].SyntaxToken,fg:"TopNestedKeyword"},fn:"TopNestedKeyword"},{a:2,n:"WithOthersClause",t:16,rt:$n[3].TopNestedWithOthersClause,g:{a:2,n:"get_WithOthersClause",t:8,rt:$n[3].TopNestedWithOthersClause,fg:"WithOthersClause"},fn:"WithOthersClause"},{a:1,backing:!0,n:"<ByExpression>k__BackingField",t:4,rt:$n[3].Expression,sn:"ByExpression"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OfExpression>k__BackingField",t:4,rt:$n[3].Expression,sn:"OfExpression"},{a:1,backing:!0,n:"<OfKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OfKeyword"},{a:1,backing:!0,n:"<TopNestedKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"TopNestedKeyword"},{a:1,backing:!0,n:"<WithOthersClause>k__BackingField",t:4,rt:$n[3].TopNestedWithOthersClause,sn:"WithOthersClause"}]}},$n);$m("Kusto.Language.Syntax.TopNestedWithOthersClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"withKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"othersKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"equal",pt:$n[3].SyntaxToken,ps:2},{n:"expression",pt:$n[3].Expression,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Equal",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Equal",t:8,rt:$n[3].SyntaxToken,fg:"Equal"},fn:"Equal"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OthersKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OthersKeyword",t:8,rt:$n[3].SyntaxToken,fg:"OthersKeyword"},fn:"OthersKeyword"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<Equal>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Equal"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OthersKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OthersKeyword"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.UnionOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"unionKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"UnionKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_UnionKeyword",t:8,rt:$n[3].SyntaxToken,fg:"UnionKeyword"},fn:"UnionKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<UnionKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"UnionKeyword"}]}},$n);$m("Kusto.Language.Syntax.AsOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].NameDeclaration,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"asKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"name",pt:$n[3].NameDeclaration,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"AsKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_AsKeyword",t:8,rt:$n[3].SyntaxToken,fg:"AsKeyword"},fn:"AsKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:1,backing:!0,n:"<AsKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"AsKeyword"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"}]}},$n);$m("Kusto.Language.Syntax.SerializeOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"serializeKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"SerializeKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_SerializeKeyword",t:8,rt:$n[3].SyntaxToken,fg:"SerializeKeyword"},fn:"SerializeKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<SerializeKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"SerializeKeyword"}]}},$n);$m("Kusto.Language.Syntax.InvokeOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"invokeKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"function",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Function",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Function",t:8,rt:$n[3].Expression,fg:"Function"},fn:"Function"},{a:2,n:"InvokeKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_InvokeKeyword",t:8,rt:$n[3].SyntaxToken,fg:"InvokeKeyword"},fn:"InvokeKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Function>k__BackingField",t:4,rt:$n[3].Expression,sn:"Function"},{a:1,backing:!0,n:"<InvokeKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"InvokeKeyword"}]}},$n);$m("Kusto.Language.Syntax.RenderOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].RenderWithClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"renderKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"chartType",pt:$n[3].SyntaxToken,ps:1},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:2},{n:"withClause",pt:$n[3].RenderWithClause,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"ChartType",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ChartType",t:8,rt:$n[3].SyntaxToken,fg:"ChartType"},fn:"ChartType"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"RenderKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_RenderKeyword",t:8,rt:$n[3].SyntaxToken,fg:"RenderKeyword"},fn:"RenderKeyword"},{a:2,n:"WithClause",t:16,rt:$n[3].RenderWithClause,g:{a:2,n:"get_WithClause",t:8,rt:$n[3].RenderWithClause,fg:"WithClause"},fn:"WithClause"},{a:1,backing:!0,n:"<ChartType>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ChartType"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<RenderKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"RenderKeyword"},{a:1,backing:!0,n:"<WithClause>k__BackingField",t:4,rt:$n[3].RenderWithClause,sn:"WithClause"}]}},$n);$m("Kusto.Language.Syntax.NameReferenceList",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameReference)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"names",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameReference)),ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Names",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameReference)),g:{a:2,n:"get_Names",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameReference)),fg:"Names"},fn:"Names"},{a:1,backing:!0,n:"<Names>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameReference)),sn:"Names"}]}},$n);$m("Kusto.Language.Syntax.RenderWithClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"withKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"properties",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"Properties",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),g:{a:2,n:"get_Properties",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),fg:"Properties"},fn:"Properties"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<Properties>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),sn:"Properties"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.PrintOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"printKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"PrintKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_PrintKeyword",t:8,rt:$n[3].SyntaxToken,fg:"PrintKeyword"},fn:"PrintKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<PrintKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"PrintKeyword"}]}},$n);$m("Kusto.Language.Syntax.AliasStatement",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].NameDeclaration,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"aliasKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"databaseKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"name",pt:$n[3].NameDeclaration,ps:2},{n:"equal",pt:$n[3].SyntaxToken,ps:3},{n:"expression",pt:$n[3].Expression,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"AliasKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_AliasKeyword",t:8,rt:$n[3].SyntaxToken,fg:"AliasKeyword"},fn:"AliasKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DatabaseKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DatabaseKeyword",t:8,rt:$n[3].SyntaxToken,fg:"DatabaseKeyword"},fn:"DatabaseKeyword"},{a:2,n:"Equal",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Equal",t:8,rt:$n[3].SyntaxToken,fg:"Equal"},fn:"Equal"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:1,backing:!0,n:"<AliasKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"AliasKeyword"},{a:1,backing:!0,n:"<DatabaseKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DatabaseKeyword"},{a:1,backing:!0,n:"<Equal>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Equal"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.LetStatement",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].NameDeclaration,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"letKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"name",pt:$n[3].NameDeclaration,ps:1},{n:"equal",pt:$n[3].SyntaxToken,ps:2},{n:"expression",pt:$n[3].Expression,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Equal",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Equal",t:8,rt:$n[3].SyntaxToken,fg:"Equal"},fn:"Equal"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"LetKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_LetKeyword",t:8,rt:$n[3].SyntaxToken,fg:"LetKeyword"},fn:"LetKeyword"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:1,backing:!0,n:"<Equal>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Equal"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<LetKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"LetKeyword"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.FunctionDeclaration",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].FunctionParameters,$n[3].FunctionBody,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"viewKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].FunctionParameters,ps:1},{n:"body",pt:$n[3].FunctionBody,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Body",t:16,rt:$n[3].FunctionBody,g:{a:2,n:"get_Body",t:8,rt:$n[3].FunctionBody,fg:"Body"},fn:"Body"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].FunctionParameters,g:{a:2,n:"get_Parameters",t:8,rt:$n[3].FunctionParameters,fg:"Parameters"},fn:"Parameters"},{a:2,n:"ViewKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ViewKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ViewKeyword"},fn:"ViewKeyword"},{a:1,backing:!0,n:"<Body>k__BackingField",t:4,rt:$n[3].FunctionBody,sn:"Body"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].FunctionParameters,sn:"Parameters"},{a:1,backing:!0,n:"<ViewKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ViewKeyword"}]}},$n);$m("Kusto.Language.Syntax.FunctionParameters",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openParen",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),ps:1},{n:"closeParen",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),fg:"Parameters"},fn:"Parameters"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),sn:"Parameters"}]}},$n);$m("Kusto.Language.Syntax.FunctionParameter",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].NameAndTypeDeclaration,$n[3].DefaultValueDeclaration,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"nameAndType",pt:$n[3].NameAndTypeDeclaration,ps:0},{n:"defaultValue",pt:$n[3].DefaultValueDeclaration,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DefaultValue",t:16,rt:$n[3].DefaultValueDeclaration,g:{a:2,n:"get_DefaultValue",t:8,rt:$n[3].DefaultValueDeclaration,fg:"DefaultValue"},fn:"DefaultValue"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"NameAndType",t:16,rt:$n[3].NameAndTypeDeclaration,g:{a:2,n:"get_NameAndType",t:8,rt:$n[3].NameAndTypeDeclaration,fg:"NameAndType"},fn:"NameAndType"},{a:1,backing:!0,n:"<DefaultValue>k__BackingField",t:4,rt:$n[3].DefaultValueDeclaration,sn:"DefaultValue"},{a:1,backing:!0,n:"<NameAndType>k__BackingField",t:4,rt:$n[3].NameAndTypeDeclaration,sn:"NameAndType"}]}},$n);$m("Kusto.Language.Syntax.DefaultValueDeclaration",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"equal",pt:$n[3].SyntaxToken,ps:0},{n:"value",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Equal",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Equal",t:8,rt:$n[3].SyntaxToken,fg:"Equal"},fn:"Equal"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Value",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Value",t:8,rt:$n[3].Expression,fg:"Value"},fn:"Value"},{a:1,backing:!0,n:"<Equal>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Equal"},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:$n[3].Expression,sn:"Value"}]}},$n);$m("Kusto.Language.Syntax.FunctionBody",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),$n[3].Expression,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openBrace",pt:$n[3].SyntaxToken,ps:0},{n:"statements",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"semicolon",pt:$n[3].SyntaxToken,ps:3},{n:"closeBrace",pt:$n[3].SyntaxToken,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBrace",t:8,rt:$n[3].SyntaxToken,fg:"CloseBrace"},fn:"CloseBrace"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBrace",t:8,rt:$n[3].SyntaxToken,fg:"OpenBrace"},fn:"OpenBrace"},{a:2,n:"Semicolon",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Semicolon",t:8,rt:$n[3].SyntaxToken,fg:"Semicolon"},fn:"Semicolon"},{a:2,n:"Statements",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),g:{a:2,n:"get_Statements",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),fg:"Statements"},fn:"Statements"},{a:1,backing:!0,n:"<CloseBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBrace"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<OpenBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBrace"},{a:1,backing:!0,n:"<Semicolon>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Semicolon"},{a:1,backing:!0,n:"<Statements>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),sn:"Statements"}]}},$n);$m("Kusto.Language.Syntax.SchemaTypeExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openParen",pt:$n[3].SyntaxToken,ps:0},{n:"columns",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"closeParen",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Columns",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Columns",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Columns"},fn:"Columns"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Columns>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Columns"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.ExpressionStatement",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"}]}},$n);$m("Kusto.Language.Syntax.MaterializeExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"materializeKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"MaterializeKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_MaterializeKeyword",t:8,rt:$n[3].SyntaxToken,fg:"MaterializeKeyword"},fn:"MaterializeKeyword"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<MaterializeKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"MaterializeKeyword"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.SetOptionStatement",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].NameDeclaration,$n[3].OptionValueClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"setKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"name",pt:$n[3].NameDeclaration,ps:1},{n:"valueClause",pt:$n[3].OptionValueClause,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:2,n:"SetKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_SetKeyword",t:8,rt:$n[3].SyntaxToken,fg:"SetKeyword"},fn:"SetKeyword"},{a:2,n:"ValueClause",t:16,rt:$n[3].OptionValueClause,g:{a:2,n:"get_ValueClause",t:8,rt:$n[3].OptionValueClause,fg:"ValueClause"},fn:"ValueClause"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"},{a:1,backing:!0,n:"<SetKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"SetKeyword"},{a:1,backing:!0,n:"<ValueClause>k__BackingField",t:4,rt:$n[3].OptionValueClause,sn:"ValueClause"}]}},$n);$m("Kusto.Language.Syntax.OptionValueClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"equal",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Equal",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Equal",t:8,rt:$n[3].SyntaxToken,fg:"Equal"},fn:"Equal"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<Equal>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Equal"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"}]}},$n);$m("Kusto.Language.Syntax.QueryParametersStatement",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"declareKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"queryParametersKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"openParen",pt:$n[3].SyntaxToken,ps:2},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),ps:3},{n:"closeParen",pt:$n[3].SyntaxToken,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"DeclareKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DeclareKeyword",t:8,rt:$n[3].SyntaxToken,fg:"DeclareKeyword"},fn:"DeclareKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),fg:"Parameters"},fn:"Parameters"},{a:2,n:"QueryParametersKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_QueryParametersKeyword",t:8,rt:$n[3].SyntaxToken,fg:"QueryParametersKeyword"},fn:"QueryParametersKeyword"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<DeclareKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DeclareKeyword"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),sn:"Parameters"},{a:1,backing:!0,n:"<QueryParametersKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"QueryParametersKeyword"}]}},$n);$m("Kusto.Language.Syntax.RestrictStatement",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"restrictKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"accessKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"toKeyword",pt:$n[3].SyntaxToken,ps:2},{n:"openParen",pt:$n[3].SyntaxToken,ps:3},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:4},{n:"closeParen",pt:$n[3].SyntaxToken,ps:5},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:6}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"AccessKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_AccessKeyword",t:8,rt:$n[3].SyntaxToken,fg:"AccessKeyword"},fn:"AccessKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"RestrictKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_RestrictKeyword",t:8,rt:$n[3].SyntaxToken,fg:"RestrictKeyword"},fn:"RestrictKeyword"},{a:2,n:"ToKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ToKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ToKeyword"},fn:"ToKeyword"},{a:1,backing:!0,n:"<AccessKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"AccessKeyword"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<RestrictKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"RestrictKeyword"},{a:1,backing:!0,n:"<ToKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ToKeyword"}]}},$n);$m("Kusto.Language.Syntax.PatternStatement",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].NameDeclaration,$n[3].PatternDeclaration,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"declareKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"patternKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"name",pt:$n[3].NameDeclaration,ps:2},{n:"pattern",pt:$n[3].PatternDeclaration,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DeclareKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DeclareKeyword",t:8,rt:$n[3].SyntaxToken,fg:"DeclareKeyword"},fn:"DeclareKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:2,n:"Pattern",t:16,rt:$n[3].PatternDeclaration,g:{a:2,n:"get_Pattern",t:8,rt:$n[3].PatternDeclaration,fg:"Pattern"},fn:"Pattern"},{a:2,n:"PatternKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_PatternKeyword",t:8,rt:$n[3].SyntaxToken,fg:"PatternKeyword"},fn:"PatternKeyword"},{a:1,backing:!0,n:"<DeclareKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DeclareKeyword"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"},{a:1,backing:!0,n:"<Pattern>k__BackingField",t:4,rt:$n[3].PatternDeclaration,sn:"Pattern"},{a:1,backing:!0,n:"<PatternKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"PatternKeyword"}]}},$n);$m("Kusto.Language.Syntax.PatternDeclaration",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),$n[3].SyntaxToken,$n[3].PatternPathParameter,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.PatternMatch),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"equalToken",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"pathParameter",pt:$n[3].PatternPathParameter,ps:4},{n:"openBrace",pt:$n[3].SyntaxToken,ps:5},{n:"patterns",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.PatternMatch),ps:6},{n:"closeBrace",pt:$n[3].SyntaxToken,ps:7},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:8}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBrace",t:8,rt:$n[3].SyntaxToken,fg:"CloseBrace"},fn:"CloseBrace"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"EqualToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EqualToken",t:8,rt:$n[3].SyntaxToken,fg:"EqualToken"},fn:"EqualToken"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBrace",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBrace",t:8,rt:$n[3].SyntaxToken,fg:"OpenBrace"},fn:"OpenBrace"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),fg:"Parameters"},fn:"Parameters"},{a:2,n:"PathParameter",t:16,rt:$n[3].PatternPathParameter,g:{a:2,n:"get_PathParameter",t:8,rt:$n[3].PatternPathParameter,fg:"PathParameter"},fn:"PathParameter"},{a:2,n:"Patterns",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.PatternMatch),g:{a:2,n:"get_Patterns",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.PatternMatch),fg:"Patterns"},fn:"Patterns"},{a:1,backing:!0,n:"<CloseBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBrace"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<EqualToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EqualToken"},{a:1,backing:!0,n:"<OpenBrace>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBrace"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),sn:"Parameters"},{a:1,backing:!0,n:"<PathParameter>k__BackingField",t:4,rt:$n[3].PatternPathParameter,sn:"PathParameter"},{a:1,backing:!0,n:"<Patterns>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.PatternMatch),sn:"Patterns"}]}},$n);$m("Kusto.Language.Syntax.PatternPathParameter",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].NameAndTypeDeclaration,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"openBracket",pt:$n[3].SyntaxToken,ps:0},{n:"parameter",pt:$n[3].NameAndTypeDeclaration,ps:1},{n:"closeBracket",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBracket",t:8,rt:$n[3].SyntaxToken,fg:"CloseBracket"},fn:"CloseBracket"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBracket",t:8,rt:$n[3].SyntaxToken,fg:"OpenBracket"},fn:"OpenBracket"},{a:2,n:"Parameter",t:16,rt:$n[3].NameAndTypeDeclaration,g:{a:2,n:"get_Parameter",t:8,rt:$n[3].NameAndTypeDeclaration,fg:"Parameter"},fn:"Parameter"},{a:1,backing:!0,n:"<CloseBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBracket"},{a:1,backing:!0,n:"<OpenBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBracket"},{a:1,backing:!0,n:"<Parameter>k__BackingField",t:4,rt:$n[3].NameAndTypeDeclaration,sn:"Parameter"}]}},$n);$m("Kusto.Language.Syntax.PatternMatch",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].ExpressionList,$n[3].PatternPathValue,$n[3].SyntaxToken,$n[3].FunctionBody,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"parameterValues",pt:$n[3].ExpressionList,ps:0},{n:"pathValue",pt:$n[3].PatternPathValue,ps:1},{n:"equalToken",pt:$n[3].SyntaxToken,ps:2},{n:"body",pt:$n[3].FunctionBody,ps:3},{n:"semicolonToken",pt:$n[3].SyntaxToken,ps:4},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:5}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Body",t:16,rt:$n[3].FunctionBody,g:{a:2,n:"get_Body",t:8,rt:$n[3].FunctionBody,fg:"Body"},fn:"Body"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"EqualToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EqualToken",t:8,rt:$n[3].SyntaxToken,fg:"EqualToken"},fn:"EqualToken"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"ParameterValues",t:16,rt:$n[3].ExpressionList,g:{a:2,n:"get_ParameterValues",t:8,rt:$n[3].ExpressionList,fg:"ParameterValues"},fn:"ParameterValues"},{a:2,n:"PathValue",t:16,rt:$n[3].PatternPathValue,g:{a:2,n:"get_PathValue",t:8,rt:$n[3].PatternPathValue,fg:"PathValue"},fn:"PathValue"},{a:2,n:"SemicolonToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_SemicolonToken",t:8,rt:$n[3].SyntaxToken,fg:"SemicolonToken"},fn:"SemicolonToken"},{a:1,backing:!0,n:"<Body>k__BackingField",t:4,rt:$n[3].FunctionBody,sn:"Body"},{a:1,backing:!0,n:"<EqualToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EqualToken"},{a:1,backing:!0,n:"<ParameterValues>k__BackingField",t:4,rt:$n[3].ExpressionList,sn:"ParameterValues"},{a:1,backing:!0,n:"<PathValue>k__BackingField",t:4,rt:$n[3].PatternPathValue,sn:"PathValue"},{a:1,backing:!0,n:"<SemicolonToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"SemicolonToken"}]}},$n);$m("Kusto.Language.Syntax.PatternPathValue",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].Expression,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"dotToken",pt:$n[3].SyntaxToken,ps:0},{n:"openBracket",pt:$n[3].SyntaxToken,ps:1},{n:"value",pt:$n[3].Expression,ps:2},{n:"closeBracket",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBracket",t:8,rt:$n[3].SyntaxToken,fg:"CloseBracket"},fn:"CloseBracket"},{a:2,n:"DotToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DotToken",t:8,rt:$n[3].SyntaxToken,fg:"DotToken"},fn:"DotToken"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBracket",t:8,rt:$n[3].SyntaxToken,fg:"OpenBracket"},fn:"OpenBracket"},{a:2,n:"Value",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Value",t:8,rt:$n[3].Expression,fg:"Value"},fn:"Value"},{a:1,backing:!0,n:"<CloseBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBracket"},{a:1,backing:!0,n:"<DotToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DotToken"},{a:1,backing:!0,n:"<OpenBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBracket"},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:$n[3].Expression,sn:"Value"}]}},$n);$m("Kusto.Language.Syntax.DataScopeExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].Expression,$n[3].DataScopeClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"dataScopeClause",pt:$n[3].DataScopeClause,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DataScopeClause",t:16,rt:$n[3].DataScopeClause,g:{a:2,n:"get_DataScopeClause",t:8,rt:$n[3].DataScopeClause,fg:"DataScopeClause"},fn:"DataScopeClause"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<DataScopeClause>k__BackingField",t:4,rt:$n[3].DataScopeClause,sn:"DataScopeClause"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"}]}},$n);$m("Kusto.Language.Syntax.DataTableExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SchemaTypeExpression,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"dataTableKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"schema",pt:$n[3].SchemaTypeExpression,ps:2},{n:"openBracket",pt:$n[3].SyntaxToken,ps:3},{n:"values",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:4},{n:"closeBracket",pt:$n[3].SyntaxToken,ps:5},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:6}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBracket",t:8,rt:$n[3].SyntaxToken,fg:"CloseBracket"},fn:"CloseBracket"},{a:2,n:"DataTableKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DataTableKeyword",t:8,rt:$n[3].SyntaxToken,fg:"DataTableKeyword"},fn:"DataTableKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBracket",t:8,rt:$n[3].SyntaxToken,fg:"OpenBracket"},fn:"OpenBracket"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"Schema",t:16,rt:$n[3].SchemaTypeExpression,g:{a:2,n:"get_Schema",t:8,rt:$n[3].SchemaTypeExpression,fg:"Schema"},fn:"Schema"},{a:2,n:"Values",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Values",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Values"},fn:"Values"},{a:1,backing:!0,n:"<CloseBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBracket"},{a:1,backing:!0,n:"<DataTableKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DataTableKeyword"},{a:1,backing:!0,n:"<OpenBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBracket"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<Schema>k__BackingField",t:4,rt:$n[3].SchemaTypeExpression,sn:"Schema"},{a:1,backing:!0,n:"<Values>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Values"}]}},$n);$m("Kusto.Language.Syntax.ExternalDataExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].SchemaTypeExpression,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[3].SyntaxToken,$n[3].ExternalDataWithClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"externalDataKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"schema",pt:$n[3].SchemaTypeExpression,ps:2},{n:"openBracket",pt:$n[3].SyntaxToken,ps:3},{n:"uRIs",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:4},{n:"closeBracket",pt:$n[3].SyntaxToken,ps:5},{n:"withClause",pt:$n[3].ExternalDataWithClause,ps:6},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:7}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseBracket",t:8,rt:$n[3].SyntaxToken,fg:"CloseBracket"},fn:"CloseBracket"},{a:2,n:"ExternalDataKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ExternalDataKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ExternalDataKeyword"},fn:"ExternalDataKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenBracket",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenBracket",t:8,rt:$n[3].SyntaxToken,fg:"OpenBracket"},fn:"OpenBracket"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"Schema",t:16,rt:$n[3].SchemaTypeExpression,g:{a:2,n:"get_Schema",t:8,rt:$n[3].SchemaTypeExpression,fg:"Schema"},fn:"Schema"},{a:2,n:"URIs",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_URIs",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"URIs"},fn:"URIs"},{a:2,n:"WithClause",t:16,rt:$n[3].ExternalDataWithClause,g:{a:2,n:"get_WithClause",t:8,rt:$n[3].ExternalDataWithClause,fg:"WithClause"},fn:"WithClause"},{a:1,backing:!0,n:"<CloseBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseBracket"},{a:1,backing:!0,n:"<ExternalDataKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ExternalDataKeyword"},{a:1,backing:!0,n:"<OpenBracket>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenBracket"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<Schema>k__BackingField",t:4,rt:$n[3].SchemaTypeExpression,sn:"Schema"},{a:1,backing:!0,n:"<URIs>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"URIs"},{a:1,backing:!0,n:"<WithClause>k__BackingField",t:4,rt:$n[3].ExternalDataWithClause,sn:"WithClause"}]}},$n);$m("Kusto.Language.Syntax.ContextualDataTableExpression",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[3].SchemaTypeExpression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"contextualDataTableKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"id",pt:$n[3].Expression,ps:1},{n:"schema",pt:$n[3].SchemaTypeExpression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"ContextualDataTableKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ContextualDataTableKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ContextualDataTableKeyword"},fn:"ContextualDataTableKeyword"},{a:2,n:"Id",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Id",t:8,rt:$n[3].Expression,fg:"Id"},fn:"Id"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Schema",t:16,rt:$n[3].SchemaTypeExpression,g:{a:2,n:"get_Schema",t:8,rt:$n[3].SchemaTypeExpression,fg:"Schema"},fn:"Schema"},{a:1,backing:!0,n:"<ContextualDataTableKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ContextualDataTableKeyword"},{a:1,backing:!0,n:"<Id>k__BackingField",t:4,rt:$n[3].Expression,sn:"Id"},{a:1,backing:!0,n:"<Schema>k__BackingField",t:4,rt:$n[3].SchemaTypeExpression,sn:"Schema"}]}},$n);$m("Kusto.Language.Syntax.ExternalDataWithClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"withKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"properties",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"Properties",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),g:{a:2,n:"get_Properties",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),fg:"Properties"},fn:"Properties"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<Properties>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),sn:"Properties"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.JoinOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].Expression,$n[3].JoinConditionClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"joinKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"conditionClause",pt:$n[3].JoinConditionClause,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"ConditionClause",t:16,rt:$n[3].JoinConditionClause,g:{a:2,n:"get_ConditionClause",t:8,rt:$n[3].JoinConditionClause,fg:"ConditionClause"},fn:"ConditionClause"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{a:2,n:"JoinKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_JoinKeyword",t:8,rt:$n[3].SyntaxToken,fg:"JoinKeyword"},fn:"JoinKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:1,backing:!0,n:"<ConditionClause>k__BackingField",t:4,rt:$n[3].JoinConditionClause,sn:"ConditionClause"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<JoinKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"JoinKeyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"}]}},$n);$m("Kusto.Language.Syntax.LookupOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].Expression,$n[3].JoinConditionClause,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"lookupKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"lookupClause",pt:$n[3].JoinConditionClause,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"LookupClause",t:16,rt:$n[3].JoinConditionClause,g:{a:2,n:"get_LookupClause",t:8,rt:$n[3].JoinConditionClause,fg:"LookupClause"},fn:"LookupClause"},{a:2,n:"LookupKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_LookupKeyword",t:8,rt:$n[3].SyntaxToken,fg:"LookupKeyword"},fn:"LookupKeyword"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<LookupClause>k__BackingField",t:4,rt:$n[3].JoinConditionClause,sn:"LookupClause"},{a:1,backing:!0,n:"<LookupKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"LookupKeyword"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"}]}},$n);$m("Kusto.Language.Syntax.JoinConditionClause",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.JoinOnClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"onKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OnKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OnKeyword",t:8,rt:$n[3].SyntaxToken,fg:"OnKeyword"},fn:"OnKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<OnKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OnKeyword"}]}},$n);$m("Kusto.Language.Syntax.JoinWhereClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"whereKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"WhereKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WhereKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WhereKeyword"},fn:"WhereKeyword"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<WhereKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WhereKeyword"}]}},$n);$m("Kusto.Language.Syntax.ScanOperator",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[3].ScanOrderByClause,$n[3].ScanPartitionByClause,$n[3].ScanDeclareClause,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.ScanStep),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"scanKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:1},{n:"orderByClause",pt:$n[3].ScanOrderByClause,ps:2},{n:"partitionByClause",pt:$n[3].ScanPartitionByClause,ps:3},{n:"declareClause",pt:$n[3].ScanDeclareClause,ps:4},{n:"withKeyword",pt:$n[3].SyntaxToken,ps:5},{n:"openParenToken",pt:$n[3].SyntaxToken,ps:6},{n:"steps",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.ScanStep),ps:7},{n:"closeParenToken",pt:$n[3].SyntaxToken,ps:8},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:9}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParenToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParenToken",t:8,rt:$n[3].SyntaxToken,fg:"CloseParenToken"},fn:"CloseParenToken"},{a:2,n:"DeclareClause",t:16,rt:$n[3].ScanDeclareClause,g:{a:2,n:"get_DeclareClause",t:8,rt:$n[3].ScanDeclareClause,fg:"DeclareClause"},fn:"DeclareClause"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParenToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParenToken",t:8,rt:$n[3].SyntaxToken,fg:"OpenParenToken"},fn:"OpenParenToken"},{a:2,n:"OrderByClause",t:16,rt:$n[3].ScanOrderByClause,g:{a:2,n:"get_OrderByClause",t:8,rt:$n[3].ScanOrderByClause,fg:"OrderByClause"},fn:"OrderByClause"},{a:2,n:"Parameters",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),g:{a:2,n:"get_Parameters",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),fg:"Parameters"},fn:"Parameters"},{a:2,n:"PartitionByClause",t:16,rt:$n[3].ScanPartitionByClause,g:{a:2,n:"get_PartitionByClause",t:8,rt:$n[3].ScanPartitionByClause,fg:"PartitionByClause"},fn:"PartitionByClause"},{a:2,n:"ScanKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ScanKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ScanKeyword"},fn:"ScanKeyword"},{a:2,n:"Steps",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.ScanStep),g:{a:2,n:"get_Steps",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.ScanStep),fg:"Steps"},fn:"Steps"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<CloseParenToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParenToken"},{a:1,backing:!0,n:"<DeclareClause>k__BackingField",t:4,rt:$n[3].ScanDeclareClause,sn:"DeclareClause"},{a:1,backing:!0,n:"<OpenParenToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParenToken"},{a:1,backing:!0,n:"<OrderByClause>k__BackingField",t:4,rt:$n[3].ScanOrderByClause,sn:"OrderByClause"},{a:1,backing:!0,n:"<Parameters>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),sn:"Parameters"},{a:1,backing:!0,n:"<PartitionByClause>k__BackingField",t:4,rt:$n[3].ScanPartitionByClause,sn:"PartitionByClause"},{a:1,backing:!0,n:"<ScanKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ScanKeyword"},{a:1,backing:!0,n:"<Steps>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.ScanStep),sn:"Steps"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.ScanDeclareClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"declareKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"declarations",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{a:2,n:"Declarations",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),g:{a:2,n:"get_Declarations",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),fg:"Declarations"},fn:"Declarations"},{a:2,n:"DeclareKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DeclareKeyword",t:8,rt:$n[3].SyntaxToken,fg:"DeclareKeyword"},fn:"DeclareKeyword"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<Declarations>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),sn:"Declarations"},{a:1,backing:!0,n:"<DeclareKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DeclareKeyword"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"}]}},$n);$m("Kusto.Language.Syntax.ScanOrderByClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"orderKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"byKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OrderKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OrderKeyword",t:8,rt:$n[3].SyntaxToken,fg:"OrderKeyword"},fn:"OrderKeyword"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<OrderKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OrderKeyword"}]}},$n);$m("Kusto.Language.Syntax.ScanPartitionByClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"partitionKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"byKeyword",pt:$n[3].SyntaxToken,ps:1},{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ByKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ByKeyword",t:8,rt:$n[3].SyntaxToken,fg:"ByKeyword"},fn:"ByKeyword"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Expressions",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),g:{a:2,n:"get_Expressions",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),fg:"Expressions"},fn:"Expressions"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"PartitionKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_PartitionKeyword",t:8,rt:$n[3].SyntaxToken,fg:"PartitionKeyword"},fn:"PartitionKeyword"},{a:1,backing:!0,n:"<ByKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ByKeyword"},{a:1,backing:!0,n:"<Expressions>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),sn:"Expressions"},{a:1,backing:!0,n:"<PartitionKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"PartitionKeyword"}]}},$n);$m("Kusto.Language.Syntax.ScanStep",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].NameDeclaration,$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].Expression,$n[3].ScanComputationClause,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"stepKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"name",pt:$n[3].NameDeclaration,ps:1},{n:"optionalKeyword",pt:$n[3].SyntaxToken,ps:2},{n:"colonToken",pt:$n[3].SyntaxToken,ps:3},{n:"condition",pt:$n[3].Expression,ps:4},{n:"computationClause",pt:$n[3].ScanComputationClause,ps:5},{n:"semicolonToken",pt:$n[3].SyntaxToken,ps:6},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:7}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"ColonToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ColonToken",t:8,rt:$n[3].SyntaxToken,fg:"ColonToken"},fn:"ColonToken"},{a:2,n:"ComputationClause",t:16,rt:$n[3].ScanComputationClause,g:{a:2,n:"get_ComputationClause",t:8,rt:$n[3].ScanComputationClause,fg:"ComputationClause"},fn:"ComputationClause"},{a:2,n:"Condition",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Condition",t:8,rt:$n[3].Expression,fg:"Condition"},fn:"Condition"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameDeclaration,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameDeclaration,fg:"Name"},fn:"Name"},{a:2,n:"OptionalKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OptionalKeyword",t:8,rt:$n[3].SyntaxToken,fg:"OptionalKeyword"},fn:"OptionalKeyword"},{a:2,n:"SemicolonToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_SemicolonToken",t:8,rt:$n[3].SyntaxToken,fg:"SemicolonToken"},fn:"SemicolonToken"},{a:2,n:"StepKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_StepKeyword",t:8,rt:$n[3].SyntaxToken,fg:"StepKeyword"},fn:"StepKeyword"},{a:1,backing:!0,n:"<ColonToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ColonToken"},{a:1,backing:!0,n:"<ComputationClause>k__BackingField",t:4,rt:$n[3].ScanComputationClause,sn:"ComputationClause"},{a:1,backing:!0,n:"<Condition>k__BackingField",t:4,rt:$n[3].Expression,sn:"Condition"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameDeclaration,sn:"Name"},{a:1,backing:!0,n:"<OptionalKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OptionalKeyword"},{a:1,backing:!0,n:"<SemicolonToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"SemicolonToken"},{a:1,backing:!0,n:"<StepKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"StepKeyword"}]}},$n);$m("Kusto.Language.Syntax.ScanComputationClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.ScanAssignment)),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"arrowToken",pt:$n[3].SyntaxToken,ps:0},{n:"assignments",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.ScanAssignment)),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"ArrowToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_ArrowToken",t:8,rt:$n[3].SyntaxToken,fg:"ArrowToken"},fn:"ArrowToken"},{a:2,n:"Assignments",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.ScanAssignment)),g:{a:2,n:"get_Assignments",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.ScanAssignment)),fg:"Assignments"},fn:"Assignments"},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<ArrowToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"ArrowToken"},{a:1,backing:!0,n:"<Assignments>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.ScanAssignment)),sn:"Assignments"}]}},$n);$m("Kusto.Language.Syntax.ScanAssignment",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].NameReference,$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[3].NameReference,ps:0},{n:"equalToken",pt:$n[3].SyntaxToken,ps:1},{n:"expression",pt:$n[3].Expression,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"EqualToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EqualToken",t:8,rt:$n[3].SyntaxToken,fg:"EqualToken"},fn:"EqualToken"},{a:2,n:"Expression",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Expression",t:8,rt:$n[3].Expression,fg:"Expression"},fn:"Expression"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Name",t:16,rt:$n[3].NameReference,g:{a:2,n:"get_Name",t:8,rt:$n[3].NameReference,fg:"Name"},fn:"Name"},{a:1,backing:!0,n:"<EqualToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EqualToken"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[3].Expression,sn:"Expression"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[3].NameReference,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.CommandWithClause",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.CommandWithValueClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"withKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"value",pt:$n[3].Expression,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Value",t:16,rt:$n[3].Expression,g:{a:2,n:"get_Value",t:8,rt:$n[3].Expression,fg:"Value"},fn:"Value"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:$n[3].Expression,sn:"Value"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.CommandWithPropertyListClause",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"withKeyword",pt:$n[3].SyntaxToken,ps:0},{n:"openParen",pt:$n[3].SyntaxToken,ps:1},{n:"properties",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),ps:2},{n:"closeParen",pt:$n[3].SyntaxToken,ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CloseParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_CloseParen",t:8,rt:$n[3].SyntaxToken,fg:"CloseParen"},fn:"CloseParen"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OpenParen",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_OpenParen",t:8,rt:$n[3].SyntaxToken,fg:"OpenParen"},fn:"OpenParen"},{a:2,n:"Properties",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),g:{a:2,n:"get_Properties",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),fg:"Properties"},fn:"Properties"},{a:2,n:"WithKeyword",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_WithKeyword",t:8,rt:$n[3].SyntaxToken,fg:"WithKeyword"},fn:"WithKeyword"},{a:1,backing:!0,n:"<CloseParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"CloseParen"},{a:1,backing:!0,n:"<OpenParen>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"OpenParen"},{a:1,backing:!0,n:"<Properties>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),sn:"Properties"},{a:1,backing:!0,n:"<WithKeyword>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"WithKeyword"}]}},$n);$m("Kusto.Language.Syntax.Command",function(){return{att:1048705,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"}]}},$n);$m("Kusto.Language.Syntax.UnknownCommand",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"dotToken",pt:$n[3].SyntaxToken,ps:0},{n:"parts",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DotToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DotToken",t:8,rt:$n[3].SyntaxToken,fg:"DotToken"},fn:"DotToken"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Parts",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),g:{a:2,n:"get_Parts",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),fg:"Parts"},fn:"Parts"},{a:1,backing:!0,n:"<DotToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DotToken"},{a:1,backing:!0,n:"<Parts>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),sn:"Parts"}]}},$n);$m("Kusto.Language.Syntax.CustomCommand",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[2].String,$n[3].SyntaxToken,$n[3].SyntaxElement,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"commandKind",pt:$n[2].String,ps:0},{n:"dotToken",pt:$n[3].SyntaxToken,ps:1},{n:"custom",pt:$n[3].SyntaxElement,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"CommandKind",t:16,rt:$n[2].String,g:{a:2,n:"get_CommandKind",t:8,rt:$n[2].String,fg:"CommandKind"},fn:"CommandKind"},{a:2,n:"Custom",t:16,rt:$n[3].SyntaxElement,g:{a:2,n:"get_Custom",t:8,rt:$n[3].SyntaxElement,fg:"Custom"},fn:"Custom"},{a:2,n:"DotToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DotToken",t:8,rt:$n[3].SyntaxToken,fg:"DotToken"},fn:"DotToken"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<CommandKind>k__BackingField",t:4,rt:$n[2].String,sn:"CommandKind"},{a:1,backing:!0,n:"<Custom>k__BackingField",t:4,rt:$n[3].SyntaxElement,sn:"Custom"},{a:1,backing:!0,n:"<DotToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DotToken"}]}},$n);$m("Kusto.Language.Syntax.BadCommand",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"dotToken",pt:$n[3].SyntaxToken,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"DotToken",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_DotToken",t:8,rt:$n[3].SyntaxToken,fg:"DotToken"},fn:"DotToken"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,backing:!0,n:"<DotToken>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"DotToken"}]}},$n);$m("Kusto.Language.Syntax.CommandBlock",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),$n[3].SkippedTokens,$n[3].SyntaxToken,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"statements",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),ps:0},{n:"skippedTokens",pt:$n[3].SkippedTokens,ps:1},{n:"endOfCommand",pt:$n[3].SyntaxToken,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:3,n:"GetCompletionHintCore",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHintCore",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"EndOfCommand",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_EndOfCommand",t:8,rt:$n[3].SyntaxToken,fg:"EndOfCommand"},fn:"EndOfCommand"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"SkippedTokens",t:16,rt:$n[3].SkippedTokens,g:{a:2,n:"get_SkippedTokens",t:8,rt:$n[3].SkippedTokens,fg:"SkippedTokens"},fn:"SkippedTokens"},{a:2,n:"Statements",t:16,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),g:{a:2,n:"get_Statements",t:8,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),fg:"Statements"},fn:"Statements"},{a:1,backing:!0,n:"<EndOfCommand>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"EndOfCommand"},{a:1,backing:!0,n:"<SkippedTokens>k__BackingField",t:4,rt:$n[3].SkippedTokens,sn:"SkippedTokens"},{a:1,backing:!0,n:"<Statements>k__BackingField",t:4,rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),sn:"Statements"}]}},$n);$m("Kusto.Language.Syntax.SyntaxVisitor",function(){return{att:1048705,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"VisitAliasStatement",t:8,pi:[{n:"node",pt:$n[3].AliasStatement,ps:0}],sn:"VisitAliasStatement",rt:$n[2].Void,p:[$n[3].AliasStatement]},{ab:!0,a:2,n:"VisitAsOperator",t:8,pi:[{n:"node",pt:$n[3].AsOperator,ps:0}],sn:"VisitAsOperator",rt:$n[2].Void,p:[$n[3].AsOperator]},{ab:!0,a:2,n:"VisitAtExpression",t:8,pi:[{n:"node",pt:$n[3].AtExpression,ps:0}],sn:"VisitAtExpression",rt:$n[2].Void,p:[$n[3].AtExpression]},{ab:!0,a:2,n:"VisitBadCommand",t:8,pi:[{n:"node",pt:$n[3].BadCommand,ps:0}],sn:"VisitBadCommand",rt:$n[2].Void,p:[$n[3].BadCommand]},{ab:!0,a:2,n:"VisitBadQueryOperator",t:8,pi:[{n:"node",pt:$n[3].BadQueryOperator,ps:0}],sn:"VisitBadQueryOperator",rt:$n[2].Void,p:[$n[3].BadQueryOperator]},{ab:!0,a:2,n:"VisitBetweenExpression",t:8,pi:[{n:"node",pt:$n[3].BetweenExpression,ps:0}],sn:"VisitBetweenExpression",rt:$n[2].Void,p:[$n[3].BetweenExpression]},{ab:!0,a:2,n:"VisitBinaryExpression",t:8,pi:[{n:"node",pt:$n[3].BinaryExpression,ps:0}],sn:"VisitBinaryExpression",rt:$n[2].Void,p:[$n[3].BinaryExpression]},{ab:!0,a:2,n:"VisitBracedName",t:8,pi:[{n:"node",pt:$n[3].BracedName,ps:0}],sn:"VisitBracedName",rt:$n[2].Void,p:[$n[3].BracedName]},{ab:!0,a:2,n:"VisitBracketedExpression",t:8,pi:[{n:"node",pt:$n[3].BracketedExpression,ps:0}],sn:"VisitBracketedExpression",rt:$n[2].Void,p:[$n[3].BracketedExpression]},{ab:!0,a:2,n:"VisitBracketedName",t:8,pi:[{n:"node",pt:$n[3].BracketedName,ps:0}],sn:"VisitBracketedName",rt:$n[2].Void,p:[$n[3].BracketedName]},{ab:!0,a:2,n:"VisitBracketedWildcardedName",t:8,pi:[{n:"node",pt:$n[3].BracketedWildcardedName,ps:0}],sn:"VisitBracketedWildcardedName",rt:$n[2].Void,p:[$n[3].BracketedWildcardedName]},{ab:!0,a:2,n:"VisitCommandBlock",t:8,pi:[{n:"node",pt:$n[3].CommandBlock,ps:0}],sn:"VisitCommandBlock",rt:$n[2].Void,p:[$n[3].CommandBlock]},{ab:!0,a:2,n:"VisitCommandWithPropertyListClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithPropertyListClause,ps:0}],sn:"VisitCommandWithPropertyListClause",rt:$n[2].Void,p:[$n[3].CommandWithPropertyListClause]},{ab:!0,a:2,n:"VisitCommandWithValueClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithValueClause,ps:0}],sn:"VisitCommandWithValueClause",rt:$n[2].Void,p:[$n[3].CommandWithValueClause]},{ab:!0,a:2,n:"VisitCompoundNamedExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundNamedExpression,ps:0}],sn:"VisitCompoundNamedExpression",rt:$n[2].Void,p:[$n[3].CompoundNamedExpression]},{ab:!0,a:2,n:"VisitCompoundStringLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundStringLiteralExpression,ps:0}],sn:"VisitCompoundStringLiteralExpression",rt:$n[2].Void,p:[$n[3].CompoundStringLiteralExpression]},{ab:!0,a:2,n:"VisitConsumeOperator",t:8,pi:[{n:"node",pt:$n[3].ConsumeOperator,ps:0}],sn:"VisitConsumeOperator",rt:$n[2].Void,p:[$n[3].ConsumeOperator]},{ab:!0,a:2,n:"VisitContextualDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].ContextualDataTableExpression,ps:0}],sn:"VisitContextualDataTableExpression",rt:$n[2].Void,p:[$n[3].ContextualDataTableExpression]},{ab:!0,a:2,n:"VisitCountAsIdentifierClause",t:8,pi:[{n:"node",pt:$n[3].CountAsIdentifierClause,ps:0}],sn:"VisitCountAsIdentifierClause",rt:$n[2].Void,p:[$n[3].CountAsIdentifierClause]},{ab:!0,a:2,n:"VisitCountOperator",t:8,pi:[{n:"node",pt:$n[3].CountOperator,ps:0}],sn:"VisitCountOperator",rt:$n[2].Void,p:[$n[3].CountOperator]},{ab:!0,a:2,n:"VisitCustom",t:8,pi:[{n:"node",pt:$n[3].CustomNode,ps:0}],sn:"VisitCustom",rt:$n[2].Void,p:[$n[3].CustomNode]},{ab:!0,a:2,n:"VisitCustomCommand",t:8,pi:[{n:"node",pt:$n[3].CustomCommand,ps:0}],sn:"VisitCustomCommand",rt:$n[2].Void,p:[$n[3].CustomCommand]},{ab:!0,a:2,n:"VisitDataScopeClause",t:8,pi:[{n:"node",pt:$n[3].DataScopeClause,ps:0}],sn:"VisitDataScopeClause",rt:$n[2].Void,p:[$n[3].DataScopeClause]},{ab:!0,a:2,n:"VisitDataScopeExpression",t:8,pi:[{n:"node",pt:$n[3].DataScopeExpression,ps:0}],sn:"VisitDataScopeExpression",rt:$n[2].Void,p:[$n[3].DataScopeExpression]},{ab:!0,a:2,n:"VisitDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].DataTableExpression,ps:0}],sn:"VisitDataTableExpression",rt:$n[2].Void,p:[$n[3].DataTableExpression]},{ab:!0,a:2,n:"VisitDefaultExpressionClause",t:8,pi:[{n:"node",pt:$n[3].DefaultExpressionClause,ps:0}],sn:"VisitDefaultExpressionClause",rt:$n[2].Void,p:[$n[3].DefaultExpressionClause]},{ab:!0,a:2,n:"VisitDefaultValueDeclaration",t:8,pi:[{n:"node",pt:$n[3].DefaultValueDeclaration,ps:0}],sn:"VisitDefaultValueDeclaration",rt:$n[2].Void,p:[$n[3].DefaultValueDeclaration]},{ab:!0,a:2,n:"VisitDirectiveBlock",t:8,pi:[{n:"node",pt:$n[3].DirectiveBlock,ps:0}],sn:"VisitDirectiveBlock",rt:$n[2].Void,p:[$n[3].DirectiveBlock]},{ab:!0,a:2,n:"VisitDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].DistinctOperator,ps:0}],sn:"VisitDistinctOperator",rt:$n[2].Void,p:[$n[3].DistinctOperator]},{ab:!0,a:2,n:"VisitDynamicExpression",t:8,pi:[{n:"node",pt:$n[3].DynamicExpression,ps:0}],sn:"VisitDynamicExpression",rt:$n[2].Void,p:[$n[3].DynamicExpression]},{ab:!0,a:2,n:"VisitElementExpression",t:8,pi:[{n:"node",pt:$n[3].ElementExpression,ps:0}],sn:"VisitElementExpression",rt:$n[2].Void,p:[$n[3].ElementExpression]},{ab:!0,a:2,n:"VisitEvaluateOperator",t:8,pi:[{n:"node",pt:$n[3].EvaluateOperator,ps:0}],sn:"VisitEvaluateOperator",rt:$n[2].Void,p:[$n[3].EvaluateOperator]},{ab:!0,a:2,n:"VisitEvaluateSchemaClause",t:8,pi:[{n:"node",pt:$n[3].EvaluateSchemaClause,ps:0}],sn:"VisitEvaluateSchemaClause",rt:$n[2].Void,p:[$n[3].EvaluateSchemaClause]},{ab:!0,a:2,n:"VisitExecuteAndCacheOperator",t:8,pi:[{n:"node",pt:$n[3].ExecuteAndCacheOperator,ps:0}],sn:"VisitExecuteAndCacheOperator",rt:$n[2].Void,p:[$n[3].ExecuteAndCacheOperator]},{ab:!0,a:2,n:"VisitExpressionCouple",t:8,pi:[{n:"node",pt:$n[3].ExpressionCouple,ps:0}],sn:"VisitExpressionCouple",rt:$n[2].Void,p:[$n[3].ExpressionCouple]},{ab:!0,a:2,n:"VisitExpressionList",t:8,pi:[{n:"node",pt:$n[3].ExpressionList,ps:0}],sn:"VisitExpressionList",rt:$n[2].Void,p:[$n[3].ExpressionList]},{ab:!0,a:2,n:"VisitExpressionStatement",t:8,pi:[{n:"node",pt:$n[3].ExpressionStatement,ps:0}],sn:"VisitExpressionStatement",rt:$n[2].Void,p:[$n[3].ExpressionStatement]},{ab:!0,a:2,n:"VisitExtendOperator",t:8,pi:[{n:"node",pt:$n[3].ExtendOperator,ps:0}],sn:"VisitExtendOperator",rt:$n[2].Void,p:[$n[3].ExtendOperator]},{ab:!0,a:2,n:"VisitExternalDataExpression",t:8,pi:[{n:"node",pt:$n[3].ExternalDataExpression,ps:0}],sn:"VisitExternalDataExpression",rt:$n[2].Void,p:[$n[3].ExternalDataExpression]},{ab:!0,a:2,n:"VisitExternalDataWithClause",t:8,pi:[{n:"node",pt:$n[3].ExternalDataWithClause,ps:0}],sn:"VisitExternalDataWithClause",rt:$n[2].Void,p:[$n[3].ExternalDataWithClause]},{ab:!0,a:2,n:"VisitFacetOperator",t:8,pi:[{n:"node",pt:$n[3].FacetOperator,ps:0}],sn:"VisitFacetOperator",rt:$n[2].Void,p:[$n[3].FacetOperator]},{ab:!0,a:2,n:"VisitFacetWithExpressionClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithExpressionClause,ps:0}],sn:"VisitFacetWithExpressionClause",rt:$n[2].Void,p:[$n[3].FacetWithExpressionClause]},{ab:!0,a:2,n:"VisitFacetWithOperatorClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithOperatorClause,ps:0}],sn:"VisitFacetWithOperatorClause",rt:$n[2].Void,p:[$n[3].FacetWithOperatorClause]},{ab:!0,a:2,n:"VisitFilterOperator",t:8,pi:[{n:"node",pt:$n[3].FilterOperator,ps:0}],sn:"VisitFilterOperator",rt:$n[2].Void,p:[$n[3].FilterOperator]},{ab:!0,a:2,n:"VisitFindInClause",t:8,pi:[{n:"node",pt:$n[3].FindInClause,ps:0}],sn:"VisitFindInClause",rt:$n[2].Void,p:[$n[3].FindInClause]},{ab:!0,a:2,n:"VisitFindOperator",t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"VisitFindOperator",rt:$n[2].Void,p:[$n[3].FindOperator]},{ab:!0,a:2,n:"VisitFindProjectClause",t:8,pi:[{n:"node",pt:$n[3].FindProjectClause,ps:0}],sn:"VisitFindProjectClause",rt:$n[2].Void,p:[$n[3].FindProjectClause]},{ab:!0,a:2,n:"VisitForkExpression",t:8,pi:[{n:"node",pt:$n[3].ForkExpression,ps:0}],sn:"VisitForkExpression",rt:$n[2].Void,p:[$n[3].ForkExpression]},{ab:!0,a:2,n:"VisitForkOperator",t:8,pi:[{n:"node",pt:$n[3].ForkOperator,ps:0}],sn:"VisitForkOperator",rt:$n[2].Void,p:[$n[3].ForkOperator]},{ab:!0,a:2,n:"VisitFunctionBody",t:8,pi:[{n:"node",pt:$n[3].FunctionBody,ps:0}],sn:"VisitFunctionBody",rt:$n[2].Void,p:[$n[3].FunctionBody]},{ab:!0,a:2,n:"VisitFunctionCallExpression",t:8,pi:[{n:"node",pt:$n[3].FunctionCallExpression,ps:0}],sn:"VisitFunctionCallExpression",rt:$n[2].Void,p:[$n[3].FunctionCallExpression]},{ab:!0,a:2,n:"VisitFunctionDeclaration",t:8,pi:[{n:"node",pt:$n[3].FunctionDeclaration,ps:0}],sn:"VisitFunctionDeclaration",rt:$n[2].Void,p:[$n[3].FunctionDeclaration]},{ab:!0,a:2,n:"VisitFunctionParameter",t:8,pi:[{n:"node",pt:$n[3].FunctionParameter,ps:0}],sn:"VisitFunctionParameter",rt:$n[2].Void,p:[$n[3].FunctionParameter]},{ab:!0,a:2,n:"VisitFunctionParameters",t:8,pi:[{n:"node",pt:$n[3].FunctionParameters,ps:0}],sn:"VisitFunctionParameters",rt:$n[2].Void,p:[$n[3].FunctionParameters]},{ab:!0,a:2,n:"VisitGetSchemaOperator",t:8,pi:[{n:"node",pt:$n[3].GetSchemaOperator,ps:0}],sn:"VisitGetSchemaOperator",rt:$n[2].Void,p:[$n[3].GetSchemaOperator]},{ab:!0,a:2,n:"VisitHasAllExpression",t:8,pi:[{n:"node",pt:$n[3].HasAllExpression,ps:0}],sn:"VisitHasAllExpression",rt:$n[2].Void,p:[$n[3].HasAllExpression]},{ab:!0,a:2,n:"VisitHasAnyExpression",t:8,pi:[{n:"node",pt:$n[3].HasAnyExpression,ps:0}],sn:"VisitHasAnyExpression",rt:$n[2].Void,p:[$n[3].HasAnyExpression]},{ab:!0,a:2,n:"VisitInExpression",t:8,pi:[{n:"node",pt:$n[3].InExpression,ps:0}],sn:"VisitInExpression",rt:$n[2].Void,p:[$n[3].InExpression]},{ab:!0,a:2,n:"VisitInvokeOperator",t:8,pi:[{n:"node",pt:$n[3].InvokeOperator,ps:0}],sn:"VisitInvokeOperator",rt:$n[2].Void,p:[$n[3].InvokeOperator]},{ab:!0,a:2,n:"VisitJoinOnClause",t:8,pi:[{n:"node",pt:$n[3].JoinOnClause,ps:0}],sn:"VisitJoinOnClause",rt:$n[2].Void,p:[$n[3].JoinOnClause]},{ab:!0,a:2,n:"VisitJoinOperator",t:8,pi:[{n:"node",pt:$n[3].JoinOperator,ps:0}],sn:"VisitJoinOperator",rt:$n[2].Void,p:[$n[3].JoinOperator]},{ab:!0,a:2,n:"VisitJoinWhereClause",t:8,pi:[{n:"node",pt:$n[3].JoinWhereClause,ps:0}],sn:"VisitJoinWhereClause",rt:$n[2].Void,p:[$n[3].JoinWhereClause]},{ab:!0,a:2,n:"VisitJsonArrayExpression",t:8,pi:[{n:"node",pt:$n[3].JsonArrayExpression,ps:0}],sn:"VisitJsonArrayExpression",rt:$n[2].Void,p:[$n[3].JsonArrayExpression]},{ab:!0,a:2,n:"VisitJsonObjectExpression",t:8,pi:[{n:"node",pt:$n[3].JsonObjectExpression,ps:0}],sn:"VisitJsonObjectExpression",rt:$n[2].Void,p:[$n[3].JsonObjectExpression]},{ab:!0,a:2,n:"VisitJsonPair",t:8,pi:[{n:"node",pt:$n[3].JsonPair,ps:0}],sn:"VisitJsonPair",rt:$n[2].Void,p:[$n[3].JsonPair]},{ab:!0,a:2,n:"VisitLetStatement",t:8,pi:[{n:"node",pt:$n[3].LetStatement,ps:0}],sn:"VisitLetStatement",rt:$n[2].Void,p:[$n[3].LetStatement]},{ab:!0,a:2,n:"VisitList",t:8,pi:[{n:"list",pt:$n[3].SyntaxList,ps:0}],sn:"VisitList",rt:$n[2].Void,p:[$n[3].SyntaxList]},{ab:!0,a:2,n:"VisitLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].LiteralExpression,ps:0}],sn:"VisitLiteralExpression",rt:$n[2].Void,p:[$n[3].LiteralExpression]},{ab:!0,a:2,n:"VisitLookupOperator",t:8,pi:[{n:"node",pt:$n[3].LookupOperator,ps:0}],sn:"VisitLookupOperator",rt:$n[2].Void,p:[$n[3].LookupOperator]},{ab:!0,a:2,n:"VisitMakeSeriesByClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesByClause,ps:0}],sn:"VisitMakeSeriesByClause",rt:$n[2].Void,p:[$n[3].MakeSeriesByClause]},{ab:!0,a:2,n:"VisitMakeSeriesExpression",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesExpression,ps:0}],sn:"VisitMakeSeriesExpression",rt:$n[2].Void,p:[$n[3].MakeSeriesExpression]},{ab:!0,a:2,n:"VisitMakeSeriesFromClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromClause,ps:0}],sn:"VisitMakeSeriesFromClause",rt:$n[2].Void,p:[$n[3].MakeSeriesFromClause]},{ab:!0,a:2,n:"VisitMakeSeriesFromToStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromToStepClause,ps:0}],sn:"VisitMakeSeriesFromToStepClause",rt:$n[2].Void,p:[$n[3].MakeSeriesFromToStepClause]},{ab:!0,a:2,n:"VisitMakeSeriesInRangeClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesInRangeClause,ps:0}],sn:"VisitMakeSeriesInRangeClause",rt:$n[2].Void,p:[$n[3].MakeSeriesInRangeClause]},{ab:!0,a:2,n:"VisitMakeSeriesOnClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOnClause,ps:0}],sn:"VisitMakeSeriesOnClause",rt:$n[2].Void,p:[$n[3].MakeSeriesOnClause]},{ab:!0,a:2,n:"VisitMakeSeriesOperator",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOperator,ps:0}],sn:"VisitMakeSeriesOperator",rt:$n[2].Void,p:[$n[3].MakeSeriesOperator]},{ab:!0,a:2,n:"VisitMakeSeriesStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesStepClause,ps:0}],sn:"VisitMakeSeriesStepClause",rt:$n[2].Void,p:[$n[3].MakeSeriesStepClause]},{ab:!0,a:2,n:"VisitMakeSeriesToClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesToClause,ps:0}],sn:"VisitMakeSeriesToClause",rt:$n[2].Void,p:[$n[3].MakeSeriesToClause]},{ab:!0,a:2,n:"VisitMaterializeExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializeExpression,ps:0}],sn:"VisitMaterializeExpression",rt:$n[2].Void,p:[$n[3].MaterializeExpression]},{ab:!0,a:2,n:"VisitMaterializedViewCombineClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineClause,ps:0}],sn:"VisitMaterializedViewCombineClause",rt:$n[2].Void,p:[$n[3].MaterializedViewCombineClause]},{ab:!0,a:2,n:"VisitMaterializedViewCombineExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineExpression,ps:0}],sn:"VisitMaterializedViewCombineExpression",rt:$n[2].Void,p:[$n[3].MaterializedViewCombineExpression]},{ab:!0,a:2,n:"VisitMaterializedViewCombineNameClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineNameClause,ps:0}],sn:"VisitMaterializedViewCombineNameClause",rt:$n[2].Void,p:[$n[3].MaterializedViewCombineNameClause]},{ab:!0,a:2,n:"VisitMvApplyContextIdClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyContextIdClause,ps:0}],sn:"VisitMvApplyContextIdClause",rt:$n[2].Void,p:[$n[3].MvApplyContextIdClause]},{ab:!0,a:2,n:"VisitMvApplyExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplyExpression,ps:0}],sn:"VisitMvApplyExpression",rt:$n[2].Void,p:[$n[3].MvApplyExpression]},{ab:!0,a:2,n:"VisitMvApplyOperator",t:8,pi:[{n:"node",pt:$n[3].MvApplyOperator,ps:0}],sn:"VisitMvApplyOperator",rt:$n[2].Void,p:[$n[3].MvApplyOperator]},{ab:!0,a:2,n:"VisitMvApplyRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyRowLimitClause,ps:0}],sn:"VisitMvApplyRowLimitClause",rt:$n[2].Void,p:[$n[3].MvApplyRowLimitClause]},{ab:!0,a:2,n:"VisitMvApplySubqueryExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplySubqueryExpression,ps:0}],sn:"VisitMvApplySubqueryExpression",rt:$n[2].Void,p:[$n[3].MvApplySubqueryExpression]},{ab:!0,a:2,n:"VisitMvExpandExpression",t:8,pi:[{n:"node",pt:$n[3].MvExpandExpression,ps:0}],sn:"VisitMvExpandExpression",rt:$n[2].Void,p:[$n[3].MvExpandExpression]},{ab:!0,a:2,n:"VisitMvExpandOperator",t:8,pi:[{n:"node",pt:$n[3].MvExpandOperator,ps:0}],sn:"VisitMvExpandOperator",rt:$n[2].Void,p:[$n[3].MvExpandOperator]},{ab:!0,a:2,n:"VisitMvExpandRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvExpandRowLimitClause,ps:0}],sn:"VisitMvExpandRowLimitClause",rt:$n[2].Void,p:[$n[3].MvExpandRowLimitClause]},{ab:!0,a:2,n:"VisitNameAndTypeDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameAndTypeDeclaration,ps:0}],sn:"VisitNameAndTypeDeclaration",rt:$n[2].Void,p:[$n[3].NameAndTypeDeclaration]},{ab:!0,a:2,n:"VisitNameDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameDeclaration,ps:0}],sn:"VisitNameDeclaration",rt:$n[2].Void,p:[$n[3].NameDeclaration]},{ab:!0,a:2,n:"VisitNameEqualsClause",t:8,pi:[{n:"node",pt:$n[3].NameEqualsClause,ps:0}],sn:"VisitNameEqualsClause",rt:$n[2].Void,p:[$n[3].NameEqualsClause]},{ab:!0,a:2,n:"VisitNameReference",t:8,pi:[{n:"node",pt:$n[3].NameReference,ps:0}],sn:"VisitNameReference",rt:$n[2].Void,p:[$n[3].NameReference]},{ab:!0,a:2,n:"VisitNameReferenceList",t:8,pi:[{n:"node",pt:$n[3].NameReferenceList,ps:0}],sn:"VisitNameReferenceList",rt:$n[2].Void,p:[$n[3].NameReferenceList]},{ab:!0,a:2,n:"VisitNamedParameter",t:8,pi:[{n:"node",pt:$n[3].NamedParameter,ps:0}],sn:"VisitNamedParameter",rt:$n[2].Void,p:[$n[3].NamedParameter]},{ab:!0,a:2,n:"VisitOptionValueClause",t:8,pi:[{n:"node",pt:$n[3].OptionValueClause,ps:0}],sn:"VisitOptionValueClause",rt:$n[2].Void,p:[$n[3].OptionValueClause]},{ab:!0,a:2,n:"VisitOrderedExpression",t:8,pi:[{n:"node",pt:$n[3].OrderedExpression,ps:0}],sn:"VisitOrderedExpression",rt:$n[2].Void,p:[$n[3].OrderedExpression]},{ab:!0,a:2,n:"VisitOrderingClause",t:8,pi:[{n:"node",pt:$n[3].OrderingClause,ps:0}],sn:"VisitOrderingClause",rt:$n[2].Void,p:[$n[3].OrderingClause]},{ab:!0,a:2,n:"VisitOrderingNullsClause",t:8,pi:[{n:"node",pt:$n[3].OrderingNullsClause,ps:0}],sn:"VisitOrderingNullsClause",rt:$n[2].Void,p:[$n[3].OrderingNullsClause]},{ab:!0,a:2,n:"VisitPackExpression",t:8,pi:[{n:"node",pt:$n[3].PackExpression,ps:0}],sn:"VisitPackExpression",rt:$n[2].Void,p:[$n[3].PackExpression]},{ab:!0,a:2,n:"VisitParenthesizedExpression",t:8,pi:[{n:"node",pt:$n[3].ParenthesizedExpression,ps:0}],sn:"VisitParenthesizedExpression",rt:$n[2].Void,p:[$n[3].ParenthesizedExpression]},{ab:!0,a:2,n:"VisitParseOperator",t:8,pi:[{n:"node",pt:$n[3].ParseOperator,ps:0}],sn:"VisitParseOperator",rt:$n[2].Void,p:[$n[3].ParseOperator]},{ab:!0,a:2,n:"VisitParseWhereOperator",t:8,pi:[{n:"node",pt:$n[3].ParseWhereOperator,ps:0}],sn:"VisitParseWhereOperator",rt:$n[2].Void,p:[$n[3].ParseWhereOperator]},{ab:!0,a:2,n:"VisitPartitionOperator",t:8,pi:[{n:"node",pt:$n[3].PartitionOperator,ps:0}],sn:"VisitPartitionOperator",rt:$n[2].Void,p:[$n[3].PartitionOperator]},{ab:!0,a:2,n:"VisitPartitionQuery",t:8,pi:[{n:"node",pt:$n[3].PartitionQuery,ps:0}],sn:"VisitPartitionQuery",rt:$n[2].Void,p:[$n[3].PartitionQuery]},{ab:!0,a:2,n:"VisitPartitionScope",t:8,pi:[{n:"node",pt:$n[3].PartitionScope,ps:0}],sn:"VisitPartitionScope",rt:$n[2].Void,p:[$n[3].PartitionScope]},{ab:!0,a:2,n:"VisitPartitionSubquery",t:8,pi:[{n:"node",pt:$n[3].PartitionSubquery,ps:0}],sn:"VisitPartitionSubquery",rt:$n[2].Void,p:[$n[3].PartitionSubquery]},{ab:!0,a:2,n:"VisitPathExpression",t:8,pi:[{n:"node",pt:$n[3].PathExpression,ps:0}],sn:"VisitPathExpression",rt:$n[2].Void,p:[$n[3].PathExpression]},{ab:!0,a:2,n:"VisitPatternDeclaration",t:8,pi:[{n:"node",pt:$n[3].PatternDeclaration,ps:0}],sn:"VisitPatternDeclaration",rt:$n[2].Void,p:[$n[3].PatternDeclaration]},{ab:!0,a:2,n:"VisitPatternMatch",t:8,pi:[{n:"node",pt:$n[3].PatternMatch,ps:0}],sn:"VisitPatternMatch",rt:$n[2].Void,p:[$n[3].PatternMatch]},{ab:!0,a:2,n:"VisitPatternPathParameter",t:8,pi:[{n:"node",pt:$n[3].PatternPathParameter,ps:0}],sn:"VisitPatternPathParameter",rt:$n[2].Void,p:[$n[3].PatternPathParameter]},{ab:!0,a:2,n:"VisitPatternPathValue",t:8,pi:[{n:"node",pt:$n[3].PatternPathValue,ps:0}],sn:"VisitPatternPathValue",rt:$n[2].Void,p:[$n[3].PatternPathValue]},{ab:!0,a:2,n:"VisitPatternStatement",t:8,pi:[{n:"node",pt:$n[3].PatternStatement,ps:0}],sn:"VisitPatternStatement",rt:$n[2].Void,p:[$n[3].PatternStatement]},{ab:!0,a:2,n:"VisitPipeExpression",t:8,pi:[{n:"node",pt:$n[3].PipeExpression,ps:0}],sn:"VisitPipeExpression",rt:$n[2].Void,p:[$n[3].PipeExpression]},{ab:!0,a:2,n:"VisitPrefixUnaryExpression",t:8,pi:[{n:"node",pt:$n[3].PrefixUnaryExpression,ps:0}],sn:"VisitPrefixUnaryExpression",rt:$n[2].Void,p:[$n[3].PrefixUnaryExpression]},{ab:!0,a:2,n:"VisitPrimitiveTypeExpression",t:8,pi:[{n:"node",pt:$n[3].PrimitiveTypeExpression,ps:0}],sn:"VisitPrimitiveTypeExpression",rt:$n[2].Void,p:[$n[3].PrimitiveTypeExpression]},{ab:!0,a:2,n:"VisitPrintOperator",t:8,pi:[{n:"node",pt:$n[3].PrintOperator,ps:0}],sn:"VisitPrintOperator",rt:$n[2].Void,p:[$n[3].PrintOperator]},{ab:!0,a:2,n:"VisitProjectAwayOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectAwayOperator,ps:0}],sn:"VisitProjectAwayOperator",rt:$n[2].Void,p:[$n[3].ProjectAwayOperator]},{ab:!0,a:2,n:"VisitProjectKeepOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectKeepOperator,ps:0}],sn:"VisitProjectKeepOperator",rt:$n[2].Void,p:[$n[3].ProjectKeepOperator]},{ab:!0,a:2,n:"VisitProjectOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectOperator,ps:0}],sn:"VisitProjectOperator",rt:$n[2].Void,p:[$n[3].ProjectOperator]},{ab:!0,a:2,n:"VisitProjectRenameOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectRenameOperator,ps:0}],sn:"VisitProjectRenameOperator",rt:$n[2].Void,p:[$n[3].ProjectRenameOperator]},{ab:!0,a:2,n:"VisitProjectReorderOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectReorderOperator,ps:0}],sn:"VisitProjectReorderOperator",rt:$n[2].Void,p:[$n[3].ProjectReorderOperator]},{ab:!0,a:2,n:"VisitQueryBlock",t:8,pi:[{n:"node",pt:$n[3].QueryBlock,ps:0}],sn:"VisitQueryBlock",rt:$n[2].Void,p:[$n[3].QueryBlock]},{ab:!0,a:2,n:"VisitQueryParametersStatement",t:8,pi:[{n:"node",pt:$n[3].QueryParametersStatement,ps:0}],sn:"VisitQueryParametersStatement",rt:$n[2].Void,p:[$n[3].QueryParametersStatement]},{ab:!0,a:2,n:"VisitRangeOperator",t:8,pi:[{n:"node",pt:$n[3].RangeOperator,ps:0}],sn:"VisitRangeOperator",rt:$n[2].Void,p:[$n[3].RangeOperator]},{ab:!0,a:2,n:"VisitReduceByOperator",t:8,pi:[{n:"node",pt:$n[3].ReduceByOperator,ps:0}],sn:"VisitReduceByOperator",rt:$n[2].Void,p:[$n[3].ReduceByOperator]},{ab:!0,a:2,n:"VisitReduceByWithClause",t:8,pi:[{n:"node",pt:$n[3].ReduceByWithClause,ps:0}],sn:"VisitReduceByWithClause",rt:$n[2].Void,p:[$n[3].ReduceByWithClause]},{ab:!0,a:2,n:"VisitRenameList",t:8,pi:[{n:"node",pt:$n[3].RenameList,ps:0}],sn:"VisitRenameList",rt:$n[2].Void,p:[$n[3].RenameList]},{ab:!0,a:2,n:"VisitRenderOperator",t:8,pi:[{n:"node",pt:$n[3].RenderOperator,ps:0}],sn:"VisitRenderOperator",rt:$n[2].Void,p:[$n[3].RenderOperator]},{ab:!0,a:2,n:"VisitRenderWithClause",t:8,pi:[{n:"node",pt:$n[3].RenderWithClause,ps:0}],sn:"VisitRenderWithClause",rt:$n[2].Void,p:[$n[3].RenderWithClause]},{ab:!0,a:2,n:"VisitRestrictStatement",t:8,pi:[{n:"node",pt:$n[3].RestrictStatement,ps:0}],sn:"VisitRestrictStatement",rt:$n[2].Void,p:[$n[3].RestrictStatement]},{ab:!0,a:2,n:"VisitSampleDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].SampleDistinctOperator,ps:0}],sn:"VisitSampleDistinctOperator",rt:$n[2].Void,p:[$n[3].SampleDistinctOperator]},{ab:!0,a:2,n:"VisitSampleOperator",t:8,pi:[{n:"node",pt:$n[3].SampleOperator,ps:0}],sn:"VisitSampleOperator",rt:$n[2].Void,p:[$n[3].SampleOperator]},{ab:!0,a:2,n:"VisitScanAssignment",t:8,pi:[{n:"node",pt:$n[3].ScanAssignment,ps:0}],sn:"VisitScanAssignment",rt:$n[2].Void,p:[$n[3].ScanAssignment]},{ab:!0,a:2,n:"VisitScanComputationClause",t:8,pi:[{n:"node",pt:$n[3].ScanComputationClause,ps:0}],sn:"VisitScanComputationClause",rt:$n[2].Void,p:[$n[3].ScanComputationClause]},{ab:!0,a:2,n:"VisitScanDeclareClause",t:8,pi:[{n:"node",pt:$n[3].ScanDeclareClause,ps:0}],sn:"VisitScanDeclareClause",rt:$n[2].Void,p:[$n[3].ScanDeclareClause]},{ab:!0,a:2,n:"VisitScanOperator",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"VisitScanOperator",rt:$n[2].Void,p:[$n[3].ScanOperator]},{ab:!0,a:2,n:"VisitScanOrderByClause",t:8,pi:[{n:"node",pt:$n[3].ScanOrderByClause,ps:0}],sn:"VisitScanOrderByClause",rt:$n[2].Void,p:[$n[3].ScanOrderByClause]},{ab:!0,a:2,n:"VisitScanPartitionByClause",t:8,pi:[{n:"node",pt:$n[3].ScanPartitionByClause,ps:0}],sn:"VisitScanPartitionByClause",rt:$n[2].Void,p:[$n[3].ScanPartitionByClause]},{ab:!0,a:2,n:"VisitScanStep",t:8,pi:[{n:"node",pt:$n[3].ScanStep,ps:0}],sn:"VisitScanStep",rt:$n[2].Void,p:[$n[3].ScanStep]},{ab:!0,a:2,n:"VisitSchemaTypeExpression",t:8,pi:[{n:"node",pt:$n[3].SchemaTypeExpression,ps:0}],sn:"VisitSchemaTypeExpression",rt:$n[2].Void,p:[$n[3].SchemaTypeExpression]},{ab:!0,a:2,n:"VisitSearchOperator",t:8,pi:[{n:"node",pt:$n[3].SearchOperator,ps:0}],sn:"VisitSearchOperator",rt:$n[2].Void,p:[$n[3].SearchOperator]},{ab:!0,a:2,n:"VisitSeparatedElement",t:8,pi:[{n:"separatedElement",pt:$n[3].SeparatedElement,ps:0}],sn:"VisitSeparatedElement",rt:$n[2].Void,p:[$n[3].SeparatedElement]},{ab:!0,a:2,n:"VisitSerializeOperator",t:8,pi:[{n:"node",pt:$n[3].SerializeOperator,ps:0}],sn:"VisitSerializeOperator",rt:$n[2].Void,p:[$n[3].SerializeOperator]},{ab:!0,a:2,n:"VisitSetOptionStatement",t:8,pi:[{n:"node",pt:$n[3].SetOptionStatement,ps:0}],sn:"VisitSetOptionStatement",rt:$n[2].Void,p:[$n[3].SetOptionStatement]},{ab:!0,a:2,n:"VisitSimpleNamedExpression",t:8,pi:[{n:"node",pt:$n[3].SimpleNamedExpression,ps:0}],sn:"VisitSimpleNamedExpression",rt:$n[2].Void,p:[$n[3].SimpleNamedExpression]},{ab:!0,a:2,n:"VisitSkippedTokens",t:8,pi:[{n:"node",pt:$n[3].SkippedTokens,ps:0}],sn:"VisitSkippedTokens",rt:$n[2].Void,p:[$n[3].SkippedTokens]},{ab:!0,a:2,n:"VisitSortOperator",t:8,pi:[{n:"node",pt:$n[3].SortOperator,ps:0}],sn:"VisitSortOperator",rt:$n[2].Void,p:[$n[3].SortOperator]},{ab:!0,a:2,n:"VisitStarExpression",t:8,pi:[{n:"node",pt:$n[3].StarExpression,ps:0}],sn:"VisitStarExpression",rt:$n[2].Void,p:[$n[3].StarExpression]},{ab:!0,a:2,n:"VisitSummarizeByClause",t:8,pi:[{n:"node",pt:$n[3].SummarizeByClause,ps:0}],sn:"VisitSummarizeByClause",rt:$n[2].Void,p:[$n[3].SummarizeByClause]},{ab:!0,a:2,n:"VisitSummarizeOperator",t:8,pi:[{n:"node",pt:$n[3].SummarizeOperator,ps:0}],sn:"VisitSummarizeOperator",rt:$n[2].Void,p:[$n[3].SummarizeOperator]},{ab:!0,a:2,n:"VisitTakeOperator",t:8,pi:[{n:"node",pt:$n[3].TakeOperator,ps:0}],sn:"VisitTakeOperator",rt:$n[2].Void,p:[$n[3].TakeOperator]},{ab:!0,a:2,n:"VisitToScalarExpression",t:8,pi:[{n:"node",pt:$n[3].ToScalarExpression,ps:0}],sn:"VisitToScalarExpression",rt:$n[2].Void,p:[$n[3].ToScalarExpression]},{ab:!0,a:2,n:"VisitToTableExpression",t:8,pi:[{n:"node",pt:$n[3].ToTableExpression,ps:0}],sn:"VisitToTableExpression",rt:$n[2].Void,p:[$n[3].ToTableExpression]},{ab:!0,a:2,n:"VisitToTypeOfClause",t:8,pi:[{n:"node",pt:$n[3].ToTypeOfClause,ps:0}],sn:"VisitToTypeOfClause",rt:$n[2].Void,p:[$n[3].ToTypeOfClause]},{ab:!0,a:2,n:"VisitTokenName",t:8,pi:[{n:"node",pt:$n[3].TokenName,ps:0}],sn:"VisitTokenName",rt:$n[2].Void,p:[$n[3].TokenName]},{ab:!0,a:2,n:"VisitTopHittersByClause",t:8,pi:[{n:"node",pt:$n[3].TopHittersByClause,ps:0}],sn:"VisitTopHittersByClause",rt:$n[2].Void,p:[$n[3].TopHittersByClause]},{ab:!0,a:2,n:"VisitTopHittersOperator",t:8,pi:[{n:"node",pt:$n[3].TopHittersOperator,ps:0}],sn:"VisitTopHittersOperator",rt:$n[2].Void,p:[$n[3].TopHittersOperator]},{ab:!0,a:2,n:"VisitTopNestedClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedClause,ps:0}],sn:"VisitTopNestedClause",rt:$n[2].Void,p:[$n[3].TopNestedClause]},{ab:!0,a:2,n:"VisitTopNestedOperator",t:8,pi:[{n:"node",pt:$n[3].TopNestedOperator,ps:0}],sn:"VisitTopNestedOperator",rt:$n[2].Void,p:[$n[3].TopNestedOperator]},{ab:!0,a:2,n:"VisitTopNestedWithOthersClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedWithOthersClause,ps:0}],sn:"VisitTopNestedWithOthersClause",rt:$n[2].Void,p:[$n[3].TopNestedWithOthersClause]},{ab:!0,a:2,n:"VisitTopOperator",t:8,pi:[{n:"node",pt:$n[3].TopOperator,ps:0}],sn:"VisitTopOperator",rt:$n[2].Void,p:[$n[3].TopOperator]},{ab:!0,a:2,n:"VisitTypeOfLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].TypeOfLiteralExpression,ps:0}],sn:"VisitTypeOfLiteralExpression",rt:$n[2].Void,p:[$n[3].TypeOfLiteralExpression]},{ab:!0,a:2,n:"VisitTypedColumnReference",t:8,pi:[{n:"node",pt:$n[3].TypedColumnReference,ps:0}],sn:"VisitTypedColumnReference",rt:$n[2].Void,p:[$n[3].TypedColumnReference]},{ab:!0,a:2,n:"VisitUnionOperator",t:8,pi:[{n:"node",pt:$n[3].UnionOperator,ps:0}],sn:"VisitUnionOperator",rt:$n[2].Void,p:[$n[3].UnionOperator]},{ab:!0,a:2,n:"VisitUnknownCommand",t:8,pi:[{n:"node",pt:$n[3].UnknownCommand,ps:0}],sn:"VisitUnknownCommand",rt:$n[2].Void,p:[$n[3].UnknownCommand]},{ab:!0,a:2,n:"VisitWildcardedName",t:8,pi:[{n:"node",pt:$n[3].WildcardedName,ps:0}],sn:"VisitWildcardedName",rt:$n[2].Void,p:[$n[3].WildcardedName]}]}},$n);$m("Kusto.Language.Syntax.DefaultSyntaxVisitor",function(){return{att:1048705,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:3,n:"DefaultVisit",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"DefaultVisit",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{ov:!0,a:2,n:"VisitAliasStatement",t:8,pi:[{n:"node",pt:$n[3].AliasStatement,ps:0}],sn:"VisitAliasStatement",rt:$n[2].Void,p:[$n[3].AliasStatement]},{ov:!0,a:2,n:"VisitAsOperator",t:8,pi:[{n:"node",pt:$n[3].AsOperator,ps:0}],sn:"VisitAsOperator",rt:$n[2].Void,p:[$n[3].AsOperator]},{ov:!0,a:2,n:"VisitAtExpression",t:8,pi:[{n:"node",pt:$n[3].AtExpression,ps:0}],sn:"VisitAtExpression",rt:$n[2].Void,p:[$n[3].AtExpression]},{ov:!0,a:2,n:"VisitBadCommand",t:8,pi:[{n:"node",pt:$n[3].BadCommand,ps:0}],sn:"VisitBadCommand",rt:$n[2].Void,p:[$n[3].BadCommand]},{ov:!0,a:2,n:"VisitBadQueryOperator",t:8,pi:[{n:"node",pt:$n[3].BadQueryOperator,ps:0}],sn:"VisitBadQueryOperator",rt:$n[2].Void,p:[$n[3].BadQueryOperator]},{ov:!0,a:2,n:"VisitBetweenExpression",t:8,pi:[{n:"node",pt:$n[3].BetweenExpression,ps:0}],sn:"VisitBetweenExpression",rt:$n[2].Void,p:[$n[3].BetweenExpression]},{ov:!0,a:2,n:"VisitBinaryExpression",t:8,pi:[{n:"node",pt:$n[3].BinaryExpression,ps:0}],sn:"VisitBinaryExpression",rt:$n[2].Void,p:[$n[3].BinaryExpression]},{ov:!0,a:2,n:"VisitBracedName",t:8,pi:[{n:"node",pt:$n[3].BracedName,ps:0}],sn:"VisitBracedName",rt:$n[2].Void,p:[$n[3].BracedName]},{ov:!0,a:2,n:"VisitBracketedExpression",t:8,pi:[{n:"node",pt:$n[3].BracketedExpression,ps:0}],sn:"VisitBracketedExpression",rt:$n[2].Void,p:[$n[3].BracketedExpression]},{ov:!0,a:2,n:"VisitBracketedName",t:8,pi:[{n:"node",pt:$n[3].BracketedName,ps:0}],sn:"VisitBracketedName",rt:$n[2].Void,p:[$n[3].BracketedName]},{ov:!0,a:2,n:"VisitBracketedWildcardedName",t:8,pi:[{n:"node",pt:$n[3].BracketedWildcardedName,ps:0}],sn:"VisitBracketedWildcardedName",rt:$n[2].Void,p:[$n[3].BracketedWildcardedName]},{ov:!0,a:2,n:"VisitCommandBlock",t:8,pi:[{n:"node",pt:$n[3].CommandBlock,ps:0}],sn:"VisitCommandBlock",rt:$n[2].Void,p:[$n[3].CommandBlock]},{ov:!0,a:2,n:"VisitCommandWithPropertyListClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithPropertyListClause,ps:0}],sn:"VisitCommandWithPropertyListClause",rt:$n[2].Void,p:[$n[3].CommandWithPropertyListClause]},{ov:!0,a:2,n:"VisitCommandWithValueClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithValueClause,ps:0}],sn:"VisitCommandWithValueClause",rt:$n[2].Void,p:[$n[3].CommandWithValueClause]},{ov:!0,a:2,n:"VisitCompoundNamedExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundNamedExpression,ps:0}],sn:"VisitCompoundNamedExpression",rt:$n[2].Void,p:[$n[3].CompoundNamedExpression]},{ov:!0,a:2,n:"VisitCompoundStringLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundStringLiteralExpression,ps:0}],sn:"VisitCompoundStringLiteralExpression",rt:$n[2].Void,p:[$n[3].CompoundStringLiteralExpression]},{ov:!0,a:2,n:"VisitConsumeOperator",t:8,pi:[{n:"node",pt:$n[3].ConsumeOperator,ps:0}],sn:"VisitConsumeOperator",rt:$n[2].Void,p:[$n[3].ConsumeOperator]},{ov:!0,a:2,n:"VisitContextualDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].ContextualDataTableExpression,ps:0}],sn:"VisitContextualDataTableExpression",rt:$n[2].Void,p:[$n[3].ContextualDataTableExpression]},{ov:!0,a:2,n:"VisitCountAsIdentifierClause",t:8,pi:[{n:"node",pt:$n[3].CountAsIdentifierClause,ps:0}],sn:"VisitCountAsIdentifierClause",rt:$n[2].Void,p:[$n[3].CountAsIdentifierClause]},{ov:!0,a:2,n:"VisitCountOperator",t:8,pi:[{n:"node",pt:$n[3].CountOperator,ps:0}],sn:"VisitCountOperator",rt:$n[2].Void,p:[$n[3].CountOperator]},{ov:!0,a:2,n:"VisitCustom",t:8,pi:[{n:"node",pt:$n[3].CustomNode,ps:0}],sn:"VisitCustom",rt:$n[2].Void,p:[$n[3].CustomNode]},{ov:!0,a:2,n:"VisitCustomCommand",t:8,pi:[{n:"node",pt:$n[3].CustomCommand,ps:0}],sn:"VisitCustomCommand",rt:$n[2].Void,p:[$n[3].CustomCommand]},{ov:!0,a:2,n:"VisitDataScopeClause",t:8,pi:[{n:"node",pt:$n[3].DataScopeClause,ps:0}],sn:"VisitDataScopeClause",rt:$n[2].Void,p:[$n[3].DataScopeClause]},{ov:!0,a:2,n:"VisitDataScopeExpression",t:8,pi:[{n:"node",pt:$n[3].DataScopeExpression,ps:0}],sn:"VisitDataScopeExpression",rt:$n[2].Void,p:[$n[3].DataScopeExpression]},{ov:!0,a:2,n:"VisitDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].DataTableExpression,ps:0}],sn:"VisitDataTableExpression",rt:$n[2].Void,p:[$n[3].DataTableExpression]},{ov:!0,a:2,n:"VisitDefaultExpressionClause",t:8,pi:[{n:"node",pt:$n[3].DefaultExpressionClause,ps:0}],sn:"VisitDefaultExpressionClause",rt:$n[2].Void,p:[$n[3].DefaultExpressionClause]},{ov:!0,a:2,n:"VisitDefaultValueDeclaration",t:8,pi:[{n:"node",pt:$n[3].DefaultValueDeclaration,ps:0}],sn:"VisitDefaultValueDeclaration",rt:$n[2].Void,p:[$n[3].DefaultValueDeclaration]},{ov:!0,a:2,n:"VisitDirectiveBlock",t:8,pi:[{n:"node",pt:$n[3].DirectiveBlock,ps:0}],sn:"VisitDirectiveBlock",rt:$n[2].Void,p:[$n[3].DirectiveBlock]},{ov:!0,a:2,n:"VisitDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].DistinctOperator,ps:0}],sn:"VisitDistinctOperator",rt:$n[2].Void,p:[$n[3].DistinctOperator]},{ov:!0,a:2,n:"VisitDynamicExpression",t:8,pi:[{n:"node",pt:$n[3].DynamicExpression,ps:0}],sn:"VisitDynamicExpression",rt:$n[2].Void,p:[$n[3].DynamicExpression]},{ov:!0,a:2,n:"VisitElementExpression",t:8,pi:[{n:"node",pt:$n[3].ElementExpression,ps:0}],sn:"VisitElementExpression",rt:$n[2].Void,p:[$n[3].ElementExpression]},{ov:!0,a:2,n:"VisitEvaluateOperator",t:8,pi:[{n:"node",pt:$n[3].EvaluateOperator,ps:0}],sn:"VisitEvaluateOperator",rt:$n[2].Void,p:[$n[3].EvaluateOperator]},{ov:!0,a:2,n:"VisitEvaluateSchemaClause",t:8,pi:[{n:"node",pt:$n[3].EvaluateSchemaClause,ps:0}],sn:"VisitEvaluateSchemaClause",rt:$n[2].Void,p:[$n[3].EvaluateSchemaClause]},{ov:!0,a:2,n:"VisitExecuteAndCacheOperator",t:8,pi:[{n:"node",pt:$n[3].ExecuteAndCacheOperator,ps:0}],sn:"VisitExecuteAndCacheOperator",rt:$n[2].Void,p:[$n[3].ExecuteAndCacheOperator]},{ov:!0,a:2,n:"VisitExpressionCouple",t:8,pi:[{n:"node",pt:$n[3].ExpressionCouple,ps:0}],sn:"VisitExpressionCouple",rt:$n[2].Void,p:[$n[3].ExpressionCouple]},{ov:!0,a:2,n:"VisitExpressionList",t:8,pi:[{n:"node",pt:$n[3].ExpressionList,ps:0}],sn:"VisitExpressionList",rt:$n[2].Void,p:[$n[3].ExpressionList]},{ov:!0,a:2,n:"VisitExpressionStatement",t:8,pi:[{n:"node",pt:$n[3].ExpressionStatement,ps:0}],sn:"VisitExpressionStatement",rt:$n[2].Void,p:[$n[3].ExpressionStatement]},{ov:!0,a:2,n:"VisitExtendOperator",t:8,pi:[{n:"node",pt:$n[3].ExtendOperator,ps:0}],sn:"VisitExtendOperator",rt:$n[2].Void,p:[$n[3].ExtendOperator]},{ov:!0,a:2,n:"VisitExternalDataExpression",t:8,pi:[{n:"node",pt:$n[3].ExternalDataExpression,ps:0}],sn:"VisitExternalDataExpression",rt:$n[2].Void,p:[$n[3].ExternalDataExpression]},{ov:!0,a:2,n:"VisitExternalDataWithClause",t:8,pi:[{n:"node",pt:$n[3].ExternalDataWithClause,ps:0}],sn:"VisitExternalDataWithClause",rt:$n[2].Void,p:[$n[3].ExternalDataWithClause]},{ov:!0,a:2,n:"VisitFacetOperator",t:8,pi:[{n:"node",pt:$n[3].FacetOperator,ps:0}],sn:"VisitFacetOperator",rt:$n[2].Void,p:[$n[3].FacetOperator]},{ov:!0,a:2,n:"VisitFacetWithExpressionClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithExpressionClause,ps:0}],sn:"VisitFacetWithExpressionClause",rt:$n[2].Void,p:[$n[3].FacetWithExpressionClause]},{ov:!0,a:2,n:"VisitFacetWithOperatorClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithOperatorClause,ps:0}],sn:"VisitFacetWithOperatorClause",rt:$n[2].Void,p:[$n[3].FacetWithOperatorClause]},{ov:!0,a:2,n:"VisitFilterOperator",t:8,pi:[{n:"node",pt:$n[3].FilterOperator,ps:0}],sn:"VisitFilterOperator",rt:$n[2].Void,p:[$n[3].FilterOperator]},{ov:!0,a:2,n:"VisitFindInClause",t:8,pi:[{n:"node",pt:$n[3].FindInClause,ps:0}],sn:"VisitFindInClause",rt:$n[2].Void,p:[$n[3].FindInClause]},{ov:!0,a:2,n:"VisitFindOperator",t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"VisitFindOperator",rt:$n[2].Void,p:[$n[3].FindOperator]},{ov:!0,a:2,n:"VisitFindProjectClause",t:8,pi:[{n:"node",pt:$n[3].FindProjectClause,ps:0}],sn:"VisitFindProjectClause",rt:$n[2].Void,p:[$n[3].FindProjectClause]},{ov:!0,a:2,n:"VisitForkExpression",t:8,pi:[{n:"node",pt:$n[3].ForkExpression,ps:0}],sn:"VisitForkExpression",rt:$n[2].Void,p:[$n[3].ForkExpression]},{ov:!0,a:2,n:"VisitForkOperator",t:8,pi:[{n:"node",pt:$n[3].ForkOperator,ps:0}],sn:"VisitForkOperator",rt:$n[2].Void,p:[$n[3].ForkOperator]},{ov:!0,a:2,n:"VisitFunctionBody",t:8,pi:[{n:"node",pt:$n[3].FunctionBody,ps:0}],sn:"VisitFunctionBody",rt:$n[2].Void,p:[$n[3].FunctionBody]},{ov:!0,a:2,n:"VisitFunctionCallExpression",t:8,pi:[{n:"node",pt:$n[3].FunctionCallExpression,ps:0}],sn:"VisitFunctionCallExpression",rt:$n[2].Void,p:[$n[3].FunctionCallExpression]},{ov:!0,a:2,n:"VisitFunctionDeclaration",t:8,pi:[{n:"node",pt:$n[3].FunctionDeclaration,ps:0}],sn:"VisitFunctionDeclaration",rt:$n[2].Void,p:[$n[3].FunctionDeclaration]},{ov:!0,a:2,n:"VisitFunctionParameter",t:8,pi:[{n:"node",pt:$n[3].FunctionParameter,ps:0}],sn:"VisitFunctionParameter",rt:$n[2].Void,p:[$n[3].FunctionParameter]},{ov:!0,a:2,n:"VisitFunctionParameters",t:8,pi:[{n:"node",pt:$n[3].FunctionParameters,ps:0}],sn:"VisitFunctionParameters",rt:$n[2].Void,p:[$n[3].FunctionParameters]},{ov:!0,a:2,n:"VisitGetSchemaOperator",t:8,pi:[{n:"node",pt:$n[3].GetSchemaOperator,ps:0}],sn:"VisitGetSchemaOperator",rt:$n[2].Void,p:[$n[3].GetSchemaOperator]},{ov:!0,a:2,n:"VisitHasAllExpression",t:8,pi:[{n:"node",pt:$n[3].HasAllExpression,ps:0}],sn:"VisitHasAllExpression",rt:$n[2].Void,p:[$n[3].HasAllExpression]},{ov:!0,a:2,n:"VisitHasAnyExpression",t:8,pi:[{n:"node",pt:$n[3].HasAnyExpression,ps:0}],sn:"VisitHasAnyExpression",rt:$n[2].Void,p:[$n[3].HasAnyExpression]},{ov:!0,a:2,n:"VisitInExpression",t:8,pi:[{n:"node",pt:$n[3].InExpression,ps:0}],sn:"VisitInExpression",rt:$n[2].Void,p:[$n[3].InExpression]},{ov:!0,a:2,n:"VisitInvokeOperator",t:8,pi:[{n:"node",pt:$n[3].InvokeOperator,ps:0}],sn:"VisitInvokeOperator",rt:$n[2].Void,p:[$n[3].InvokeOperator]},{ov:!0,a:2,n:"VisitJoinOnClause",t:8,pi:[{n:"node",pt:$n[3].JoinOnClause,ps:0}],sn:"VisitJoinOnClause",rt:$n[2].Void,p:[$n[3].JoinOnClause]},{ov:!0,a:2,n:"VisitJoinOperator",t:8,pi:[{n:"node",pt:$n[3].JoinOperator,ps:0}],sn:"VisitJoinOperator",rt:$n[2].Void,p:[$n[3].JoinOperator]},{ov:!0,a:2,n:"VisitJoinWhereClause",t:8,pi:[{n:"node",pt:$n[3].JoinWhereClause,ps:0}],sn:"VisitJoinWhereClause",rt:$n[2].Void,p:[$n[3].JoinWhereClause]},{ov:!0,a:2,n:"VisitJsonArrayExpression",t:8,pi:[{n:"node",pt:$n[3].JsonArrayExpression,ps:0}],sn:"VisitJsonArrayExpression",rt:$n[2].Void,p:[$n[3].JsonArrayExpression]},{ov:!0,a:2,n:"VisitJsonObjectExpression",t:8,pi:[{n:"node",pt:$n[3].JsonObjectExpression,ps:0}],sn:"VisitJsonObjectExpression",rt:$n[2].Void,p:[$n[3].JsonObjectExpression]},{ov:!0,a:2,n:"VisitJsonPair",t:8,pi:[{n:"node",pt:$n[3].JsonPair,ps:0}],sn:"VisitJsonPair",rt:$n[2].Void,p:[$n[3].JsonPair]},{ov:!0,a:2,n:"VisitLetStatement",t:8,pi:[{n:"node",pt:$n[3].LetStatement,ps:0}],sn:"VisitLetStatement",rt:$n[2].Void,p:[$n[3].LetStatement]},{ov:!0,a:2,n:"VisitList",t:8,pi:[{n:"list",pt:$n[3].SyntaxList,ps:0}],sn:"VisitList",rt:$n[2].Void,p:[$n[3].SyntaxList]},{ov:!0,a:2,n:"VisitLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].LiteralExpression,ps:0}],sn:"VisitLiteralExpression",rt:$n[2].Void,p:[$n[3].LiteralExpression]},{ov:!0,a:2,n:"VisitLookupOperator",t:8,pi:[{n:"node",pt:$n[3].LookupOperator,ps:0}],sn:"VisitLookupOperator",rt:$n[2].Void,p:[$n[3].LookupOperator]},{ov:!0,a:2,n:"VisitMakeSeriesByClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesByClause,ps:0}],sn:"VisitMakeSeriesByClause",rt:$n[2].Void,p:[$n[3].MakeSeriesByClause]},{ov:!0,a:2,n:"VisitMakeSeriesExpression",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesExpression,ps:0}],sn:"VisitMakeSeriesExpression",rt:$n[2].Void,p:[$n[3].MakeSeriesExpression]},{ov:!0,a:2,n:"VisitMakeSeriesFromClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromClause,ps:0}],sn:"VisitMakeSeriesFromClause",rt:$n[2].Void,p:[$n[3].MakeSeriesFromClause]},{ov:!0,a:2,n:"VisitMakeSeriesFromToStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromToStepClause,ps:0}],sn:"VisitMakeSeriesFromToStepClause",rt:$n[2].Void,p:[$n[3].MakeSeriesFromToStepClause]},{ov:!0,a:2,n:"VisitMakeSeriesInRangeClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesInRangeClause,ps:0}],sn:"VisitMakeSeriesInRangeClause",rt:$n[2].Void,p:[$n[3].MakeSeriesInRangeClause]},{ov:!0,a:2,n:"VisitMakeSeriesOnClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOnClause,ps:0}],sn:"VisitMakeSeriesOnClause",rt:$n[2].Void,p:[$n[3].MakeSeriesOnClause]},{ov:!0,a:2,n:"VisitMakeSeriesOperator",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOperator,ps:0}],sn:"VisitMakeSeriesOperator",rt:$n[2].Void,p:[$n[3].MakeSeriesOperator]},{ov:!0,a:2,n:"VisitMakeSeriesStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesStepClause,ps:0}],sn:"VisitMakeSeriesStepClause",rt:$n[2].Void,p:[$n[3].MakeSeriesStepClause]},{ov:!0,a:2,n:"VisitMakeSeriesToClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesToClause,ps:0}],sn:"VisitMakeSeriesToClause",rt:$n[2].Void,p:[$n[3].MakeSeriesToClause]},{ov:!0,a:2,n:"VisitMaterializeExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializeExpression,ps:0}],sn:"VisitMaterializeExpression",rt:$n[2].Void,p:[$n[3].MaterializeExpression]},{ov:!0,a:2,n:"VisitMaterializedViewCombineClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineClause,ps:0}],sn:"VisitMaterializedViewCombineClause",rt:$n[2].Void,p:[$n[3].MaterializedViewCombineClause]},{ov:!0,a:2,n:"VisitMaterializedViewCombineExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineExpression,ps:0}],sn:"VisitMaterializedViewCombineExpression",rt:$n[2].Void,p:[$n[3].MaterializedViewCombineExpression]},{ov:!0,a:2,n:"VisitMaterializedViewCombineNameClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineNameClause,ps:0}],sn:"VisitMaterializedViewCombineNameClause",rt:$n[2].Void,p:[$n[3].MaterializedViewCombineNameClause]},{ov:!0,a:2,n:"VisitMvApplyContextIdClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyContextIdClause,ps:0}],sn:"VisitMvApplyContextIdClause",rt:$n[2].Void,p:[$n[3].MvApplyContextIdClause]},{ov:!0,a:2,n:"VisitMvApplyExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplyExpression,ps:0}],sn:"VisitMvApplyExpression",rt:$n[2].Void,p:[$n[3].MvApplyExpression]},{ov:!0,a:2,n:"VisitMvApplyOperator",t:8,pi:[{n:"node",pt:$n[3].MvApplyOperator,ps:0}],sn:"VisitMvApplyOperator",rt:$n[2].Void,p:[$n[3].MvApplyOperator]},{ov:!0,a:2,n:"VisitMvApplyRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyRowLimitClause,ps:0}],sn:"VisitMvApplyRowLimitClause",rt:$n[2].Void,p:[$n[3].MvApplyRowLimitClause]},{ov:!0,a:2,n:"VisitMvApplySubqueryExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplySubqueryExpression,ps:0}],sn:"VisitMvApplySubqueryExpression",rt:$n[2].Void,p:[$n[3].MvApplySubqueryExpression]},{ov:!0,a:2,n:"VisitMvExpandExpression",t:8,pi:[{n:"node",pt:$n[3].MvExpandExpression,ps:0}],sn:"VisitMvExpandExpression",rt:$n[2].Void,p:[$n[3].MvExpandExpression]},{ov:!0,a:2,n:"VisitMvExpandOperator",t:8,pi:[{n:"node",pt:$n[3].MvExpandOperator,ps:0}],sn:"VisitMvExpandOperator",rt:$n[2].Void,p:[$n[3].MvExpandOperator]},{ov:!0,a:2,n:"VisitMvExpandRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvExpandRowLimitClause,ps:0}],sn:"VisitMvExpandRowLimitClause",rt:$n[2].Void,p:[$n[3].MvExpandRowLimitClause]},{ov:!0,a:2,n:"VisitNameAndTypeDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameAndTypeDeclaration,ps:0}],sn:"VisitNameAndTypeDeclaration",rt:$n[2].Void,p:[$n[3].NameAndTypeDeclaration]},{ov:!0,a:2,n:"VisitNameDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameDeclaration,ps:0}],sn:"VisitNameDeclaration",rt:$n[2].Void,p:[$n[3].NameDeclaration]},{ov:!0,a:2,n:"VisitNameEqualsClause",t:8,pi:[{n:"node",pt:$n[3].NameEqualsClause,ps:0}],sn:"VisitNameEqualsClause",rt:$n[2].Void,p:[$n[3].NameEqualsClause]},{ov:!0,a:2,n:"VisitNameReference",t:8,pi:[{n:"node",pt:$n[3].NameReference,ps:0}],sn:"VisitNameReference",rt:$n[2].Void,p:[$n[3].NameReference]},{ov:!0,a:2,n:"VisitNameReferenceList",t:8,pi:[{n:"node",pt:$n[3].NameReferenceList,ps:0}],sn:"VisitNameReferenceList",rt:$n[2].Void,p:[$n[3].NameReferenceList]},{ov:!0,a:2,n:"VisitNamedParameter",t:8,pi:[{n:"node",pt:$n[3].NamedParameter,ps:0}],sn:"VisitNamedParameter",rt:$n[2].Void,p:[$n[3].NamedParameter]},{ov:!0,a:2,n:"VisitOptionValueClause",t:8,pi:[{n:"node",pt:$n[3].OptionValueClause,ps:0}],sn:"VisitOptionValueClause",rt:$n[2].Void,p:[$n[3].OptionValueClause]},{ov:!0,a:2,n:"VisitOrderedExpression",t:8,pi:[{n:"node",pt:$n[3].OrderedExpression,ps:0}],sn:"VisitOrderedExpression",rt:$n[2].Void,p:[$n[3].OrderedExpression]},{ov:!0,a:2,n:"VisitOrderingClause",t:8,pi:[{n:"node",pt:$n[3].OrderingClause,ps:0}],sn:"VisitOrderingClause",rt:$n[2].Void,p:[$n[3].OrderingClause]},{ov:!0,a:2,n:"VisitOrderingNullsClause",t:8,pi:[{n:"node",pt:$n[3].OrderingNullsClause,ps:0}],sn:"VisitOrderingNullsClause",rt:$n[2].Void,p:[$n[3].OrderingNullsClause]},{ov:!0,a:2,n:"VisitPackExpression",t:8,pi:[{n:"node",pt:$n[3].PackExpression,ps:0}],sn:"VisitPackExpression",rt:$n[2].Void,p:[$n[3].PackExpression]},{ov:!0,a:2,n:"VisitParenthesizedExpression",t:8,pi:[{n:"node",pt:$n[3].ParenthesizedExpression,ps:0}],sn:"VisitParenthesizedExpression",rt:$n[2].Void,p:[$n[3].ParenthesizedExpression]},{ov:!0,a:2,n:"VisitParseOperator",t:8,pi:[{n:"node",pt:$n[3].ParseOperator,ps:0}],sn:"VisitParseOperator",rt:$n[2].Void,p:[$n[3].ParseOperator]},{ov:!0,a:2,n:"VisitParseWhereOperator",t:8,pi:[{n:"node",pt:$n[3].ParseWhereOperator,ps:0}],sn:"VisitParseWhereOperator",rt:$n[2].Void,p:[$n[3].ParseWhereOperator]},{ov:!0,a:2,n:"VisitPartitionOperator",t:8,pi:[{n:"node",pt:$n[3].PartitionOperator,ps:0}],sn:"VisitPartitionOperator",rt:$n[2].Void,p:[$n[3].PartitionOperator]},{ov:!0,a:2,n:"VisitPartitionQuery",t:8,pi:[{n:"node",pt:$n[3].PartitionQuery,ps:0}],sn:"VisitPartitionQuery",rt:$n[2].Void,p:[$n[3].PartitionQuery]},{ov:!0,a:2,n:"VisitPartitionScope",t:8,pi:[{n:"node",pt:$n[3].PartitionScope,ps:0}],sn:"VisitPartitionScope",rt:$n[2].Void,p:[$n[3].PartitionScope]},{ov:!0,a:2,n:"VisitPartitionSubquery",t:8,pi:[{n:"node",pt:$n[3].PartitionSubquery,ps:0}],sn:"VisitPartitionSubquery",rt:$n[2].Void,p:[$n[3].PartitionSubquery]},{ov:!0,a:2,n:"VisitPathExpression",t:8,pi:[{n:"node",pt:$n[3].PathExpression,ps:0}],sn:"VisitPathExpression",rt:$n[2].Void,p:[$n[3].PathExpression]},{ov:!0,a:2,n:"VisitPatternDeclaration",t:8,pi:[{n:"node",pt:$n[3].PatternDeclaration,ps:0}],sn:"VisitPatternDeclaration",rt:$n[2].Void,p:[$n[3].PatternDeclaration]},{ov:!0,a:2,n:"VisitPatternMatch",t:8,pi:[{n:"node",pt:$n[3].PatternMatch,ps:0}],sn:"VisitPatternMatch",rt:$n[2].Void,p:[$n[3].PatternMatch]},{ov:!0,a:2,n:"VisitPatternPathParameter",t:8,pi:[{n:"node",pt:$n[3].PatternPathParameter,ps:0}],sn:"VisitPatternPathParameter",rt:$n[2].Void,p:[$n[3].PatternPathParameter]},{ov:!0,a:2,n:"VisitPatternPathValue",t:8,pi:[{n:"node",pt:$n[3].PatternPathValue,ps:0}],sn:"VisitPatternPathValue",rt:$n[2].Void,p:[$n[3].PatternPathValue]},{ov:!0,a:2,n:"VisitPatternStatement",t:8,pi:[{n:"node",pt:$n[3].PatternStatement,ps:0}],sn:"VisitPatternStatement",rt:$n[2].Void,p:[$n[3].PatternStatement]},{ov:!0,a:2,n:"VisitPipeExpression",t:8,pi:[{n:"node",pt:$n[3].PipeExpression,ps:0}],sn:"VisitPipeExpression",rt:$n[2].Void,p:[$n[3].PipeExpression]},{ov:!0,a:2,n:"VisitPrefixUnaryExpression",t:8,pi:[{n:"node",pt:$n[3].PrefixUnaryExpression,ps:0}],sn:"VisitPrefixUnaryExpression",rt:$n[2].Void,p:[$n[3].PrefixUnaryExpression]},{ov:!0,a:2,n:"VisitPrimitiveTypeExpression",t:8,pi:[{n:"node",pt:$n[3].PrimitiveTypeExpression,ps:0}],sn:"VisitPrimitiveTypeExpression",rt:$n[2].Void,p:[$n[3].PrimitiveTypeExpression]},{ov:!0,a:2,n:"VisitPrintOperator",t:8,pi:[{n:"node",pt:$n[3].PrintOperator,ps:0}],sn:"VisitPrintOperator",rt:$n[2].Void,p:[$n[3].PrintOperator]},{ov:!0,a:2,n:"VisitProjectAwayOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectAwayOperator,ps:0}],sn:"VisitProjectAwayOperator",rt:$n[2].Void,p:[$n[3].ProjectAwayOperator]},{ov:!0,a:2,n:"VisitProjectKeepOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectKeepOperator,ps:0}],sn:"VisitProjectKeepOperator",rt:$n[2].Void,p:[$n[3].ProjectKeepOperator]},{ov:!0,a:2,n:"VisitProjectOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectOperator,ps:0}],sn:"VisitProjectOperator",rt:$n[2].Void,p:[$n[3].ProjectOperator]},{ov:!0,a:2,n:"VisitProjectRenameOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectRenameOperator,ps:0}],sn:"VisitProjectRenameOperator",rt:$n[2].Void,p:[$n[3].ProjectRenameOperator]},{ov:!0,a:2,n:"VisitProjectReorderOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectReorderOperator,ps:0}],sn:"VisitProjectReorderOperator",rt:$n[2].Void,p:[$n[3].ProjectReorderOperator]},{ov:!0,a:2,n:"VisitQueryBlock",t:8,pi:[{n:"node",pt:$n[3].QueryBlock,ps:0}],sn:"VisitQueryBlock",rt:$n[2].Void,p:[$n[3].QueryBlock]},{ov:!0,a:2,n:"VisitQueryParametersStatement",t:8,pi:[{n:"node",pt:$n[3].QueryParametersStatement,ps:0}],sn:"VisitQueryParametersStatement",rt:$n[2].Void,p:[$n[3].QueryParametersStatement]},{ov:!0,a:2,n:"VisitRangeOperator",t:8,pi:[{n:"node",pt:$n[3].RangeOperator,ps:0}],sn:"VisitRangeOperator",rt:$n[2].Void,p:[$n[3].RangeOperator]},{ov:!0,a:2,n:"VisitReduceByOperator",t:8,pi:[{n:"node",pt:$n[3].ReduceByOperator,ps:0}],sn:"VisitReduceByOperator",rt:$n[2].Void,p:[$n[3].ReduceByOperator]},{ov:!0,a:2,n:"VisitReduceByWithClause",t:8,pi:[{n:"node",pt:$n[3].ReduceByWithClause,ps:0}],sn:"VisitReduceByWithClause",rt:$n[2].Void,p:[$n[3].ReduceByWithClause]},{ov:!0,a:2,n:"VisitRenameList",t:8,pi:[{n:"node",pt:$n[3].RenameList,ps:0}],sn:"VisitRenameList",rt:$n[2].Void,p:[$n[3].RenameList]},{ov:!0,a:2,n:"VisitRenderOperator",t:8,pi:[{n:"node",pt:$n[3].RenderOperator,ps:0}],sn:"VisitRenderOperator",rt:$n[2].Void,p:[$n[3].RenderOperator]},{ov:!0,a:2,n:"VisitRenderWithClause",t:8,pi:[{n:"node",pt:$n[3].RenderWithClause,ps:0}],sn:"VisitRenderWithClause",rt:$n[2].Void,p:[$n[3].RenderWithClause]},{ov:!0,a:2,n:"VisitRestrictStatement",t:8,pi:[{n:"node",pt:$n[3].RestrictStatement,ps:0}],sn:"VisitRestrictStatement",rt:$n[2].Void,p:[$n[3].RestrictStatement]},{ov:!0,a:2,n:"VisitSampleDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].SampleDistinctOperator,ps:0}],sn:"VisitSampleDistinctOperator",rt:$n[2].Void,p:[$n[3].SampleDistinctOperator]},{ov:!0,a:2,n:"VisitSampleOperator",t:8,pi:[{n:"node",pt:$n[3].SampleOperator,ps:0}],sn:"VisitSampleOperator",rt:$n[2].Void,p:[$n[3].SampleOperator]},{ov:!0,a:2,n:"VisitScanAssignment",t:8,pi:[{n:"node",pt:$n[3].ScanAssignment,ps:0}],sn:"VisitScanAssignment",rt:$n[2].Void,p:[$n[3].ScanAssignment]},{ov:!0,a:2,n:"VisitScanComputationClause",t:8,pi:[{n:"node",pt:$n[3].ScanComputationClause,ps:0}],sn:"VisitScanComputationClause",rt:$n[2].Void,p:[$n[3].ScanComputationClause]},{ov:!0,a:2,n:"VisitScanDeclareClause",t:8,pi:[{n:"node",pt:$n[3].ScanDeclareClause,ps:0}],sn:"VisitScanDeclareClause",rt:$n[2].Void,p:[$n[3].ScanDeclareClause]},{ov:!0,a:2,n:"VisitScanOperator",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"VisitScanOperator",rt:$n[2].Void,p:[$n[3].ScanOperator]},{ov:!0,a:2,n:"VisitScanOrderByClause",t:8,pi:[{n:"node",pt:$n[3].ScanOrderByClause,ps:0}],sn:"VisitScanOrderByClause",rt:$n[2].Void,p:[$n[3].ScanOrderByClause]},{ov:!0,a:2,n:"VisitScanPartitionByClause",t:8,pi:[{n:"node",pt:$n[3].ScanPartitionByClause,ps:0}],sn:"VisitScanPartitionByClause",rt:$n[2].Void,p:[$n[3].ScanPartitionByClause]},{ov:!0,a:2,n:"VisitScanStep",t:8,pi:[{n:"node",pt:$n[3].ScanStep,ps:0}],sn:"VisitScanStep",rt:$n[2].Void,p:[$n[3].ScanStep]},{ov:!0,a:2,n:"VisitSchemaTypeExpression",t:8,pi:[{n:"node",pt:$n[3].SchemaTypeExpression,ps:0}],sn:"VisitSchemaTypeExpression",rt:$n[2].Void,p:[$n[3].SchemaTypeExpression]},{ov:!0,a:2,n:"VisitSearchOperator",t:8,pi:[{n:"node",pt:$n[3].SearchOperator,ps:0}],sn:"VisitSearchOperator",rt:$n[2].Void,p:[$n[3].SearchOperator]},{ov:!0,a:2,n:"VisitSeparatedElement",t:8,pi:[{n:"separatedElement",pt:$n[3].SeparatedElement,ps:0}],sn:"VisitSeparatedElement",rt:$n[2].Void,p:[$n[3].SeparatedElement]},{ov:!0,a:2,n:"VisitSerializeOperator",t:8,pi:[{n:"node",pt:$n[3].SerializeOperator,ps:0}],sn:"VisitSerializeOperator",rt:$n[2].Void,p:[$n[3].SerializeOperator]},{ov:!0,a:2,n:"VisitSetOptionStatement",t:8,pi:[{n:"node",pt:$n[3].SetOptionStatement,ps:0}],sn:"VisitSetOptionStatement",rt:$n[2].Void,p:[$n[3].SetOptionStatement]},{ov:!0,a:2,n:"VisitSimpleNamedExpression",t:8,pi:[{n:"node",pt:$n[3].SimpleNamedExpression,ps:0}],sn:"VisitSimpleNamedExpression",rt:$n[2].Void,p:[$n[3].SimpleNamedExpression]},{ov:!0,a:2,n:"VisitSkippedTokens",t:8,pi:[{n:"node",pt:$n[3].SkippedTokens,ps:0}],sn:"VisitSkippedTokens",rt:$n[2].Void,p:[$n[3].SkippedTokens]},{ov:!0,a:2,n:"VisitSortOperator",t:8,pi:[{n:"node",pt:$n[3].SortOperator,ps:0}],sn:"VisitSortOperator",rt:$n[2].Void,p:[$n[3].SortOperator]},{ov:!0,a:2,n:"VisitStarExpression",t:8,pi:[{n:"node",pt:$n[3].StarExpression,ps:0}],sn:"VisitStarExpression",rt:$n[2].Void,p:[$n[3].StarExpression]},{ov:!0,a:2,n:"VisitSummarizeByClause",t:8,pi:[{n:"node",pt:$n[3].SummarizeByClause,ps:0}],sn:"VisitSummarizeByClause",rt:$n[2].Void,p:[$n[3].SummarizeByClause]},{ov:!0,a:2,n:"VisitSummarizeOperator",t:8,pi:[{n:"node",pt:$n[3].SummarizeOperator,ps:0}],sn:"VisitSummarizeOperator",rt:$n[2].Void,p:[$n[3].SummarizeOperator]},{ov:!0,a:2,n:"VisitTakeOperator",t:8,pi:[{n:"node",pt:$n[3].TakeOperator,ps:0}],sn:"VisitTakeOperator",rt:$n[2].Void,p:[$n[3].TakeOperator]},{ov:!0,a:2,n:"VisitToScalarExpression",t:8,pi:[{n:"node",pt:$n[3].ToScalarExpression,ps:0}],sn:"VisitToScalarExpression",rt:$n[2].Void,p:[$n[3].ToScalarExpression]},{ov:!0,a:2,n:"VisitToTableExpression",t:8,pi:[{n:"node",pt:$n[3].ToTableExpression,ps:0}],sn:"VisitToTableExpression",rt:$n[2].Void,p:[$n[3].ToTableExpression]},{ov:!0,a:2,n:"VisitToTypeOfClause",t:8,pi:[{n:"node",pt:$n[3].ToTypeOfClause,ps:0}],sn:"VisitToTypeOfClause",rt:$n[2].Void,p:[$n[3].ToTypeOfClause]},{ov:!0,a:2,n:"VisitTokenName",t:8,pi:[{n:"node",pt:$n[3].TokenName,ps:0}],sn:"VisitTokenName",rt:$n[2].Void,p:[$n[3].TokenName]},{ov:!0,a:2,n:"VisitTopHittersByClause",t:8,pi:[{n:"node",pt:$n[3].TopHittersByClause,ps:0}],sn:"VisitTopHittersByClause",rt:$n[2].Void,p:[$n[3].TopHittersByClause]},{ov:!0,a:2,n:"VisitTopHittersOperator",t:8,pi:[{n:"node",pt:$n[3].TopHittersOperator,ps:0}],sn:"VisitTopHittersOperator",rt:$n[2].Void,p:[$n[3].TopHittersOperator]},{ov:!0,a:2,n:"VisitTopNestedClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedClause,ps:0}],sn:"VisitTopNestedClause",rt:$n[2].Void,p:[$n[3].TopNestedClause]},{ov:!0,a:2,n:"VisitTopNestedOperator",t:8,pi:[{n:"node",pt:$n[3].TopNestedOperator,ps:0}],sn:"VisitTopNestedOperator",rt:$n[2].Void,p:[$n[3].TopNestedOperator]},{ov:!0,a:2,n:"VisitTopNestedWithOthersClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedWithOthersClause,ps:0}],sn:"VisitTopNestedWithOthersClause",rt:$n[2].Void,p:[$n[3].TopNestedWithOthersClause]},{ov:!0,a:2,n:"VisitTopOperator",t:8,pi:[{n:"node",pt:$n[3].TopOperator,ps:0}],sn:"VisitTopOperator",rt:$n[2].Void,p:[$n[3].TopOperator]},{ov:!0,a:2,n:"VisitTypeOfLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].TypeOfLiteralExpression,ps:0}],sn:"VisitTypeOfLiteralExpression",rt:$n[2].Void,p:[$n[3].TypeOfLiteralExpression]},{ov:!0,a:2,n:"VisitTypedColumnReference",t:8,pi:[{n:"node",pt:$n[3].TypedColumnReference,ps:0}],sn:"VisitTypedColumnReference",rt:$n[2].Void,p:[$n[3].TypedColumnReference]},{ov:!0,a:2,n:"VisitUnionOperator",t:8,pi:[{n:"node",pt:$n[3].UnionOperator,ps:0}],sn:"VisitUnionOperator",rt:$n[2].Void,p:[$n[3].UnionOperator]},{ov:!0,a:2,n:"VisitUnknownCommand",t:8,pi:[{n:"node",pt:$n[3].UnknownCommand,ps:0}],sn:"VisitUnknownCommand",rt:$n[2].Void,p:[$n[3].UnknownCommand]},{ov:!0,a:2,n:"VisitWildcardedName",t:8,pi:[{n:"node",pt:$n[3].WildcardedName,ps:0}],sn:"VisitWildcardedName",rt:$n[2].Void,p:[$n[3].WildcardedName]}]}},$n);$m("Kusto.Language.Syntax.SyntaxVisitor$1",function(TResult){return{att:1048705,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"VisitAliasStatement",t:8,pi:[{n:"node",pt:$n[3].AliasStatement,ps:0}],sn:"VisitAliasStatement",rt:TResult,p:[$n[3].AliasStatement]},{ab:!0,a:2,n:"VisitAsOperator",t:8,pi:[{n:"node",pt:$n[3].AsOperator,ps:0}],sn:"VisitAsOperator",rt:TResult,p:[$n[3].AsOperator]},{ab:!0,a:2,n:"VisitAtExpression",t:8,pi:[{n:"node",pt:$n[3].AtExpression,ps:0}],sn:"VisitAtExpression",rt:TResult,p:[$n[3].AtExpression]},{ab:!0,a:2,n:"VisitBadCommand",t:8,pi:[{n:"node",pt:$n[3].BadCommand,ps:0}],sn:"VisitBadCommand",rt:TResult,p:[$n[3].BadCommand]},{ab:!0,a:2,n:"VisitBadQueryOperator",t:8,pi:[{n:"node",pt:$n[3].BadQueryOperator,ps:0}],sn:"VisitBadQueryOperator",rt:TResult,p:[$n[3].BadQueryOperator]},{ab:!0,a:2,n:"VisitBetweenExpression",t:8,pi:[{n:"node",pt:$n[3].BetweenExpression,ps:0}],sn:"VisitBetweenExpression",rt:TResult,p:[$n[3].BetweenExpression]},{ab:!0,a:2,n:"VisitBinaryExpression",t:8,pi:[{n:"node",pt:$n[3].BinaryExpression,ps:0}],sn:"VisitBinaryExpression",rt:TResult,p:[$n[3].BinaryExpression]},{ab:!0,a:2,n:"VisitBracedName",t:8,pi:[{n:"node",pt:$n[3].BracedName,ps:0}],sn:"VisitBracedName",rt:TResult,p:[$n[3].BracedName]},{ab:!0,a:2,n:"VisitBracketedExpression",t:8,pi:[{n:"node",pt:$n[3].BracketedExpression,ps:0}],sn:"VisitBracketedExpression",rt:TResult,p:[$n[3].BracketedExpression]},{ab:!0,a:2,n:"VisitBracketedName",t:8,pi:[{n:"node",pt:$n[3].BracketedName,ps:0}],sn:"VisitBracketedName",rt:TResult,p:[$n[3].BracketedName]},{ab:!0,a:2,n:"VisitBracketedWildcardedName",t:8,pi:[{n:"node",pt:$n[3].BracketedWildcardedName,ps:0}],sn:"VisitBracketedWildcardedName",rt:TResult,p:[$n[3].BracketedWildcardedName]},{ab:!0,a:2,n:"VisitCommandBlock",t:8,pi:[{n:"node",pt:$n[3].CommandBlock,ps:0}],sn:"VisitCommandBlock",rt:TResult,p:[$n[3].CommandBlock]},{ab:!0,a:2,n:"VisitCommandWithPropertyListClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithPropertyListClause,ps:0}],sn:"VisitCommandWithPropertyListClause",rt:TResult,p:[$n[3].CommandWithPropertyListClause]},{ab:!0,a:2,n:"VisitCommandWithValueClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithValueClause,ps:0}],sn:"VisitCommandWithValueClause",rt:TResult,p:[$n[3].CommandWithValueClause]},{ab:!0,a:2,n:"VisitCompoundNamedExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundNamedExpression,ps:0}],sn:"VisitCompoundNamedExpression",rt:TResult,p:[$n[3].CompoundNamedExpression]},{ab:!0,a:2,n:"VisitCompoundStringLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundStringLiteralExpression,ps:0}],sn:"VisitCompoundStringLiteralExpression",rt:TResult,p:[$n[3].CompoundStringLiteralExpression]},{ab:!0,a:2,n:"VisitConsumeOperator",t:8,pi:[{n:"node",pt:$n[3].ConsumeOperator,ps:0}],sn:"VisitConsumeOperator",rt:TResult,p:[$n[3].ConsumeOperator]},{ab:!0,a:2,n:"VisitContextualDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].ContextualDataTableExpression,ps:0}],sn:"VisitContextualDataTableExpression",rt:TResult,p:[$n[3].ContextualDataTableExpression]},{ab:!0,a:2,n:"VisitCountAsIdentifierClause",t:8,pi:[{n:"node",pt:$n[3].CountAsIdentifierClause,ps:0}],sn:"VisitCountAsIdentifierClause",rt:TResult,p:[$n[3].CountAsIdentifierClause]},{ab:!0,a:2,n:"VisitCountOperator",t:8,pi:[{n:"node",pt:$n[3].CountOperator,ps:0}],sn:"VisitCountOperator",rt:TResult,p:[$n[3].CountOperator]},{ab:!0,a:2,n:"VisitCustom",t:8,pi:[{n:"node",pt:$n[3].CustomNode,ps:0}],sn:"VisitCustom",rt:TResult,p:[$n[3].CustomNode]},{ab:!0,a:2,n:"VisitCustomCommand",t:8,pi:[{n:"node",pt:$n[3].CustomCommand,ps:0}],sn:"VisitCustomCommand",rt:TResult,p:[$n[3].CustomCommand]},{ab:!0,a:2,n:"VisitDataScopeClause",t:8,pi:[{n:"node",pt:$n[3].DataScopeClause,ps:0}],sn:"VisitDataScopeClause",rt:TResult,p:[$n[3].DataScopeClause]},{ab:!0,a:2,n:"VisitDataScopeExpression",t:8,pi:[{n:"node",pt:$n[3].DataScopeExpression,ps:0}],sn:"VisitDataScopeExpression",rt:TResult,p:[$n[3].DataScopeExpression]},{ab:!0,a:2,n:"VisitDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].DataTableExpression,ps:0}],sn:"VisitDataTableExpression",rt:TResult,p:[$n[3].DataTableExpression]},{ab:!0,a:2,n:"VisitDefaultExpressionClause",t:8,pi:[{n:"node",pt:$n[3].DefaultExpressionClause,ps:0}],sn:"VisitDefaultExpressionClause",rt:TResult,p:[$n[3].DefaultExpressionClause]},{ab:!0,a:2,n:"VisitDefaultValueDeclaration",t:8,pi:[{n:"node",pt:$n[3].DefaultValueDeclaration,ps:0}],sn:"VisitDefaultValueDeclaration",rt:TResult,p:[$n[3].DefaultValueDeclaration]},{ab:!0,a:2,n:"VisitDirectiveBlock",t:8,pi:[{n:"node",pt:$n[3].DirectiveBlock,ps:0}],sn:"VisitDirectiveBlock",rt:TResult,p:[$n[3].DirectiveBlock]},{ab:!0,a:2,n:"VisitDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].DistinctOperator,ps:0}],sn:"VisitDistinctOperator",rt:TResult,p:[$n[3].DistinctOperator]},{ab:!0,a:2,n:"VisitDynamicExpression",t:8,pi:[{n:"node",pt:$n[3].DynamicExpression,ps:0}],sn:"VisitDynamicExpression",rt:TResult,p:[$n[3].DynamicExpression]},{ab:!0,a:2,n:"VisitElementExpression",t:8,pi:[{n:"node",pt:$n[3].ElementExpression,ps:0}],sn:"VisitElementExpression",rt:TResult,p:[$n[3].ElementExpression]},{ab:!0,a:2,n:"VisitEvaluateOperator",t:8,pi:[{n:"node",pt:$n[3].EvaluateOperator,ps:0}],sn:"VisitEvaluateOperator",rt:TResult,p:[$n[3].EvaluateOperator]},{ab:!0,a:2,n:"VisitEvaluateSchemaClause",t:8,pi:[{n:"node",pt:$n[3].EvaluateSchemaClause,ps:0}],sn:"VisitEvaluateSchemaClause",rt:TResult,p:[$n[3].EvaluateSchemaClause]},{ab:!0,a:2,n:"VisitExecuteAndCacheOperator",t:8,pi:[{n:"node",pt:$n[3].ExecuteAndCacheOperator,ps:0}],sn:"VisitExecuteAndCacheOperator",rt:TResult,p:[$n[3].ExecuteAndCacheOperator]},{ab:!0,a:2,n:"VisitExpressionCouple",t:8,pi:[{n:"node",pt:$n[3].ExpressionCouple,ps:0}],sn:"VisitExpressionCouple",rt:TResult,p:[$n[3].ExpressionCouple]},{ab:!0,a:2,n:"VisitExpressionList",t:8,pi:[{n:"node",pt:$n[3].ExpressionList,ps:0}],sn:"VisitExpressionList",rt:TResult,p:[$n[3].ExpressionList]},{ab:!0,a:2,n:"VisitExpressionStatement",t:8,pi:[{n:"node",pt:$n[3].ExpressionStatement,ps:0}],sn:"VisitExpressionStatement",rt:TResult,p:[$n[3].ExpressionStatement]},{ab:!0,a:2,n:"VisitExtendOperator",t:8,pi:[{n:"node",pt:$n[3].ExtendOperator,ps:0}],sn:"VisitExtendOperator",rt:TResult,p:[$n[3].ExtendOperator]},{ab:!0,a:2,n:"VisitExternalDataExpression",t:8,pi:[{n:"node",pt:$n[3].ExternalDataExpression,ps:0}],sn:"VisitExternalDataExpression",rt:TResult,p:[$n[3].ExternalDataExpression]},{ab:!0,a:2,n:"VisitExternalDataWithClause",t:8,pi:[{n:"node",pt:$n[3].ExternalDataWithClause,ps:0}],sn:"VisitExternalDataWithClause",rt:TResult,p:[$n[3].ExternalDataWithClause]},{ab:!0,a:2,n:"VisitFacetOperator",t:8,pi:[{n:"node",pt:$n[3].FacetOperator,ps:0}],sn:"VisitFacetOperator",rt:TResult,p:[$n[3].FacetOperator]},{ab:!0,a:2,n:"VisitFacetWithExpressionClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithExpressionClause,ps:0}],sn:"VisitFacetWithExpressionClause",rt:TResult,p:[$n[3].FacetWithExpressionClause]},{ab:!0,a:2,n:"VisitFacetWithOperatorClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithOperatorClause,ps:0}],sn:"VisitFacetWithOperatorClause",rt:TResult,p:[$n[3].FacetWithOperatorClause]},{ab:!0,a:2,n:"VisitFilterOperator",t:8,pi:[{n:"node",pt:$n[3].FilterOperator,ps:0}],sn:"VisitFilterOperator",rt:TResult,p:[$n[3].FilterOperator]},{ab:!0,a:2,n:"VisitFindInClause",t:8,pi:[{n:"node",pt:$n[3].FindInClause,ps:0}],sn:"VisitFindInClause",rt:TResult,p:[$n[3].FindInClause]},{ab:!0,a:2,n:"VisitFindOperator",t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"VisitFindOperator",rt:TResult,p:[$n[3].FindOperator]},{ab:!0,a:2,n:"VisitFindProjectClause",t:8,pi:[{n:"node",pt:$n[3].FindProjectClause,ps:0}],sn:"VisitFindProjectClause",rt:TResult,p:[$n[3].FindProjectClause]},{ab:!0,a:2,n:"VisitForkExpression",t:8,pi:[{n:"node",pt:$n[3].ForkExpression,ps:0}],sn:"VisitForkExpression",rt:TResult,p:[$n[3].ForkExpression]},{ab:!0,a:2,n:"VisitForkOperator",t:8,pi:[{n:"node",pt:$n[3].ForkOperator,ps:0}],sn:"VisitForkOperator",rt:TResult,p:[$n[3].ForkOperator]},{ab:!0,a:2,n:"VisitFunctionBody",t:8,pi:[{n:"node",pt:$n[3].FunctionBody,ps:0}],sn:"VisitFunctionBody",rt:TResult,p:[$n[3].FunctionBody]},{ab:!0,a:2,n:"VisitFunctionCallExpression",t:8,pi:[{n:"node",pt:$n[3].FunctionCallExpression,ps:0}],sn:"VisitFunctionCallExpression",rt:TResult,p:[$n[3].FunctionCallExpression]},{ab:!0,a:2,n:"VisitFunctionDeclaration",t:8,pi:[{n:"node",pt:$n[3].FunctionDeclaration,ps:0}],sn:"VisitFunctionDeclaration",rt:TResult,p:[$n[3].FunctionDeclaration]},{ab:!0,a:2,n:"VisitFunctionParameter",t:8,pi:[{n:"node",pt:$n[3].FunctionParameter,ps:0}],sn:"VisitFunctionParameter",rt:TResult,p:[$n[3].FunctionParameter]},{ab:!0,a:2,n:"VisitFunctionParameters",t:8,pi:[{n:"node",pt:$n[3].FunctionParameters,ps:0}],sn:"VisitFunctionParameters",rt:TResult,p:[$n[3].FunctionParameters]},{ab:!0,a:2,n:"VisitGetSchemaOperator",t:8,pi:[{n:"node",pt:$n[3].GetSchemaOperator,ps:0}],sn:"VisitGetSchemaOperator",rt:TResult,p:[$n[3].GetSchemaOperator]},{ab:!0,a:2,n:"VisitHasAllExpression",t:8,pi:[{n:"node",pt:$n[3].HasAllExpression,ps:0}],sn:"VisitHasAllExpression",rt:TResult,p:[$n[3].HasAllExpression]},{ab:!0,a:2,n:"VisitHasAnyExpression",t:8,pi:[{n:"node",pt:$n[3].HasAnyExpression,ps:0}],sn:"VisitHasAnyExpression",rt:TResult,p:[$n[3].HasAnyExpression]},{ab:!0,a:2,n:"VisitInExpression",t:8,pi:[{n:"node",pt:$n[3].InExpression,ps:0}],sn:"VisitInExpression",rt:TResult,p:[$n[3].InExpression]},{ab:!0,a:2,n:"VisitInvokeOperator",t:8,pi:[{n:"node",pt:$n[3].InvokeOperator,ps:0}],sn:"VisitInvokeOperator",rt:TResult,p:[$n[3].InvokeOperator]},{ab:!0,a:2,n:"VisitJoinOnClause",t:8,pi:[{n:"node",pt:$n[3].JoinOnClause,ps:0}],sn:"VisitJoinOnClause",rt:TResult,p:[$n[3].JoinOnClause]},{ab:!0,a:2,n:"VisitJoinOperator",t:8,pi:[{n:"node",pt:$n[3].JoinOperator,ps:0}],sn:"VisitJoinOperator",rt:TResult,p:[$n[3].JoinOperator]},{ab:!0,a:2,n:"VisitJoinWhereClause",t:8,pi:[{n:"node",pt:$n[3].JoinWhereClause,ps:0}],sn:"VisitJoinWhereClause",rt:TResult,p:[$n[3].JoinWhereClause]},{ab:!0,a:2,n:"VisitJsonArrayExpression",t:8,pi:[{n:"node",pt:$n[3].JsonArrayExpression,ps:0}],sn:"VisitJsonArrayExpression",rt:TResult,p:[$n[3].JsonArrayExpression]},{ab:!0,a:2,n:"VisitJsonObjectExpression",t:8,pi:[{n:"node",pt:$n[3].JsonObjectExpression,ps:0}],sn:"VisitJsonObjectExpression",rt:TResult,p:[$n[3].JsonObjectExpression]},{ab:!0,a:2,n:"VisitJsonPair",t:8,pi:[{n:"node",pt:$n[3].JsonPair,ps:0}],sn:"VisitJsonPair",rt:TResult,p:[$n[3].JsonPair]},{ab:!0,a:2,n:"VisitLetStatement",t:8,pi:[{n:"node",pt:$n[3].LetStatement,ps:0}],sn:"VisitLetStatement",rt:TResult,p:[$n[3].LetStatement]},{ab:!0,a:2,n:"VisitList",t:8,pi:[{n:"list",pt:$n[3].SyntaxList,ps:0}],sn:"VisitList",rt:TResult,p:[$n[3].SyntaxList]},{ab:!0,a:2,n:"VisitLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].LiteralExpression,ps:0}],sn:"VisitLiteralExpression",rt:TResult,p:[$n[3].LiteralExpression]},{ab:!0,a:2,n:"VisitLookupOperator",t:8,pi:[{n:"node",pt:$n[3].LookupOperator,ps:0}],sn:"VisitLookupOperator",rt:TResult,p:[$n[3].LookupOperator]},{ab:!0,a:2,n:"VisitMakeSeriesByClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesByClause,ps:0}],sn:"VisitMakeSeriesByClause",rt:TResult,p:[$n[3].MakeSeriesByClause]},{ab:!0,a:2,n:"VisitMakeSeriesExpression",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesExpression,ps:0}],sn:"VisitMakeSeriesExpression",rt:TResult,p:[$n[3].MakeSeriesExpression]},{ab:!0,a:2,n:"VisitMakeSeriesFromClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromClause,ps:0}],sn:"VisitMakeSeriesFromClause",rt:TResult,p:[$n[3].MakeSeriesFromClause]},{ab:!0,a:2,n:"VisitMakeSeriesFromToStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromToStepClause,ps:0}],sn:"VisitMakeSeriesFromToStepClause",rt:TResult,p:[$n[3].MakeSeriesFromToStepClause]},{ab:!0,a:2,n:"VisitMakeSeriesInRangeClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesInRangeClause,ps:0}],sn:"VisitMakeSeriesInRangeClause",rt:TResult,p:[$n[3].MakeSeriesInRangeClause]},{ab:!0,a:2,n:"VisitMakeSeriesOnClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOnClause,ps:0}],sn:"VisitMakeSeriesOnClause",rt:TResult,p:[$n[3].MakeSeriesOnClause]},{ab:!0,a:2,n:"VisitMakeSeriesOperator",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOperator,ps:0}],sn:"VisitMakeSeriesOperator",rt:TResult,p:[$n[3].MakeSeriesOperator]},{ab:!0,a:2,n:"VisitMakeSeriesStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesStepClause,ps:0}],sn:"VisitMakeSeriesStepClause",rt:TResult,p:[$n[3].MakeSeriesStepClause]},{ab:!0,a:2,n:"VisitMakeSeriesToClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesToClause,ps:0}],sn:"VisitMakeSeriesToClause",rt:TResult,p:[$n[3].MakeSeriesToClause]},{ab:!0,a:2,n:"VisitMaterializeExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializeExpression,ps:0}],sn:"VisitMaterializeExpression",rt:TResult,p:[$n[3].MaterializeExpression]},{ab:!0,a:2,n:"VisitMaterializedViewCombineClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineClause,ps:0}],sn:"VisitMaterializedViewCombineClause",rt:TResult,p:[$n[3].MaterializedViewCombineClause]},{ab:!0,a:2,n:"VisitMaterializedViewCombineExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineExpression,ps:0}],sn:"VisitMaterializedViewCombineExpression",rt:TResult,p:[$n[3].MaterializedViewCombineExpression]},{ab:!0,a:2,n:"VisitMaterializedViewCombineNameClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineNameClause,ps:0}],sn:"VisitMaterializedViewCombineNameClause",rt:TResult,p:[$n[3].MaterializedViewCombineNameClause]},{ab:!0,a:2,n:"VisitMvApplyContextIdClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyContextIdClause,ps:0}],sn:"VisitMvApplyContextIdClause",rt:TResult,p:[$n[3].MvApplyContextIdClause]},{ab:!0,a:2,n:"VisitMvApplyExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplyExpression,ps:0}],sn:"VisitMvApplyExpression",rt:TResult,p:[$n[3].MvApplyExpression]},{ab:!0,a:2,n:"VisitMvApplyOperator",t:8,pi:[{n:"node",pt:$n[3].MvApplyOperator,ps:0}],sn:"VisitMvApplyOperator",rt:TResult,p:[$n[3].MvApplyOperator]},{ab:!0,a:2,n:"VisitMvApplyRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyRowLimitClause,ps:0}],sn:"VisitMvApplyRowLimitClause",rt:TResult,p:[$n[3].MvApplyRowLimitClause]},{ab:!0,a:2,n:"VisitMvApplySubqueryExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplySubqueryExpression,ps:0}],sn:"VisitMvApplySubqueryExpression",rt:TResult,p:[$n[3].MvApplySubqueryExpression]},{ab:!0,a:2,n:"VisitMvExpandExpression",t:8,pi:[{n:"node",pt:$n[3].MvExpandExpression,ps:0}],sn:"VisitMvExpandExpression",rt:TResult,p:[$n[3].MvExpandExpression]},{ab:!0,a:2,n:"VisitMvExpandOperator",t:8,pi:[{n:"node",pt:$n[3].MvExpandOperator,ps:0}],sn:"VisitMvExpandOperator",rt:TResult,p:[$n[3].MvExpandOperator]},{ab:!0,a:2,n:"VisitMvExpandRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvExpandRowLimitClause,ps:0}],sn:"VisitMvExpandRowLimitClause",rt:TResult,p:[$n[3].MvExpandRowLimitClause]},{ab:!0,a:2,n:"VisitNameAndTypeDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameAndTypeDeclaration,ps:0}],sn:"VisitNameAndTypeDeclaration",rt:TResult,p:[$n[3].NameAndTypeDeclaration]},{ab:!0,a:2,n:"VisitNameDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameDeclaration,ps:0}],sn:"VisitNameDeclaration",rt:TResult,p:[$n[3].NameDeclaration]},{ab:!0,a:2,n:"VisitNameEqualsClause",t:8,pi:[{n:"node",pt:$n[3].NameEqualsClause,ps:0}],sn:"VisitNameEqualsClause",rt:TResult,p:[$n[3].NameEqualsClause]},{ab:!0,a:2,n:"VisitNameReference",t:8,pi:[{n:"node",pt:$n[3].NameReference,ps:0}],sn:"VisitNameReference",rt:TResult,p:[$n[3].NameReference]},{ab:!0,a:2,n:"VisitNameReferenceList",t:8,pi:[{n:"node",pt:$n[3].NameReferenceList,ps:0}],sn:"VisitNameReferenceList",rt:TResult,p:[$n[3].NameReferenceList]},{ab:!0,a:2,n:"VisitNamedParameter",t:8,pi:[{n:"node",pt:$n[3].NamedParameter,ps:0}],sn:"VisitNamedParameter",rt:TResult,p:[$n[3].NamedParameter]},{ab:!0,a:2,n:"VisitOptionValueClause",t:8,pi:[{n:"node",pt:$n[3].OptionValueClause,ps:0}],sn:"VisitOptionValueClause",rt:TResult,p:[$n[3].OptionValueClause]},{ab:!0,a:2,n:"VisitOrderedExpression",t:8,pi:[{n:"node",pt:$n[3].OrderedExpression,ps:0}],sn:"VisitOrderedExpression",rt:TResult,p:[$n[3].OrderedExpression]},{ab:!0,a:2,n:"VisitOrderingClause",t:8,pi:[{n:"node",pt:$n[3].OrderingClause,ps:0}],sn:"VisitOrderingClause",rt:TResult,p:[$n[3].OrderingClause]},{ab:!0,a:2,n:"VisitOrderingNullsClause",t:8,pi:[{n:"node",pt:$n[3].OrderingNullsClause,ps:0}],sn:"VisitOrderingNullsClause",rt:TResult,p:[$n[3].OrderingNullsClause]},{ab:!0,a:2,n:"VisitPackExpression",t:8,pi:[{n:"node",pt:$n[3].PackExpression,ps:0}],sn:"VisitPackExpression",rt:TResult,p:[$n[3].PackExpression]},{ab:!0,a:2,n:"VisitParenthesizedExpression",t:8,pi:[{n:"node",pt:$n[3].ParenthesizedExpression,ps:0}],sn:"VisitParenthesizedExpression",rt:TResult,p:[$n[3].ParenthesizedExpression]},{ab:!0,a:2,n:"VisitParseOperator",t:8,pi:[{n:"node",pt:$n[3].ParseOperator,ps:0}],sn:"VisitParseOperator",rt:TResult,p:[$n[3].ParseOperator]},{ab:!0,a:2,n:"VisitParseWhereOperator",t:8,pi:[{n:"node",pt:$n[3].ParseWhereOperator,ps:0}],sn:"VisitParseWhereOperator",rt:TResult,p:[$n[3].ParseWhereOperator]},{ab:!0,a:2,n:"VisitPartitionOperator",t:8,pi:[{n:"node",pt:$n[3].PartitionOperator,ps:0}],sn:"VisitPartitionOperator",rt:TResult,p:[$n[3].PartitionOperator]},{ab:!0,a:2,n:"VisitPartitionQuery",t:8,pi:[{n:"node",pt:$n[3].PartitionQuery,ps:0}],sn:"VisitPartitionQuery",rt:TResult,p:[$n[3].PartitionQuery]},{ab:!0,a:2,n:"VisitPartitionScope",t:8,pi:[{n:"node",pt:$n[3].PartitionScope,ps:0}],sn:"VisitPartitionScope",rt:TResult,p:[$n[3].PartitionScope]},{ab:!0,a:2,n:"VisitPartitionSubquery",t:8,pi:[{n:"node",pt:$n[3].PartitionSubquery,ps:0}],sn:"VisitPartitionSubquery",rt:TResult,p:[$n[3].PartitionSubquery]},{ab:!0,a:2,n:"VisitPathExpression",t:8,pi:[{n:"node",pt:$n[3].PathExpression,ps:0}],sn:"VisitPathExpression",rt:TResult,p:[$n[3].PathExpression]},{ab:!0,a:2,n:"VisitPatternDeclaration",t:8,pi:[{n:"node",pt:$n[3].PatternDeclaration,ps:0}],sn:"VisitPatternDeclaration",rt:TResult,p:[$n[3].PatternDeclaration]},{ab:!0,a:2,n:"VisitPatternMatch",t:8,pi:[{n:"node",pt:$n[3].PatternMatch,ps:0}],sn:"VisitPatternMatch",rt:TResult,p:[$n[3].PatternMatch]},{ab:!0,a:2,n:"VisitPatternPathParameter",t:8,pi:[{n:"node",pt:$n[3].PatternPathParameter,ps:0}],sn:"VisitPatternPathParameter",rt:TResult,p:[$n[3].PatternPathParameter]},{ab:!0,a:2,n:"VisitPatternPathValue",t:8,pi:[{n:"node",pt:$n[3].PatternPathValue,ps:0}],sn:"VisitPatternPathValue",rt:TResult,p:[$n[3].PatternPathValue]},{ab:!0,a:2,n:"VisitPatternStatement",t:8,pi:[{n:"node",pt:$n[3].PatternStatement,ps:0}],sn:"VisitPatternStatement",rt:TResult,p:[$n[3].PatternStatement]},{ab:!0,a:2,n:"VisitPipeExpression",t:8,pi:[{n:"node",pt:$n[3].PipeExpression,ps:0}],sn:"VisitPipeExpression",rt:TResult,p:[$n[3].PipeExpression]},{ab:!0,a:2,n:"VisitPrefixUnaryExpression",t:8,pi:[{n:"node",pt:$n[3].PrefixUnaryExpression,ps:0}],sn:"VisitPrefixUnaryExpression",rt:TResult,p:[$n[3].PrefixUnaryExpression]},{ab:!0,a:2,n:"VisitPrimitiveTypeExpression",t:8,pi:[{n:"node",pt:$n[3].PrimitiveTypeExpression,ps:0}],sn:"VisitPrimitiveTypeExpression",rt:TResult,p:[$n[3].PrimitiveTypeExpression]},{ab:!0,a:2,n:"VisitPrintOperator",t:8,pi:[{n:"node",pt:$n[3].PrintOperator,ps:0}],sn:"VisitPrintOperator",rt:TResult,p:[$n[3].PrintOperator]},{ab:!0,a:2,n:"VisitProjectAwayOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectAwayOperator,ps:0}],sn:"VisitProjectAwayOperator",rt:TResult,p:[$n[3].ProjectAwayOperator]},{ab:!0,a:2,n:"VisitProjectKeepOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectKeepOperator,ps:0}],sn:"VisitProjectKeepOperator",rt:TResult,p:[$n[3].ProjectKeepOperator]},{ab:!0,a:2,n:"VisitProjectOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectOperator,ps:0}],sn:"VisitProjectOperator",rt:TResult,p:[$n[3].ProjectOperator]},{ab:!0,a:2,n:"VisitProjectRenameOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectRenameOperator,ps:0}],sn:"VisitProjectRenameOperator",rt:TResult,p:[$n[3].ProjectRenameOperator]},{ab:!0,a:2,n:"VisitProjectReorderOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectReorderOperator,ps:0}],sn:"VisitProjectReorderOperator",rt:TResult,p:[$n[3].ProjectReorderOperator]},{ab:!0,a:2,n:"VisitQueryBlock",t:8,pi:[{n:"node",pt:$n[3].QueryBlock,ps:0}],sn:"VisitQueryBlock",rt:TResult,p:[$n[3].QueryBlock]},{ab:!0,a:2,n:"VisitQueryParametersStatement",t:8,pi:[{n:"node",pt:$n[3].QueryParametersStatement,ps:0}],sn:"VisitQueryParametersStatement",rt:TResult,p:[$n[3].QueryParametersStatement]},{ab:!0,a:2,n:"VisitRangeOperator",t:8,pi:[{n:"node",pt:$n[3].RangeOperator,ps:0}],sn:"VisitRangeOperator",rt:TResult,p:[$n[3].RangeOperator]},{ab:!0,a:2,n:"VisitReduceByOperator",t:8,pi:[{n:"node",pt:$n[3].ReduceByOperator,ps:0}],sn:"VisitReduceByOperator",rt:TResult,p:[$n[3].ReduceByOperator]},{ab:!0,a:2,n:"VisitReduceByWithClause",t:8,pi:[{n:"node",pt:$n[3].ReduceByWithClause,ps:0}],sn:"VisitReduceByWithClause",rt:TResult,p:[$n[3].ReduceByWithClause]},{ab:!0,a:2,n:"VisitRenameList",t:8,pi:[{n:"node",pt:$n[3].RenameList,ps:0}],sn:"VisitRenameList",rt:TResult,p:[$n[3].RenameList]},{ab:!0,a:2,n:"VisitRenderOperator",t:8,pi:[{n:"node",pt:$n[3].RenderOperator,ps:0}],sn:"VisitRenderOperator",rt:TResult,p:[$n[3].RenderOperator]},{ab:!0,a:2,n:"VisitRenderWithClause",t:8,pi:[{n:"node",pt:$n[3].RenderWithClause,ps:0}],sn:"VisitRenderWithClause",rt:TResult,p:[$n[3].RenderWithClause]},{ab:!0,a:2,n:"VisitRestrictStatement",t:8,pi:[{n:"node",pt:$n[3].RestrictStatement,ps:0}],sn:"VisitRestrictStatement",rt:TResult,p:[$n[3].RestrictStatement]},{ab:!0,a:2,n:"VisitSampleDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].SampleDistinctOperator,ps:0}],sn:"VisitSampleDistinctOperator",rt:TResult,p:[$n[3].SampleDistinctOperator]},{ab:!0,a:2,n:"VisitSampleOperator",t:8,pi:[{n:"node",pt:$n[3].SampleOperator,ps:0}],sn:"VisitSampleOperator",rt:TResult,p:[$n[3].SampleOperator]},{ab:!0,a:2,n:"VisitScanAssignment",t:8,pi:[{n:"node",pt:$n[3].ScanAssignment,ps:0}],sn:"VisitScanAssignment",rt:TResult,p:[$n[3].ScanAssignment]},{ab:!0,a:2,n:"VisitScanComputationClause",t:8,pi:[{n:"node",pt:$n[3].ScanComputationClause,ps:0}],sn:"VisitScanComputationClause",rt:TResult,p:[$n[3].ScanComputationClause]},{ab:!0,a:2,n:"VisitScanDeclareClause",t:8,pi:[{n:"node",pt:$n[3].ScanDeclareClause,ps:0}],sn:"VisitScanDeclareClause",rt:TResult,p:[$n[3].ScanDeclareClause]},{ab:!0,a:2,n:"VisitScanOperator",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"VisitScanOperator",rt:TResult,p:[$n[3].ScanOperator]},{ab:!0,a:2,n:"VisitScanOrderByClause",t:8,pi:[{n:"node",pt:$n[3].ScanOrderByClause,ps:0}],sn:"VisitScanOrderByClause",rt:TResult,p:[$n[3].ScanOrderByClause]},{ab:!0,a:2,n:"VisitScanPartitionByClause",t:8,pi:[{n:"node",pt:$n[3].ScanPartitionByClause,ps:0}],sn:"VisitScanPartitionByClause",rt:TResult,p:[$n[3].ScanPartitionByClause]},{ab:!0,a:2,n:"VisitScanStep",t:8,pi:[{n:"node",pt:$n[3].ScanStep,ps:0}],sn:"VisitScanStep",rt:TResult,p:[$n[3].ScanStep]},{ab:!0,a:2,n:"VisitSchemaTypeExpression",t:8,pi:[{n:"node",pt:$n[3].SchemaTypeExpression,ps:0}],sn:"VisitSchemaTypeExpression",rt:TResult,p:[$n[3].SchemaTypeExpression]},{ab:!0,a:2,n:"VisitSearchOperator",t:8,pi:[{n:"node",pt:$n[3].SearchOperator,ps:0}],sn:"VisitSearchOperator",rt:TResult,p:[$n[3].SearchOperator]},{ab:!0,a:2,n:"VisitSeparatedElement",t:8,pi:[{n:"separatedElement",pt:$n[3].SeparatedElement,ps:0}],sn:"VisitSeparatedElement",rt:TResult,p:[$n[3].SeparatedElement]},{ab:!0,a:2,n:"VisitSerializeOperator",t:8,pi:[{n:"node",pt:$n[3].SerializeOperator,ps:0}],sn:"VisitSerializeOperator",rt:TResult,p:[$n[3].SerializeOperator]},{ab:!0,a:2,n:"VisitSetOptionStatement",t:8,pi:[{n:"node",pt:$n[3].SetOptionStatement,ps:0}],sn:"VisitSetOptionStatement",rt:TResult,p:[$n[3].SetOptionStatement]},{ab:!0,a:2,n:"VisitSimpleNamedExpression",t:8,pi:[{n:"node",pt:$n[3].SimpleNamedExpression,ps:0}],sn:"VisitSimpleNamedExpression",rt:TResult,p:[$n[3].SimpleNamedExpression]},{ab:!0,a:2,n:"VisitSkippedTokens",t:8,pi:[{n:"node",pt:$n[3].SkippedTokens,ps:0}],sn:"VisitSkippedTokens",rt:TResult,p:[$n[3].SkippedTokens]},{ab:!0,a:2,n:"VisitSortOperator",t:8,pi:[{n:"node",pt:$n[3].SortOperator,ps:0}],sn:"VisitSortOperator",rt:TResult,p:[$n[3].SortOperator]},{ab:!0,a:2,n:"VisitStarExpression",t:8,pi:[{n:"node",pt:$n[3].StarExpression,ps:0}],sn:"VisitStarExpression",rt:TResult,p:[$n[3].StarExpression]},{ab:!0,a:2,n:"VisitSummarizeByClause",t:8,pi:[{n:"node",pt:$n[3].SummarizeByClause,ps:0}],sn:"VisitSummarizeByClause",rt:TResult,p:[$n[3].SummarizeByClause]},{ab:!0,a:2,n:"VisitSummarizeOperator",t:8,pi:[{n:"node",pt:$n[3].SummarizeOperator,ps:0}],sn:"VisitSummarizeOperator",rt:TResult,p:[$n[3].SummarizeOperator]},{ab:!0,a:2,n:"VisitTakeOperator",t:8,pi:[{n:"node",pt:$n[3].TakeOperator,ps:0}],sn:"VisitTakeOperator",rt:TResult,p:[$n[3].TakeOperator]},{ab:!0,a:2,n:"VisitToScalarExpression",t:8,pi:[{n:"node",pt:$n[3].ToScalarExpression,ps:0}],sn:"VisitToScalarExpression",rt:TResult,p:[$n[3].ToScalarExpression]},{ab:!0,a:2,n:"VisitToTableExpression",t:8,pi:[{n:"node",pt:$n[3].ToTableExpression,ps:0}],sn:"VisitToTableExpression",rt:TResult,p:[$n[3].ToTableExpression]},{ab:!0,a:2,n:"VisitToTypeOfClause",t:8,pi:[{n:"node",pt:$n[3].ToTypeOfClause,ps:0}],sn:"VisitToTypeOfClause",rt:TResult,p:[$n[3].ToTypeOfClause]},{ab:!0,a:2,n:"VisitTokenName",t:8,pi:[{n:"node",pt:$n[3].TokenName,ps:0}],sn:"VisitTokenName",rt:TResult,p:[$n[3].TokenName]},{ab:!0,a:2,n:"VisitTopHittersByClause",t:8,pi:[{n:"node",pt:$n[3].TopHittersByClause,ps:0}],sn:"VisitTopHittersByClause",rt:TResult,p:[$n[3].TopHittersByClause]},{ab:!0,a:2,n:"VisitTopHittersOperator",t:8,pi:[{n:"node",pt:$n[3].TopHittersOperator,ps:0}],sn:"VisitTopHittersOperator",rt:TResult,p:[$n[3].TopHittersOperator]},{ab:!0,a:2,n:"VisitTopNestedClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedClause,ps:0}],sn:"VisitTopNestedClause",rt:TResult,p:[$n[3].TopNestedClause]},{ab:!0,a:2,n:"VisitTopNestedOperator",t:8,pi:[{n:"node",pt:$n[3].TopNestedOperator,ps:0}],sn:"VisitTopNestedOperator",rt:TResult,p:[$n[3].TopNestedOperator]},{ab:!0,a:2,n:"VisitTopNestedWithOthersClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedWithOthersClause,ps:0}],sn:"VisitTopNestedWithOthersClause",rt:TResult,p:[$n[3].TopNestedWithOthersClause]},{ab:!0,a:2,n:"VisitTopOperator",t:8,pi:[{n:"node",pt:$n[3].TopOperator,ps:0}],sn:"VisitTopOperator",rt:TResult,p:[$n[3].TopOperator]},{ab:!0,a:2,n:"VisitTypeOfLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].TypeOfLiteralExpression,ps:0}],sn:"VisitTypeOfLiteralExpression",rt:TResult,p:[$n[3].TypeOfLiteralExpression]},{ab:!0,a:2,n:"VisitTypedColumnReference",t:8,pi:[{n:"node",pt:$n[3].TypedColumnReference,ps:0}],sn:"VisitTypedColumnReference",rt:TResult,p:[$n[3].TypedColumnReference]},{ab:!0,a:2,n:"VisitUnionOperator",t:8,pi:[{n:"node",pt:$n[3].UnionOperator,ps:0}],sn:"VisitUnionOperator",rt:TResult,p:[$n[3].UnionOperator]},{ab:!0,a:2,n:"VisitUnknownCommand",t:8,pi:[{n:"node",pt:$n[3].UnknownCommand,ps:0}],sn:"VisitUnknownCommand",rt:TResult,p:[$n[3].UnknownCommand]},{ab:!0,a:2,n:"VisitWildcardedName",t:8,pi:[{n:"node",pt:$n[3].WildcardedName,ps:0}],sn:"VisitWildcardedName",rt:TResult,p:[$n[3].WildcardedName]}]}},$n);$m("Kusto.Language.Syntax.DefaultSyntaxVisitor$1",function(TResult){return{att:1048705,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:3,n:"DefaultVisit",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"DefaultVisit",rt:TResult,p:[$n[3].SyntaxNode]},{ov:!0,a:2,n:"VisitAliasStatement",t:8,pi:[{n:"node",pt:$n[3].AliasStatement,ps:0}],sn:"VisitAliasStatement",rt:TResult,p:[$n[3].AliasStatement]},{ov:!0,a:2,n:"VisitAsOperator",t:8,pi:[{n:"node",pt:$n[3].AsOperator,ps:0}],sn:"VisitAsOperator",rt:TResult,p:[$n[3].AsOperator]},{ov:!0,a:2,n:"VisitAtExpression",t:8,pi:[{n:"node",pt:$n[3].AtExpression,ps:0}],sn:"VisitAtExpression",rt:TResult,p:[$n[3].AtExpression]},{ov:!0,a:2,n:"VisitBadCommand",t:8,pi:[{n:"node",pt:$n[3].BadCommand,ps:0}],sn:"VisitBadCommand",rt:TResult,p:[$n[3].BadCommand]},{ov:!0,a:2,n:"VisitBadQueryOperator",t:8,pi:[{n:"node",pt:$n[3].BadQueryOperator,ps:0}],sn:"VisitBadQueryOperator",rt:TResult,p:[$n[3].BadQueryOperator]},{ov:!0,a:2,n:"VisitBetweenExpression",t:8,pi:[{n:"node",pt:$n[3].BetweenExpression,ps:0}],sn:"VisitBetweenExpression",rt:TResult,p:[$n[3].BetweenExpression]},{ov:!0,a:2,n:"VisitBinaryExpression",t:8,pi:[{n:"node",pt:$n[3].BinaryExpression,ps:0}],sn:"VisitBinaryExpression",rt:TResult,p:[$n[3].BinaryExpression]},{ov:!0,a:2,n:"VisitBracedName",t:8,pi:[{n:"node",pt:$n[3].BracedName,ps:0}],sn:"VisitBracedName",rt:TResult,p:[$n[3].BracedName]},{ov:!0,a:2,n:"VisitBracketedExpression",t:8,pi:[{n:"node",pt:$n[3].BracketedExpression,ps:0}],sn:"VisitBracketedExpression",rt:TResult,p:[$n[3].BracketedExpression]},{ov:!0,a:2,n:"VisitBracketedName",t:8,pi:[{n:"node",pt:$n[3].BracketedName,ps:0}],sn:"VisitBracketedName",rt:TResult,p:[$n[3].BracketedName]},{ov:!0,a:2,n:"VisitBracketedWildcardedName",t:8,pi:[{n:"node",pt:$n[3].BracketedWildcardedName,ps:0}],sn:"VisitBracketedWildcardedName",rt:TResult,p:[$n[3].BracketedWildcardedName]},{ov:!0,a:2,n:"VisitCommandBlock",t:8,pi:[{n:"node",pt:$n[3].CommandBlock,ps:0}],sn:"VisitCommandBlock",rt:TResult,p:[$n[3].CommandBlock]},{ov:!0,a:2,n:"VisitCommandWithPropertyListClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithPropertyListClause,ps:0}],sn:"VisitCommandWithPropertyListClause",rt:TResult,p:[$n[3].CommandWithPropertyListClause]},{ov:!0,a:2,n:"VisitCommandWithValueClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithValueClause,ps:0}],sn:"VisitCommandWithValueClause",rt:TResult,p:[$n[3].CommandWithValueClause]},{ov:!0,a:2,n:"VisitCompoundNamedExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundNamedExpression,ps:0}],sn:"VisitCompoundNamedExpression",rt:TResult,p:[$n[3].CompoundNamedExpression]},{ov:!0,a:2,n:"VisitCompoundStringLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundStringLiteralExpression,ps:0}],sn:"VisitCompoundStringLiteralExpression",rt:TResult,p:[$n[3].CompoundStringLiteralExpression]},{ov:!0,a:2,n:"VisitConsumeOperator",t:8,pi:[{n:"node",pt:$n[3].ConsumeOperator,ps:0}],sn:"VisitConsumeOperator",rt:TResult,p:[$n[3].ConsumeOperator]},{ov:!0,a:2,n:"VisitContextualDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].ContextualDataTableExpression,ps:0}],sn:"VisitContextualDataTableExpression",rt:TResult,p:[$n[3].ContextualDataTableExpression]},{ov:!0,a:2,n:"VisitCountAsIdentifierClause",t:8,pi:[{n:"node",pt:$n[3].CountAsIdentifierClause,ps:0}],sn:"VisitCountAsIdentifierClause",rt:TResult,p:[$n[3].CountAsIdentifierClause]},{ov:!0,a:2,n:"VisitCountOperator",t:8,pi:[{n:"node",pt:$n[3].CountOperator,ps:0}],sn:"VisitCountOperator",rt:TResult,p:[$n[3].CountOperator]},{ov:!0,a:2,n:"VisitCustom",t:8,pi:[{n:"node",pt:$n[3].CustomNode,ps:0}],sn:"VisitCustom",rt:TResult,p:[$n[3].CustomNode]},{ov:!0,a:2,n:"VisitCustomCommand",t:8,pi:[{n:"node",pt:$n[3].CustomCommand,ps:0}],sn:"VisitCustomCommand",rt:TResult,p:[$n[3].CustomCommand]},{ov:!0,a:2,n:"VisitDataScopeClause",t:8,pi:[{n:"node",pt:$n[3].DataScopeClause,ps:0}],sn:"VisitDataScopeClause",rt:TResult,p:[$n[3].DataScopeClause]},{ov:!0,a:2,n:"VisitDataScopeExpression",t:8,pi:[{n:"node",pt:$n[3].DataScopeExpression,ps:0}],sn:"VisitDataScopeExpression",rt:TResult,p:[$n[3].DataScopeExpression]},{ov:!0,a:2,n:"VisitDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].DataTableExpression,ps:0}],sn:"VisitDataTableExpression",rt:TResult,p:[$n[3].DataTableExpression]},{ov:!0,a:2,n:"VisitDefaultExpressionClause",t:8,pi:[{n:"node",pt:$n[3].DefaultExpressionClause,ps:0}],sn:"VisitDefaultExpressionClause",rt:TResult,p:[$n[3].DefaultExpressionClause]},{ov:!0,a:2,n:"VisitDefaultValueDeclaration",t:8,pi:[{n:"node",pt:$n[3].DefaultValueDeclaration,ps:0}],sn:"VisitDefaultValueDeclaration",rt:TResult,p:[$n[3].DefaultValueDeclaration]},{ov:!0,a:2,n:"VisitDirectiveBlock",t:8,pi:[{n:"node",pt:$n[3].DirectiveBlock,ps:0}],sn:"VisitDirectiveBlock",rt:TResult,p:[$n[3].DirectiveBlock]},{ov:!0,a:2,n:"VisitDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].DistinctOperator,ps:0}],sn:"VisitDistinctOperator",rt:TResult,p:[$n[3].DistinctOperator]},{ov:!0,a:2,n:"VisitDynamicExpression",t:8,pi:[{n:"node",pt:$n[3].DynamicExpression,ps:0}],sn:"VisitDynamicExpression",rt:TResult,p:[$n[3].DynamicExpression]},{ov:!0,a:2,n:"VisitElementExpression",t:8,pi:[{n:"node",pt:$n[3].ElementExpression,ps:0}],sn:"VisitElementExpression",rt:TResult,p:[$n[3].ElementExpression]},{ov:!0,a:2,n:"VisitEvaluateOperator",t:8,pi:[{n:"node",pt:$n[3].EvaluateOperator,ps:0}],sn:"VisitEvaluateOperator",rt:TResult,p:[$n[3].EvaluateOperator]},{ov:!0,a:2,n:"VisitEvaluateSchemaClause",t:8,pi:[{n:"node",pt:$n[3].EvaluateSchemaClause,ps:0}],sn:"VisitEvaluateSchemaClause",rt:TResult,p:[$n[3].EvaluateSchemaClause]},{ov:!0,a:2,n:"VisitExecuteAndCacheOperator",t:8,pi:[{n:"node",pt:$n[3].ExecuteAndCacheOperator,ps:0}],sn:"VisitExecuteAndCacheOperator",rt:TResult,p:[$n[3].ExecuteAndCacheOperator]},{ov:!0,a:2,n:"VisitExpressionCouple",t:8,pi:[{n:"node",pt:$n[3].ExpressionCouple,ps:0}],sn:"VisitExpressionCouple",rt:TResult,p:[$n[3].ExpressionCouple]},{ov:!0,a:2,n:"VisitExpressionList",t:8,pi:[{n:"node",pt:$n[3].ExpressionList,ps:0}],sn:"VisitExpressionList",rt:TResult,p:[$n[3].ExpressionList]},{ov:!0,a:2,n:"VisitExpressionStatement",t:8,pi:[{n:"node",pt:$n[3].ExpressionStatement,ps:0}],sn:"VisitExpressionStatement",rt:TResult,p:[$n[3].ExpressionStatement]},{ov:!0,a:2,n:"VisitExtendOperator",t:8,pi:[{n:"node",pt:$n[3].ExtendOperator,ps:0}],sn:"VisitExtendOperator",rt:TResult,p:[$n[3].ExtendOperator]},{ov:!0,a:2,n:"VisitExternalDataExpression",t:8,pi:[{n:"node",pt:$n[3].ExternalDataExpression,ps:0}],sn:"VisitExternalDataExpression",rt:TResult,p:[$n[3].ExternalDataExpression]},{ov:!0,a:2,n:"VisitExternalDataWithClause",t:8,pi:[{n:"node",pt:$n[3].ExternalDataWithClause,ps:0}],sn:"VisitExternalDataWithClause",rt:TResult,p:[$n[3].ExternalDataWithClause]},{ov:!0,a:2,n:"VisitFacetOperator",t:8,pi:[{n:"node",pt:$n[3].FacetOperator,ps:0}],sn:"VisitFacetOperator",rt:TResult,p:[$n[3].FacetOperator]},{ov:!0,a:2,n:"VisitFacetWithExpressionClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithExpressionClause,ps:0}],sn:"VisitFacetWithExpressionClause",rt:TResult,p:[$n[3].FacetWithExpressionClause]},{ov:!0,a:2,n:"VisitFacetWithOperatorClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithOperatorClause,ps:0}],sn:"VisitFacetWithOperatorClause",rt:TResult,p:[$n[3].FacetWithOperatorClause]},{ov:!0,a:2,n:"VisitFilterOperator",t:8,pi:[{n:"node",pt:$n[3].FilterOperator,ps:0}],sn:"VisitFilterOperator",rt:TResult,p:[$n[3].FilterOperator]},{ov:!0,a:2,n:"VisitFindInClause",t:8,pi:[{n:"node",pt:$n[3].FindInClause,ps:0}],sn:"VisitFindInClause",rt:TResult,p:[$n[3].FindInClause]},{ov:!0,a:2,n:"VisitFindOperator",t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"VisitFindOperator",rt:TResult,p:[$n[3].FindOperator]},{ov:!0,a:2,n:"VisitFindProjectClause",t:8,pi:[{n:"node",pt:$n[3].FindProjectClause,ps:0}],sn:"VisitFindProjectClause",rt:TResult,p:[$n[3].FindProjectClause]},{ov:!0,a:2,n:"VisitForkExpression",t:8,pi:[{n:"node",pt:$n[3].ForkExpression,ps:0}],sn:"VisitForkExpression",rt:TResult,p:[$n[3].ForkExpression]},{ov:!0,a:2,n:"VisitForkOperator",t:8,pi:[{n:"node",pt:$n[3].ForkOperator,ps:0}],sn:"VisitForkOperator",rt:TResult,p:[$n[3].ForkOperator]},{ov:!0,a:2,n:"VisitFunctionBody",t:8,pi:[{n:"node",pt:$n[3].FunctionBody,ps:0}],sn:"VisitFunctionBody",rt:TResult,p:[$n[3].FunctionBody]},{ov:!0,a:2,n:"VisitFunctionCallExpression",t:8,pi:[{n:"node",pt:$n[3].FunctionCallExpression,ps:0}],sn:"VisitFunctionCallExpression",rt:TResult,p:[$n[3].FunctionCallExpression]},{ov:!0,a:2,n:"VisitFunctionDeclaration",t:8,pi:[{n:"node",pt:$n[3].FunctionDeclaration,ps:0}],sn:"VisitFunctionDeclaration",rt:TResult,p:[$n[3].FunctionDeclaration]},{ov:!0,a:2,n:"VisitFunctionParameter",t:8,pi:[{n:"node",pt:$n[3].FunctionParameter,ps:0}],sn:"VisitFunctionParameter",rt:TResult,p:[$n[3].FunctionParameter]},{ov:!0,a:2,n:"VisitFunctionParameters",t:8,pi:[{n:"node",pt:$n[3].FunctionParameters,ps:0}],sn:"VisitFunctionParameters",rt:TResult,p:[$n[3].FunctionParameters]},{ov:!0,a:2,n:"VisitGetSchemaOperator",t:8,pi:[{n:"node",pt:$n[3].GetSchemaOperator,ps:0}],sn:"VisitGetSchemaOperator",rt:TResult,p:[$n[3].GetSchemaOperator]},{ov:!0,a:2,n:"VisitHasAllExpression",t:8,pi:[{n:"node",pt:$n[3].HasAllExpression,ps:0}],sn:"VisitHasAllExpression",rt:TResult,p:[$n[3].HasAllExpression]},{ov:!0,a:2,n:"VisitHasAnyExpression",t:8,pi:[{n:"node",pt:$n[3].HasAnyExpression,ps:0}],sn:"VisitHasAnyExpression",rt:TResult,p:[$n[3].HasAnyExpression]},{ov:!0,a:2,n:"VisitInExpression",t:8,pi:[{n:"node",pt:$n[3].InExpression,ps:0}],sn:"VisitInExpression",rt:TResult,p:[$n[3].InExpression]},{ov:!0,a:2,n:"VisitInvokeOperator",t:8,pi:[{n:"node",pt:$n[3].InvokeOperator,ps:0}],sn:"VisitInvokeOperator",rt:TResult,p:[$n[3].InvokeOperator]},{ov:!0,a:2,n:"VisitJoinOnClause",t:8,pi:[{n:"node",pt:$n[3].JoinOnClause,ps:0}],sn:"VisitJoinOnClause",rt:TResult,p:[$n[3].JoinOnClause]},{ov:!0,a:2,n:"VisitJoinOperator",t:8,pi:[{n:"node",pt:$n[3].JoinOperator,ps:0}],sn:"VisitJoinOperator",rt:TResult,p:[$n[3].JoinOperator]},{ov:!0,a:2,n:"VisitJoinWhereClause",t:8,pi:[{n:"node",pt:$n[3].JoinWhereClause,ps:0}],sn:"VisitJoinWhereClause",rt:TResult,p:[$n[3].JoinWhereClause]},{ov:!0,a:2,n:"VisitJsonArrayExpression",t:8,pi:[{n:"node",pt:$n[3].JsonArrayExpression,ps:0}],sn:"VisitJsonArrayExpression",rt:TResult,p:[$n[3].JsonArrayExpression]},{ov:!0,a:2,n:"VisitJsonObjectExpression",t:8,pi:[{n:"node",pt:$n[3].JsonObjectExpression,ps:0}],sn:"VisitJsonObjectExpression",rt:TResult,p:[$n[3].JsonObjectExpression]},{ov:!0,a:2,n:"VisitJsonPair",t:8,pi:[{n:"node",pt:$n[3].JsonPair,ps:0}],sn:"VisitJsonPair",rt:TResult,p:[$n[3].JsonPair]},{ov:!0,a:2,n:"VisitLetStatement",t:8,pi:[{n:"node",pt:$n[3].LetStatement,ps:0}],sn:"VisitLetStatement",rt:TResult,p:[$n[3].LetStatement]},{ov:!0,a:2,n:"VisitList",t:8,pi:[{n:"list",pt:$n[3].SyntaxList,ps:0}],sn:"VisitList",rt:TResult,p:[$n[3].SyntaxList]},{ov:!0,a:2,n:"VisitLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].LiteralExpression,ps:0}],sn:"VisitLiteralExpression",rt:TResult,p:[$n[3].LiteralExpression]},{ov:!0,a:2,n:"VisitLookupOperator",t:8,pi:[{n:"node",pt:$n[3].LookupOperator,ps:0}],sn:"VisitLookupOperator",rt:TResult,p:[$n[3].LookupOperator]},{ov:!0,a:2,n:"VisitMakeSeriesByClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesByClause,ps:0}],sn:"VisitMakeSeriesByClause",rt:TResult,p:[$n[3].MakeSeriesByClause]},{ov:!0,a:2,n:"VisitMakeSeriesExpression",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesExpression,ps:0}],sn:"VisitMakeSeriesExpression",rt:TResult,p:[$n[3].MakeSeriesExpression]},{ov:!0,a:2,n:"VisitMakeSeriesFromClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromClause,ps:0}],sn:"VisitMakeSeriesFromClause",rt:TResult,p:[$n[3].MakeSeriesFromClause]},{ov:!0,a:2,n:"VisitMakeSeriesFromToStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromToStepClause,ps:0}],sn:"VisitMakeSeriesFromToStepClause",rt:TResult,p:[$n[3].MakeSeriesFromToStepClause]},{ov:!0,a:2,n:"VisitMakeSeriesInRangeClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesInRangeClause,ps:0}],sn:"VisitMakeSeriesInRangeClause",rt:TResult,p:[$n[3].MakeSeriesInRangeClause]},{ov:!0,a:2,n:"VisitMakeSeriesOnClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOnClause,ps:0}],sn:"VisitMakeSeriesOnClause",rt:TResult,p:[$n[3].MakeSeriesOnClause]},{ov:!0,a:2,n:"VisitMakeSeriesOperator",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOperator,ps:0}],sn:"VisitMakeSeriesOperator",rt:TResult,p:[$n[3].MakeSeriesOperator]},{ov:!0,a:2,n:"VisitMakeSeriesStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesStepClause,ps:0}],sn:"VisitMakeSeriesStepClause",rt:TResult,p:[$n[3].MakeSeriesStepClause]},{ov:!0,a:2,n:"VisitMakeSeriesToClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesToClause,ps:0}],sn:"VisitMakeSeriesToClause",rt:TResult,p:[$n[3].MakeSeriesToClause]},{ov:!0,a:2,n:"VisitMaterializeExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializeExpression,ps:0}],sn:"VisitMaterializeExpression",rt:TResult,p:[$n[3].MaterializeExpression]},{ov:!0,a:2,n:"VisitMaterializedViewCombineClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineClause,ps:0}],sn:"VisitMaterializedViewCombineClause",rt:TResult,p:[$n[3].MaterializedViewCombineClause]},{ov:!0,a:2,n:"VisitMaterializedViewCombineExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineExpression,ps:0}],sn:"VisitMaterializedViewCombineExpression",rt:TResult,p:[$n[3].MaterializedViewCombineExpression]},{ov:!0,a:2,n:"VisitMaterializedViewCombineNameClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineNameClause,ps:0}],sn:"VisitMaterializedViewCombineNameClause",rt:TResult,p:[$n[3].MaterializedViewCombineNameClause]},{ov:!0,a:2,n:"VisitMvApplyContextIdClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyContextIdClause,ps:0}],sn:"VisitMvApplyContextIdClause",rt:TResult,p:[$n[3].MvApplyContextIdClause]},{ov:!0,a:2,n:"VisitMvApplyExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplyExpression,ps:0}],sn:"VisitMvApplyExpression",rt:TResult,p:[$n[3].MvApplyExpression]},{ov:!0,a:2,n:"VisitMvApplyOperator",t:8,pi:[{n:"node",pt:$n[3].MvApplyOperator,ps:0}],sn:"VisitMvApplyOperator",rt:TResult,p:[$n[3].MvApplyOperator]},{ov:!0,a:2,n:"VisitMvApplyRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyRowLimitClause,ps:0}],sn:"VisitMvApplyRowLimitClause",rt:TResult,p:[$n[3].MvApplyRowLimitClause]},{ov:!0,a:2,n:"VisitMvApplySubqueryExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplySubqueryExpression,ps:0}],sn:"VisitMvApplySubqueryExpression",rt:TResult,p:[$n[3].MvApplySubqueryExpression]},{ov:!0,a:2,n:"VisitMvExpandExpression",t:8,pi:[{n:"node",pt:$n[3].MvExpandExpression,ps:0}],sn:"VisitMvExpandExpression",rt:TResult,p:[$n[3].MvExpandExpression]},{ov:!0,a:2,n:"VisitMvExpandOperator",t:8,pi:[{n:"node",pt:$n[3].MvExpandOperator,ps:0}],sn:"VisitMvExpandOperator",rt:TResult,p:[$n[3].MvExpandOperator]},{ov:!0,a:2,n:"VisitMvExpandRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvExpandRowLimitClause,ps:0}],sn:"VisitMvExpandRowLimitClause",rt:TResult,p:[$n[3].MvExpandRowLimitClause]},{ov:!0,a:2,n:"VisitNameAndTypeDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameAndTypeDeclaration,ps:0}],sn:"VisitNameAndTypeDeclaration",rt:TResult,p:[$n[3].NameAndTypeDeclaration]},{ov:!0,a:2,n:"VisitNameDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameDeclaration,ps:0}],sn:"VisitNameDeclaration",rt:TResult,p:[$n[3].NameDeclaration]},{ov:!0,a:2,n:"VisitNameEqualsClause",t:8,pi:[{n:"node",pt:$n[3].NameEqualsClause,ps:0}],sn:"VisitNameEqualsClause",rt:TResult,p:[$n[3].NameEqualsClause]},{ov:!0,a:2,n:"VisitNameReference",t:8,pi:[{n:"node",pt:$n[3].NameReference,ps:0}],sn:"VisitNameReference",rt:TResult,p:[$n[3].NameReference]},{ov:!0,a:2,n:"VisitNameReferenceList",t:8,pi:[{n:"node",pt:$n[3].NameReferenceList,ps:0}],sn:"VisitNameReferenceList",rt:TResult,p:[$n[3].NameReferenceList]},{ov:!0,a:2,n:"VisitNamedParameter",t:8,pi:[{n:"node",pt:$n[3].NamedParameter,ps:0}],sn:"VisitNamedParameter",rt:TResult,p:[$n[3].NamedParameter]},{ov:!0,a:2,n:"VisitOptionValueClause",t:8,pi:[{n:"node",pt:$n[3].OptionValueClause,ps:0}],sn:"VisitOptionValueClause",rt:TResult,p:[$n[3].OptionValueClause]},{ov:!0,a:2,n:"VisitOrderedExpression",t:8,pi:[{n:"node",pt:$n[3].OrderedExpression,ps:0}],sn:"VisitOrderedExpression",rt:TResult,p:[$n[3].OrderedExpression]},{ov:!0,a:2,n:"VisitOrderingClause",t:8,pi:[{n:"node",pt:$n[3].OrderingClause,ps:0}],sn:"VisitOrderingClause",rt:TResult,p:[$n[3].OrderingClause]},{ov:!0,a:2,n:"VisitOrderingNullsClause",t:8,pi:[{n:"node",pt:$n[3].OrderingNullsClause,ps:0}],sn:"VisitOrderingNullsClause",rt:TResult,p:[$n[3].OrderingNullsClause]},{ov:!0,a:2,n:"VisitPackExpression",t:8,pi:[{n:"node",pt:$n[3].PackExpression,ps:0}],sn:"VisitPackExpression",rt:TResult,p:[$n[3].PackExpression]},{ov:!0,a:2,n:"VisitParenthesizedExpression",t:8,pi:[{n:"node",pt:$n[3].ParenthesizedExpression,ps:0}],sn:"VisitParenthesizedExpression",rt:TResult,p:[$n[3].ParenthesizedExpression]},{ov:!0,a:2,n:"VisitParseOperator",t:8,pi:[{n:"node",pt:$n[3].ParseOperator,ps:0}],sn:"VisitParseOperator",rt:TResult,p:[$n[3].ParseOperator]},{ov:!0,a:2,n:"VisitParseWhereOperator",t:8,pi:[{n:"node",pt:$n[3].ParseWhereOperator,ps:0}],sn:"VisitParseWhereOperator",rt:TResult,p:[$n[3].ParseWhereOperator]},{ov:!0,a:2,n:"VisitPartitionOperator",t:8,pi:[{n:"node",pt:$n[3].PartitionOperator,ps:0}],sn:"VisitPartitionOperator",rt:TResult,p:[$n[3].PartitionOperator]},{ov:!0,a:2,n:"VisitPartitionQuery",t:8,pi:[{n:"node",pt:$n[3].PartitionQuery,ps:0}],sn:"VisitPartitionQuery",rt:TResult,p:[$n[3].PartitionQuery]},{ov:!0,a:2,n:"VisitPartitionScope",t:8,pi:[{n:"node",pt:$n[3].PartitionScope,ps:0}],sn:"VisitPartitionScope",rt:TResult,p:[$n[3].PartitionScope]},{ov:!0,a:2,n:"VisitPartitionSubquery",t:8,pi:[{n:"node",pt:$n[3].PartitionSubquery,ps:0}],sn:"VisitPartitionSubquery",rt:TResult,p:[$n[3].PartitionSubquery]},{ov:!0,a:2,n:"VisitPathExpression",t:8,pi:[{n:"node",pt:$n[3].PathExpression,ps:0}],sn:"VisitPathExpression",rt:TResult,p:[$n[3].PathExpression]},{ov:!0,a:2,n:"VisitPatternDeclaration",t:8,pi:[{n:"node",pt:$n[3].PatternDeclaration,ps:0}],sn:"VisitPatternDeclaration",rt:TResult,p:[$n[3].PatternDeclaration]},{ov:!0,a:2,n:"VisitPatternMatch",t:8,pi:[{n:"node",pt:$n[3].PatternMatch,ps:0}],sn:"VisitPatternMatch",rt:TResult,p:[$n[3].PatternMatch]},{ov:!0,a:2,n:"VisitPatternPathParameter",t:8,pi:[{n:"node",pt:$n[3].PatternPathParameter,ps:0}],sn:"VisitPatternPathParameter",rt:TResult,p:[$n[3].PatternPathParameter]},{ov:!0,a:2,n:"VisitPatternPathValue",t:8,pi:[{n:"node",pt:$n[3].PatternPathValue,ps:0}],sn:"VisitPatternPathValue",rt:TResult,p:[$n[3].PatternPathValue]},{ov:!0,a:2,n:"VisitPatternStatement",t:8,pi:[{n:"node",pt:$n[3].PatternStatement,ps:0}],sn:"VisitPatternStatement",rt:TResult,p:[$n[3].PatternStatement]},{ov:!0,a:2,n:"VisitPipeExpression",t:8,pi:[{n:"node",pt:$n[3].PipeExpression,ps:0}],sn:"VisitPipeExpression",rt:TResult,p:[$n[3].PipeExpression]},{ov:!0,a:2,n:"VisitPrefixUnaryExpression",t:8,pi:[{n:"node",pt:$n[3].PrefixUnaryExpression,ps:0}],sn:"VisitPrefixUnaryExpression",rt:TResult,p:[$n[3].PrefixUnaryExpression]},{ov:!0,a:2,n:"VisitPrimitiveTypeExpression",t:8,pi:[{n:"node",pt:$n[3].PrimitiveTypeExpression,ps:0}],sn:"VisitPrimitiveTypeExpression",rt:TResult,p:[$n[3].PrimitiveTypeExpression]},{ov:!0,a:2,n:"VisitPrintOperator",t:8,pi:[{n:"node",pt:$n[3].PrintOperator,ps:0}],sn:"VisitPrintOperator",rt:TResult,p:[$n[3].PrintOperator]},{ov:!0,a:2,n:"VisitProjectAwayOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectAwayOperator,ps:0}],sn:"VisitProjectAwayOperator",rt:TResult,p:[$n[3].ProjectAwayOperator]},{ov:!0,a:2,n:"VisitProjectKeepOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectKeepOperator,ps:0}],sn:"VisitProjectKeepOperator",rt:TResult,p:[$n[3].ProjectKeepOperator]},{ov:!0,a:2,n:"VisitProjectOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectOperator,ps:0}],sn:"VisitProjectOperator",rt:TResult,p:[$n[3].ProjectOperator]},{ov:!0,a:2,n:"VisitProjectRenameOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectRenameOperator,ps:0}],sn:"VisitProjectRenameOperator",rt:TResult,p:[$n[3].ProjectRenameOperator]},{ov:!0,a:2,n:"VisitProjectReorderOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectReorderOperator,ps:0}],sn:"VisitProjectReorderOperator",rt:TResult,p:[$n[3].ProjectReorderOperator]},{ov:!0,a:2,n:"VisitQueryBlock",t:8,pi:[{n:"node",pt:$n[3].QueryBlock,ps:0}],sn:"VisitQueryBlock",rt:TResult,p:[$n[3].QueryBlock]},{ov:!0,a:2,n:"VisitQueryParametersStatement",t:8,pi:[{n:"node",pt:$n[3].QueryParametersStatement,ps:0}],sn:"VisitQueryParametersStatement",rt:TResult,p:[$n[3].QueryParametersStatement]},{ov:!0,a:2,n:"VisitRangeOperator",t:8,pi:[{n:"node",pt:$n[3].RangeOperator,ps:0}],sn:"VisitRangeOperator",rt:TResult,p:[$n[3].RangeOperator]},{ov:!0,a:2,n:"VisitReduceByOperator",t:8,pi:[{n:"node",pt:$n[3].ReduceByOperator,ps:0}],sn:"VisitReduceByOperator",rt:TResult,p:[$n[3].ReduceByOperator]},{ov:!0,a:2,n:"VisitReduceByWithClause",t:8,pi:[{n:"node",pt:$n[3].ReduceByWithClause,ps:0}],sn:"VisitReduceByWithClause",rt:TResult,p:[$n[3].ReduceByWithClause]},{ov:!0,a:2,n:"VisitRenameList",t:8,pi:[{n:"node",pt:$n[3].RenameList,ps:0}],sn:"VisitRenameList",rt:TResult,p:[$n[3].RenameList]},{ov:!0,a:2,n:"VisitRenderOperator",t:8,pi:[{n:"node",pt:$n[3].RenderOperator,ps:0}],sn:"VisitRenderOperator",rt:TResult,p:[$n[3].RenderOperator]},{ov:!0,a:2,n:"VisitRenderWithClause",t:8,pi:[{n:"node",pt:$n[3].RenderWithClause,ps:0}],sn:"VisitRenderWithClause",rt:TResult,p:[$n[3].RenderWithClause]},{ov:!0,a:2,n:"VisitRestrictStatement",t:8,pi:[{n:"node",pt:$n[3].RestrictStatement,ps:0}],sn:"VisitRestrictStatement",rt:TResult,p:[$n[3].RestrictStatement]},{ov:!0,a:2,n:"VisitSampleDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].SampleDistinctOperator,ps:0}],sn:"VisitSampleDistinctOperator",rt:TResult,p:[$n[3].SampleDistinctOperator]},{ov:!0,a:2,n:"VisitSampleOperator",t:8,pi:[{n:"node",pt:$n[3].SampleOperator,ps:0}],sn:"VisitSampleOperator",rt:TResult,p:[$n[3].SampleOperator]},{ov:!0,a:2,n:"VisitScanAssignment",t:8,pi:[{n:"node",pt:$n[3].ScanAssignment,ps:0}],sn:"VisitScanAssignment",rt:TResult,p:[$n[3].ScanAssignment]},{ov:!0,a:2,n:"VisitScanComputationClause",t:8,pi:[{n:"node",pt:$n[3].ScanComputationClause,ps:0}],sn:"VisitScanComputationClause",rt:TResult,p:[$n[3].ScanComputationClause]},{ov:!0,a:2,n:"VisitScanDeclareClause",t:8,pi:[{n:"node",pt:$n[3].ScanDeclareClause,ps:0}],sn:"VisitScanDeclareClause",rt:TResult,p:[$n[3].ScanDeclareClause]},{ov:!0,a:2,n:"VisitScanOperator",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"VisitScanOperator",rt:TResult,p:[$n[3].ScanOperator]},{ov:!0,a:2,n:"VisitScanOrderByClause",t:8,pi:[{n:"node",pt:$n[3].ScanOrderByClause,ps:0}],sn:"VisitScanOrderByClause",rt:TResult,p:[$n[3].ScanOrderByClause]},{ov:!0,a:2,n:"VisitScanPartitionByClause",t:8,pi:[{n:"node",pt:$n[3].ScanPartitionByClause,ps:0}],sn:"VisitScanPartitionByClause",rt:TResult,p:[$n[3].ScanPartitionByClause]},{ov:!0,a:2,n:"VisitScanStep",t:8,pi:[{n:"node",pt:$n[3].ScanStep,ps:0}],sn:"VisitScanStep",rt:TResult,p:[$n[3].ScanStep]},{ov:!0,a:2,n:"VisitSchemaTypeExpression",t:8,pi:[{n:"node",pt:$n[3].SchemaTypeExpression,ps:0}],sn:"VisitSchemaTypeExpression",rt:TResult,p:[$n[3].SchemaTypeExpression]},{ov:!0,a:2,n:"VisitSearchOperator",t:8,pi:[{n:"node",pt:$n[3].SearchOperator,ps:0}],sn:"VisitSearchOperator",rt:TResult,p:[$n[3].SearchOperator]},{ov:!0,a:2,n:"VisitSeparatedElement",t:8,pi:[{n:"separatedElement",pt:$n[3].SeparatedElement,ps:0}],sn:"VisitSeparatedElement",rt:TResult,p:[$n[3].SeparatedElement]},{ov:!0,a:2,n:"VisitSerializeOperator",t:8,pi:[{n:"node",pt:$n[3].SerializeOperator,ps:0}],sn:"VisitSerializeOperator",rt:TResult,p:[$n[3].SerializeOperator]},{ov:!0,a:2,n:"VisitSetOptionStatement",t:8,pi:[{n:"node",pt:$n[3].SetOptionStatement,ps:0}],sn:"VisitSetOptionStatement",rt:TResult,p:[$n[3].SetOptionStatement]},{ov:!0,a:2,n:"VisitSimpleNamedExpression",t:8,pi:[{n:"node",pt:$n[3].SimpleNamedExpression,ps:0}],sn:"VisitSimpleNamedExpression",rt:TResult,p:[$n[3].SimpleNamedExpression]},{ov:!0,a:2,n:"VisitSkippedTokens",t:8,pi:[{n:"node",pt:$n[3].SkippedTokens,ps:0}],sn:"VisitSkippedTokens",rt:TResult,p:[$n[3].SkippedTokens]},{ov:!0,a:2,n:"VisitSortOperator",t:8,pi:[{n:"node",pt:$n[3].SortOperator,ps:0}],sn:"VisitSortOperator",rt:TResult,p:[$n[3].SortOperator]},{ov:!0,a:2,n:"VisitStarExpression",t:8,pi:[{n:"node",pt:$n[3].StarExpression,ps:0}],sn:"VisitStarExpression",rt:TResult,p:[$n[3].StarExpression]},{ov:!0,a:2,n:"VisitSummarizeByClause",t:8,pi:[{n:"node",pt:$n[3].SummarizeByClause,ps:0}],sn:"VisitSummarizeByClause",rt:TResult,p:[$n[3].SummarizeByClause]},{ov:!0,a:2,n:"VisitSummarizeOperator",t:8,pi:[{n:"node",pt:$n[3].SummarizeOperator,ps:0}],sn:"VisitSummarizeOperator",rt:TResult,p:[$n[3].SummarizeOperator]},{ov:!0,a:2,n:"VisitTakeOperator",t:8,pi:[{n:"node",pt:$n[3].TakeOperator,ps:0}],sn:"VisitTakeOperator",rt:TResult,p:[$n[3].TakeOperator]},{ov:!0,a:2,n:"VisitToScalarExpression",t:8,pi:[{n:"node",pt:$n[3].ToScalarExpression,ps:0}],sn:"VisitToScalarExpression",rt:TResult,p:[$n[3].ToScalarExpression]},{ov:!0,a:2,n:"VisitToTableExpression",t:8,pi:[{n:"node",pt:$n[3].ToTableExpression,ps:0}],sn:"VisitToTableExpression",rt:TResult,p:[$n[3].ToTableExpression]},{ov:!0,a:2,n:"VisitToTypeOfClause",t:8,pi:[{n:"node",pt:$n[3].ToTypeOfClause,ps:0}],sn:"VisitToTypeOfClause",rt:TResult,p:[$n[3].ToTypeOfClause]},{ov:!0,a:2,n:"VisitTokenName",t:8,pi:[{n:"node",pt:$n[3].TokenName,ps:0}],sn:"VisitTokenName",rt:TResult,p:[$n[3].TokenName]},{ov:!0,a:2,n:"VisitTopHittersByClause",t:8,pi:[{n:"node",pt:$n[3].TopHittersByClause,ps:0}],sn:"VisitTopHittersByClause",rt:TResult,p:[$n[3].TopHittersByClause]},{ov:!0,a:2,n:"VisitTopHittersOperator",t:8,pi:[{n:"node",pt:$n[3].TopHittersOperator,ps:0}],sn:"VisitTopHittersOperator",rt:TResult,p:[$n[3].TopHittersOperator]},{ov:!0,a:2,n:"VisitTopNestedClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedClause,ps:0}],sn:"VisitTopNestedClause",rt:TResult,p:[$n[3].TopNestedClause]},{ov:!0,a:2,n:"VisitTopNestedOperator",t:8,pi:[{n:"node",pt:$n[3].TopNestedOperator,ps:0}],sn:"VisitTopNestedOperator",rt:TResult,p:[$n[3].TopNestedOperator]},{ov:!0,a:2,n:"VisitTopNestedWithOthersClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedWithOthersClause,ps:0}],sn:"VisitTopNestedWithOthersClause",rt:TResult,p:[$n[3].TopNestedWithOthersClause]},{ov:!0,a:2,n:"VisitTopOperator",t:8,pi:[{n:"node",pt:$n[3].TopOperator,ps:0}],sn:"VisitTopOperator",rt:TResult,p:[$n[3].TopOperator]},{ov:!0,a:2,n:"VisitTypeOfLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].TypeOfLiteralExpression,ps:0}],sn:"VisitTypeOfLiteralExpression",rt:TResult,p:[$n[3].TypeOfLiteralExpression]},{ov:!0,a:2,n:"VisitTypedColumnReference",t:8,pi:[{n:"node",pt:$n[3].TypedColumnReference,ps:0}],sn:"VisitTypedColumnReference",rt:TResult,p:[$n[3].TypedColumnReference]},{ov:!0,a:2,n:"VisitUnionOperator",t:8,pi:[{n:"node",pt:$n[3].UnionOperator,ps:0}],sn:"VisitUnionOperator",rt:TResult,p:[$n[3].UnionOperator]},{ov:!0,a:2,n:"VisitUnknownCommand",t:8,pi:[{n:"node",pt:$n[3].UnknownCommand,ps:0}],sn:"VisitUnknownCommand",rt:TResult,p:[$n[3].UnknownCommand]},{ov:!0,a:2,n:"VisitWildcardedName",t:8,pi:[{n:"node",pt:$n[3].WildcardedName,ps:0}],sn:"VisitWildcardedName",rt:TResult,p:[$n[3].WildcardedName]}]}},$n);$m("Kusto.Language.Syntax.CustomNode",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.CustomElementDescriptor),System.Array.type(Kusto.Language.Syntax.SyntaxElement)],pi:[{n:"shape",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.CustomElementDescriptor),ps:0},{n:"elements",ip:!0,pt:System.Array.type(Kusto.Language.Syntax.SyntaxElement),ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.CustomElementDescriptor),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxElement),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"shape",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.CustomElementDescriptor),ps:0},{n:"elements",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxElement),ps:1},{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"$ctor1"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetCompletionHint",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHint",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"GetName",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetName",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsOptional",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"IsOptional",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,n:"elements",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxElement),sn:"elements",ro:!0},{a:1,n:"shape",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.CustomElementDescriptor),sn:"shape",ro:!0}]}},$n);$m("Kusto.Language.Syntax.CustomElementDescriptor",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[8].CompletionHint,$n[2].Boolean],pi:[{n:"hint",pt:$n[8].CompletionHint,ps:0},{n:"isOptional",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[8].CompletionHint,$n[2].Boolean],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"hint",pt:$n[8].CompletionHint,ps:1},{n:"isOptional",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"$ctor1"},{a:2,n:"WithHint",t:8,pi:[{n:"hint",pt:$n[8].CompletionHint,ps:0}],sn:"WithHint",rt:$n[3].CustomElementDescriptor,p:[$n[8].CompletionHint]},{a:2,n:"WithIsOptional",t:8,pi:[{n:"isOptional",pt:$n[2].Boolean,ps:0}],sn:"WithIsOptional",rt:$n[3].CustomElementDescriptor,p:[$n[2].Boolean]},{a:2,n:"WithName",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"WithName",rt:$n[3].CustomElementDescriptor,p:[$n[2].String]},{a:2,n:"CompletionHint",t:16,rt:$n[8].CompletionHint,g:{a:2,n:"get_CompletionHint",t:8,rt:$n[8].CompletionHint,fg:"CompletionHint",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},fn:"CompletionHint"},{a:2,n:"IsOptional",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsOptional",t:8,rt:$n[2].Boolean,fg:"IsOptional",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOptional"},{a:2,n:"Name",t:16,rt:$n[2].String,g:{a:2,n:"get_Name",t:8,rt:$n[2].String,fg:"Name"},fn:"Name"},{a:2,n:"Default",is:!0,t:4,rt:$n[3].CustomElementDescriptor,sn:"Default"},{a:1,backing:!0,n:"<CompletionHint>k__BackingField",t:4,rt:$n[8].CompletionHint,sn:"CompletionHint",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:1,backing:!0,n:"<IsOptional>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsOptional",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[2].String,sn:"Name"}]}},$n);$m("Kusto.Language.Syntax.SeparatedElement",function(){return{att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[$n[3].SyntaxElement,$n[3].SyntaxToken],pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"separator",dv:null,o:!0,pt:$n[3].SyntaxToken,ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{ov:!0,a:2,n:"GetCompletionHint",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHint",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Element",t:16,rt:$n[3].SyntaxElement,g:{a:2,n:"get_Element",t:8,rt:$n[3].SyntaxElement,fg:"Element"},fn:"Element"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Separator",t:16,rt:$n[3].SyntaxToken,g:{a:2,n:"get_Separator",t:8,rt:$n[3].SyntaxToken,fg:"Separator"},fn:"Separator"},{a:1,backing:!0,n:"<Element>k__BackingField",t:4,rt:$n[3].SyntaxElement,sn:"Element"},{a:1,backing:!0,n:"<Separator>k__BackingField",t:4,rt:$n[3].SyntaxToken,sn:"Separator"}]}},$n);$m("Kusto.Language.Syntax.SeparatedElement$1",function(TElement){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[TElement,$n[3].SyntaxToken],pi:[{n:"element",pt:TElement,ps:0},{n:"separator",dv:null,o:!0,pt:$n[3].SyntaxToken,ps:1}],sn:"ctor"},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{a:2,n:"Empty",is:!0,t:8,sn:"Empty",rt:$n[3].SeparatedElement$1(TElement)},{a:2,n:"Element",t:16,rt:TElement,g:{a:2,n:"get_Element",t:8,rt:TElement,fg:"Element$1"},fn:"Element$1"}]}},$n);$m("Kusto.Language.Syntax.SyntaxCategory",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Identifier",is:!0,t:4,rt:$n[3].SyntaxCategory,sn:"Identifier",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:2,n:"Keyword",is:!0,t:4,rt:$n[3].SyntaxCategory,sn:"Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:2,n:"List",is:!0,t:4,rt:$n[3].SyntaxCategory,sn:"List",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:2,n:"Literal",is:!0,t:4,rt:$n[3].SyntaxCategory,sn:"Literal",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:2,n:"Node",is:!0,t:4,rt:$n[3].SyntaxCategory,sn:"Node",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:2,n:"None",is:!0,t:4,rt:$n[3].SyntaxCategory,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:2,n:"Operator",is:!0,t:4,rt:$n[3].SyntaxCategory,sn:"Operator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:2,n:"Other",is:!0,t:4,rt:$n[3].SyntaxCategory,sn:"Other",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:2,n:"Punctuation",is:!0,t:4,rt:$n[3].SyntaxCategory,sn:"Punctuation",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}}]}},$n);$m("Kusto.Language.Syntax.IncludeTrivia",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"All",is:!0,t:4,rt:$n[3].IncludeTrivia,sn:"All",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.IncludeTrivia,System.Enum.toStringFn(Kusto.Language.Syntax.IncludeTrivia))}},{a:2,n:"Interior",is:!0,t:4,rt:$n[3].IncludeTrivia,sn:"Interior",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.IncludeTrivia,System.Enum.toStringFn(Kusto.Language.Syntax.IncludeTrivia))}},{a:2,n:"Minimal",is:!0,t:4,rt:$n[3].IncludeTrivia,sn:"Minimal",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.IncludeTrivia,System.Enum.toStringFn(Kusto.Language.Syntax.IncludeTrivia))}},{a:2,n:"SingleLine",is:!0,t:4,rt:$n[3].IncludeTrivia,sn:"SingleLine",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.IncludeTrivia,System.Enum.toStringFn(Kusto.Language.Syntax.IncludeTrivia))}}]}},$n);$m("Kusto.Language.Syntax.SyntaxFacts",function(){return{nested:[$n[3].SyntaxFacts.SyntaxData],att:385,a:2,s:!0,m:[{n:".cctor",t:1,sn:"ctor",sm:!0},{a:2,n:"CanBeIdentifier",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"CanBeIdentifier",rt:$n[2].Boolean,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetCategory",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetCategory",rt:$n[3].SyntaxCategory,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:2,n:"GetKinds",is:!0,t:8,pi:[{n:"category",pt:$n[3].SyntaxCategory,ps:0}],sn:"GetKinds",rt:$n[0].IEnumerable$1(Kusto.Language.Syntax.SyntaxKind),p:[$n[3].SyntaxCategory]},{a:2,n:"GetKindsWithFixedText",is:!0,t:8,sn:"GetKindsWithFixedText",rt:$n[0].IEnumerable$1(Kusto.Language.Syntax.SyntaxKind)},{a:2,n:"GetOperatorKind",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetOperatorKind",rt:$n[1].OperatorKind,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:2,n:"GetText",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetText",rt:$n[2].String,p:[$n[3].SyntaxKind]},{a:2,n:"IsKeyword",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"IsKeyword",rt:$n[2].Boolean,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsLiteral",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"IsLiteral",rt:$n[2].Boolean,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsOperator",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"IsOperator",rt:$n[2].Boolean,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsPunctuation",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"IsPunctuation",rt:$n[2].Boolean,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsType",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"IsType",rt:$n[2].Boolean,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryGetKind",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"kind",out:!0,pt:$n[3].SyntaxKind,ps:1}],sn:"TryGetKind",rt:$n[2].Boolean,p:[$n[2].String,$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryGetKind",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"offset",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2},{n:"kind",out:!0,pt:$n[3].SyntaxKind,ps:3}],sn:"TryGetKind$1",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].Int32,$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Keywords",is:!0,t:16,rt:$n[0].IEnumerable$1(System.String),g:{a:2,n:"get_Keywords",t:8,rt:$n[0].IEnumerable$1(System.String),fg:"Keywords",is:!0},fn:"Keywords"},{a:2,n:"Operators",is:!0,t:16,rt:$n[0].IEnumerable$1(System.String),g:{a:2,n:"get_Operators",t:8,rt:$n[0].IEnumerable$1(System.String),fg:"Operators",is:!0},fn:"Operators"},{a:2,n:"Punctuation",is:!0,t:16,rt:$n[0].IEnumerable$1(System.String),g:{a:2,n:"get_Punctuation",t:8,rt:$n[0].IEnumerable$1(System.String),fg:"Punctuation",is:!0},fn:"Punctuation"},{a:1,n:"kindToDataMap",is:!0,t:4,rt:System.Array.type(Kusto.Language.Syntax.SyntaxFacts.SyntaxData),sn:"kindToDataMap"},{a:1,n:"textToKindMap",is:!0,t:4,rt:$n[5].TextKeyedDictionary$1(Kusto.Language.Syntax.SyntaxKind),sn:"textToKindMap"}]}},$n);$m("Kusto.Language.Syntax.SyntaxFacts.SyntaxData",function(){return{td:$n[3].SyntaxFacts,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[3].SyntaxKind,$n[2].String,$n[3].SyntaxCategory,$n[1].OperatorKind,$n[2].Boolean,$n[2].Boolean],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"category",dv:1,o:!0,pt:$n[3].SyntaxCategory,ps:2},{n:"opKind",dv:0,o:!0,pt:$n[1].OperatorKind,ps:3},{n:"canBeIdentifier",dv:!1,o:!0,pt:$n[2].Boolean,ps:4},{n:"isType",dv:!1,o:!0,pt:$n[2].Boolean,ps:5}],sn:"ctor"},{a:2,n:"CanBeIdentifier",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_CanBeIdentifier",t:8,rt:$n[2].Boolean,fg:"CanBeIdentifier",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"CanBeIdentifier"},{a:2,n:"Category",t:16,rt:$n[3].SyntaxCategory,g:{a:2,n:"get_Category",t:8,rt:$n[3].SyntaxCategory,fg:"Category",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},fn:"Category"},{a:2,n:"IsType",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsType",t:8,rt:$n[2].Boolean,fg:"IsType",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsType"},{a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"OperatorKind",t:16,rt:$n[1].OperatorKind,g:{a:2,n:"get_OperatorKind",t:8,rt:$n[1].OperatorKind,fg:"OperatorKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},fn:"OperatorKind"},{a:2,n:"Text",t:16,rt:$n[2].String,g:{a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:1,backing:!0,n:"<CanBeIdentifier>k__BackingField",t:4,rt:$n[2].Boolean,sn:"CanBeIdentifier",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Category>k__BackingField",t:4,rt:$n[3].SyntaxCategory,sn:"Category",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxCategory,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxCategory))}},{a:1,backing:!0,n:"<IsType>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsType",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Kind>k__BackingField",t:4,rt:$n[3].SyntaxKind,sn:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,backing:!0,n:"<OperatorKind>k__BackingField",t:4,rt:$n[1].OperatorKind,sn:"OperatorKind",box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:1,backing:!0,n:"<Text>k__BackingField",t:4,rt:$n[2].String,sn:"Text"}]}},$n);$m("Kusto.Language.Syntax.SyntaxKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AccessKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AccessKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AccountsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AccountsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AccumulateKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AccumulateKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AddExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AddExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AddKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AddKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AdminKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AdminKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AdminsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AdminsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AliasKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AliasKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AliasStatement",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AliasStatement",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AllKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AllKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AlterKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AlterKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AlterMergeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AlterMergeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AndExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AndExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AndKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AndKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AppendKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AppendKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ArtifactsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ArtifactsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AsOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AsOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AscKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AscKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AsteriskToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AsteriskToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AsyncKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AsyncKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AtExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AtExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AtToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AtToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"AttachKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"AttachKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BadCommand",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BadCommand",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BadQueryOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BadQueryOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BadToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BadToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BagExpansionKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BagExpansionKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BangEqualToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BangEqualToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BangTildeExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BangTildeExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BangTildeToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BangTildeToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BangToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BangToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BarToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BarToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BasicAuthKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BasicAuthKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BetweenExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BetweenExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BetweenKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BetweenKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BinKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BinKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BinLegacyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BinLegacyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BoolKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BoolKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BooleanKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BooleanKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BooleanLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BooleanLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BooleanLiteralToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BooleanLiteralToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BracedName",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BracedName",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BracketedExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BracketedExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BracketedName",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BracketedName",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"BracketedWildcardedName",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"BracketedWildcardedName",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ByKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ByKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ByteKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ByteKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CacheKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CacheKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CachingKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CachingKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CachingPolicyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CachingPolicyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CalloutKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CalloutKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CancelKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CancelKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CapacityKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CapacityKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CharKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CharKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CharactersKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CharactersKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CloseBraceToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CloseBraceToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CloseBracketToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CloseBracketToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CloseParenToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CloseParenToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ClusterKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ClusterKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ColonToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ColonToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ColumnDocStringsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ColumnDocStringsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ColumnKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ColumnKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ColumnsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ColumnsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CommConcurrencyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CommConcurrencyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CommPoolsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CommPoolsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CommaToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CommaToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CommandBlock",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CommandBlock",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CommandWithPropertyListClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CommandWithPropertyListClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CommandWithValueClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CommandWithValueClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CommandsAndQueriesKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CommandsAndQueriesKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CommandsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CommandsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CompletedKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CompletedKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CompoundNamedExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CompoundNamedExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CompoundStringLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CompoundStringLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CompressedKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CompressedKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ConsumeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ConsumeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ConsumeOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ConsumeOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ContainsCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ContainsCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ContainsCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ContainsCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ContainsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ContainsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ContainsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ContainsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"Contains_CsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"Contains_CsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ContextualDataTableExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ContextualDataTableExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ContextualDataTableKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ContextualDataTableKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ContinuousExport",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ContinuousExport",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ContinuousExports",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ContinuousExports",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CountAsIdentifierClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CountAsIdentifierClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CountKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CountKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CountOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CountOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CrashKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CrashKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CreateKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CreateKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CreateMergeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CreateMergeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CreateOrAlterKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CreateOrAlterKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CreatedOnKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CreatedOnKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CslKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CslKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CslSchemaKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CslSchemaKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CsvKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CsvKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CustomCommand",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CustomCommand",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"CustomNode",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"CustomNode",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DataKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DataKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DataScopeClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DataScopeClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DataScopeExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DataScopeExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DataScopeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DataScopeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DataTableExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DataTableExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DataTableKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DataTableKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DatabaseCreatorsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DatabaseCreatorsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DatabaseKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DatabaseKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DatabasesKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DatabasesKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DateKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DateKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DateTimeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DateTimeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DateTimeLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DateTimeLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DateTimeLiteralToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DateTimeLiteralToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DecimalKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DecimalKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DecimalLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DecimalLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DecimalLiteralToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DecimalLiteralToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DeclareKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DeclareKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DecryptionCertificateThumbPrintKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DecryptionCertificateThumbPrintKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DefaultExpressionClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DefaultExpressionClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DefaultKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DefaultKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DefaultValueDeclaration",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DefaultValueDeclaration",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DefineKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DefineKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DeleteKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DeleteKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DescKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DescKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DetachKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DetachKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DetailsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DetailsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DiagnosticsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DiagnosticsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DirectiveBlock",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DirectiveBlock",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DirectiveToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DirectiveToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DisableKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DisableKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DistinctKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DistinctKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DistinctOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DistinctOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DivideExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DivideExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DocStringKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DocStringKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DotDotToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DotDotToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DotToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DotToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DoubleKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DoubleKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DropKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DropKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DropPretendKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DropPretendKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DupNextFailedIngestKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DupNextFailedIngestKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DupNextIngestKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DupNextIngestKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DynamicExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DynamicExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"DynamicKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"DynamicKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EarliestKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EarliestKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EchoKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EchoKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EffectiveKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EffectiveKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ElementExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ElementExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EnableKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EnableKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EncodingKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EncodingKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EncodingPolicyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EncodingPolicyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EndOfTextToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EndOfTextToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EndsWithCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EndsWithCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EndsWithCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EndsWithCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EndsWithExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EndsWithExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EndsWithKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EndsWithKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EntityKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EntityKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EphemeralKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EphemeralKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EqualEqualToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EqualEqualToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EqualExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EqualExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EqualTildeExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EqualTildeExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EqualTildeToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EqualTildeToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EqualToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EqualToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EvaluateKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EvaluateKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EvaluateOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EvaluateOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"EvaluateSchemaClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"EvaluateSchemaClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExceptKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExceptKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExecuteAndCacheKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExecuteAndCacheKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExecuteAndCacheOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExecuteAndCacheOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExecuteKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExecuteKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExpandOutputKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExpandOutputKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExportKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExportKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExpressionCouple",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExpressionCouple",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExpressionList",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExpressionList",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExpressionStatement",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExpressionStatement",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExtendKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExtendKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExtendOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExtendOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExtentContainersKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExtentContainersKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExtentKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExtentKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExtentsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExtentsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExtentsMergeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExtentsMergeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExternalDataExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExternalDataExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExternalDataKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExternalDataKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExternalDataUriList",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExternalDataUriList",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExternalDataWithClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExternalDataWithClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ExternalKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ExternalKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"External_DataKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"External_DataKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FabricCacheKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FabricCacheKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FabricClocksKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FabricClocksKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FabricKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FabricKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FabricLocksKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FabricLocksKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FacetKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FacetKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FacetOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FacetOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FacetWithExpressionClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FacetWithExpressionClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FacetWithOperatorClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FacetWithOperatorClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FailuresKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FailuresKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FatArrowToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FatArrowToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FilterKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FilterKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FilterOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FilterOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FindInClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FindInClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FindKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FindKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FindOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FindOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FindProjectClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FindProjectClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FirstKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FirstKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FlagsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FlagsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FloatKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FloatKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FolderKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FolderKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ForceKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ForceKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ForkExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ForkExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ForkKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ForkKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ForkOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ForkOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FreshnessKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FreshnessKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FromKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FromKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FunctionBody",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FunctionBody",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FunctionCallExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FunctionCallExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FunctionDeclaration",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FunctionDeclaration",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FunctionKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FunctionKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FunctionParameter",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FunctionParameter",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FunctionParameters",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FunctionParameters",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"FunctionsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"FunctionsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GetSchemaKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GetSchemaKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GetSchemaOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GetSchemaOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GreaterThanExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GreaterThanExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GreaterThanOrEqualExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GreaterThanOrEqualExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GreaterThanOrEqualToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GreaterThanOrEqualToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GreaterThanToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GreaterThanToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GroupsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GroupsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GuidKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GuidKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GuidLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GuidLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"GuidLiteralToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"GuidLiteralToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HardDeleteKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HardDeleteKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasAllExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasAllExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasAllKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasAllKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasAnyExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasAnyExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasAnyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasAnyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasPrefixCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasPrefixCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasPrefixCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasPrefixCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasPrefixExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasPrefixExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasPrefixKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasPrefixKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasSuffixCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasSuffixCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasSuffixCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasSuffixCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasSuffixExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasSuffixExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HasSuffixKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HasSuffixKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HashKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HashKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HintDotConcurrencyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HintDotConcurrencyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HintDotDistributionKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HintDotDistributionKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HintDotMaterializedKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HintDotMaterializedKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HintDotNumPartitions",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HintDotNumPartitions",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HintDotProgressiveTopKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HintDotProgressiveTopKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HintDotRemoteKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HintDotRemoteKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HintDotShuffleKeyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HintDotShuffleKeyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HintDotSpreadKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HintDotSpreadKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HintDotStrategyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HintDotStrategyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HotCacheKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HotCacheKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HotDataKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HotDataKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HotIndexKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HotIndexKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HotKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HotKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"HoursKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"HoursKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IdKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IdKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IdentifierToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IdentifierToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IfExistsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IfExistsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IfLaterThanKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IfLaterThanKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IfNotExistsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IfNotExistsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"InCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"InCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"InCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"InCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"InExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"InExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"InKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"InKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IngestKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IngestKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IngestionKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IngestionKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IngestionTimeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IngestionTimeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IngestionsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IngestionsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IngestorsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IngestorsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"InlineKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"InlineKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"InputTextToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"InputTextToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"Int16Keyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"Int16Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"Int32Keyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"Int32Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"Int64Keyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"Int64Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"Int8Keyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"Int8Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IntKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IntKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IntLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IntLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IntLiteralToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IntLiteralToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IntoKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IntoKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"InvokeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"InvokeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"InvokeOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"InvokeOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"IsFuzzyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"IsFuzzyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"JoinKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"JoinKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"JoinOnClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"JoinOnClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"JoinOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"JoinOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"JoinWhereClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"JoinWhereClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"JournalKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"JournalKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"JsonArrayExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"JsonArrayExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"JsonKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"JsonKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"JsonObjectExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"JsonObjectExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"JsonPair",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"JsonPair",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"KeysKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"KeysKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"KindKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"KindKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LastKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LastKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LatestKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LatestKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LessThanBarToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LessThanBarToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LessThanExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LessThanExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LessThanGreaterThanToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LessThanGreaterThanToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LessThanOrEqualExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LessThanOrEqualExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LessThanOrEqualToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LessThanOrEqualToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LessThanToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LessThanToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LetKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LetKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LetStatement",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LetStatement",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LikeCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LikeCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LikeCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LikeCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LikeExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LikeExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LikeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LikeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LimitKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LimitKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"List",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"List",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LoadKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LoadKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LocalKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LocalKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LongKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LongKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LongLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LongLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LongLiteralToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LongLiteralToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LookupKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LookupKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"LookupOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"LookupOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesByClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesByClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesFromClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesFromClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesFromToStepClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesFromToStepClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesInRangeClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesInRangeClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesOnClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesOnClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesStepClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesStepClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MakeSeriesToClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MakeSeriesToClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MappingKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MappingKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MappingsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MappingsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MatchesRegexExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MatchesRegexExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MatchesRegexKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MatchesRegexKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MaterializeExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MaterializeExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MaterializeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MaterializeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MaterializedViewCombineClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MaterializedViewCombineClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MaterializedViewCombineExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MaterializedViewCombineExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MaterializedViewCombineKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MaterializedViewCombineKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MdmKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MdmKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MemoryKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MemoryKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MergeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MergeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MetadataKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MetadataKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MinusToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MinusToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MissingKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MissingKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ModuloExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ModuloExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MonitoringKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MonitoringKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MoveKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MoveKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MultiplyExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MultiplyExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvApplyContextIdClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvApplyContextIdClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvApplyExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvApplyExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvApplyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvApplyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvApplyOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvApplyOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvApplyRowLimitClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvApplyRowLimitClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvApplySubqueryExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvApplySubqueryExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvDashApplyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvDashApplyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvDashExpandKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvDashExpandKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvExpandExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvExpandExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvExpandKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvExpandKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvExpandOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvExpandOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"MvExpandRowLimitClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"MvExpandRowLimitClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NameAndTypeDeclaration",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NameAndTypeDeclaration",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NameDeclaration",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NameDeclaration",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NameEqualsClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NameEqualsClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NameReference",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NameReference",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NameReferenceList",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NameReferenceList",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NamedParameter",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NamedParameter",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NanKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NanKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"None",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NoneKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NoneKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotBangContainsCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotBangContainsCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotBangContainsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotBangContainsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotBetweenExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotBetweenExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotBetweenKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotBetweenKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotContainsCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotContainsCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotContainsCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotContainsCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotContainsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotContainsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotContainsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotContainsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotEndsWithCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotEndsWithCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotEndsWithCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotEndsWithCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotEndsWithExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotEndsWithExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotEndsWithKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotEndsWithKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotEqualExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotEqualExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasPrefixCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasPrefixCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasPrefixCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasPrefixCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasPrefixExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasPrefixExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasPrefixKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasPrefixKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasSuffixCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasSuffixCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasSuffixCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasSuffixCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasSuffixExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasSuffixExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotHasSuffixKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotHasSuffixKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotInCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotInCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotInCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotInCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotInExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotInExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotInKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotInKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotLikeCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotLikeCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotLikeCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotLikeCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotLikeExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotLikeExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotLikeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotLikeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotStartsWithCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotStartsWithCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotStartsWithCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotStartsWithCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotStartsWithExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotStartsWithExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NotStartsWithKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NotStartsWithKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NullKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NullKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NullLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NullLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"NullsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"NullsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OfKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OfKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OlderKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OlderKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OnKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OnKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OpenBraceToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OpenBraceToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OpenBracketToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OpenBracketToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OpenParenToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OpenParenToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OperationsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OperationsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OptionValueClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OptionValueClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OptionalKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OptionalKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OrExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OrExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OrKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OrKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OrderKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OrderKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OrderedExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OrderedExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OrderingClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OrderingClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OrderingNullsClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OrderingNullsClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"OthersKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"OthersKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PackExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PackExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PackKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PackKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ParenthesizedExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ParenthesizedExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ParseKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ParseKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ParseOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ParseOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ParseWhereKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ParseWhereKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ParseWhereOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ParseWhereOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PartitionKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PartitionKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PartitionOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PartitionOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PartitionQuery",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PartitionQuery",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PartitionScope",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PartitionScope",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PartitionSubquery",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PartitionSubquery",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PartitioningKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PartitioningKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PasswordKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PasswordKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PathExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PathExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PatternDeclaration",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PatternDeclaration",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PatternKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PatternKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PatternMatch",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PatternMatch",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PatternPathParameter",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PatternPathParameter",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PatternPathValue",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PatternPathValue",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PatternStatement",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PatternStatement",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PercentToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PercentToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PersistKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PersistKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PipeExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PipeExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PluginKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PluginKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PluginsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PluginsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PlusToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PlusToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PoliciesKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PoliciesKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PolicyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PolicyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PretendKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PretendKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PrettyNameKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PrettyNameKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PrimitiveTypeExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PrimitiveTypeExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PrincipalKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PrincipalKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PrincipalsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PrincipalsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PrintKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PrintKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PrintOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PrintOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectAwayKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectAwayKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectAwayOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectAwayOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectKeepKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectKeepKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectKeepOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectKeepOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectRenameKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectRenameKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectRenameOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectRenameOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectReorderKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectReorderKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectReorderOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectReorderOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ProjectSmartKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ProjectSmartKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PurgeCleanupKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PurgeCleanupKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"PurgeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"PurgeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QueriesKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QueriesKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QueryBlock",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QueryBlock",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QueryExecutionKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QueryExecutionKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QueryKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QueryKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QueryParametersKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QueryParametersKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QueryParametersStatement",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QueryParametersStatement",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QueryPlanKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QueryPlanKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QueryThrottlingKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QueryThrottlingKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QuestionToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QuestionToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"QuickKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"QuickKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RangeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RangeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RangeOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RangeOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ReadOnlyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ReadOnlyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ReadWriteKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ReadWriteKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RealKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RealKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RealLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RealLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RealLiteralToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RealLiteralToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RebalanceKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RebalanceKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RebalancePretendKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RebalancePretendKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RebuildKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RebuildKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RecycleKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RecycleKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ReduceByOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ReduceByOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ReduceByWithClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ReduceByWithClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ReduceKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ReduceKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RegexKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RegexKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RelaxedKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RelaxedKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RenameKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RenameKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RenameList",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RenameList",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RenderKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RenderKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RenderOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RenderOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RenderWithClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RenderWithClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ReplaceKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ReplaceKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RequestClassificationKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RequestClassificationKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ResetKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ResetKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RestrictKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RestrictKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RestrictStatement",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RestrictStatement",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RetentionKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RetentionKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RolesKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RolesKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RowOrderKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RowOrderKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RowOrderPolicyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RowOrderPolicyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RowStoreKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RowStoreKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RowStorePolicyKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RowStorePolicyKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RowStoresKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RowStoresKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RunKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RunKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"RunningKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"RunningKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SampleDistinctKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SampleDistinctKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SampleDistinctOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SampleDistinctOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SampleKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SampleKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SampleOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SampleOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SandboxKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SandboxKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SandboxesKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SandboxesKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SaveKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SaveKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ScanAssignment",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ScanAssignment",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ScanComputationClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ScanComputationClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ScanDeclareClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ScanDeclareClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ScanKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ScanKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ScanOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ScanOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ScanOrderByClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ScanOrderByClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ScanPartitionByClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ScanPartitionByClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ScanStep",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ScanStep",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SchemaKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SchemaKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SchemaTypeExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SchemaTypeExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ScriptKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ScriptKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SealKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SealKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SearchExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SearchExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SearchKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SearchKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SearchOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SearchOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SemicolonToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SemicolonToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SeparatedElement",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SeparatedElement",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SerializeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SerializeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SerializeOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SerializeOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ServicePointsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ServicePointsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SetKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SetKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SetOptionStatement",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SetOptionStatement",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SetOrAppendKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SetOrAppendKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SetOrReplaceKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SetOrReplaceKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ShardingKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ShardingKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ShowKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ShowKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SimpleKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SimpleKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SimpleNamedExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SimpleNamedExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SingleKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SingleKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SkippedTokens",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SkippedTokens",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SlashToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SlashToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SoftDeleteKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SoftDeleteKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SortKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SortKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SortOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SortOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SqlKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SqlKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StarExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StarExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StartsWithCsExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StartsWithCsExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StartsWithCsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StartsWithCsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StartsWithExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StartsWithExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StartsWithKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StartsWithKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StateKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StateKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StepKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StepKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StorageKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StorageKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StreamKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StreamKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StringKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StringKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StringLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StringLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"StringLiteralToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"StringLiteralToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SubtractExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SubtractExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SummarizeByClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SummarizeByClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SummarizeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SummarizeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SummarizeOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"SummarizeOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TableKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TableKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TablePurgeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TablePurgeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TablesKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TablesKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TagsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TagsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TakeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TakeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TakeOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TakeOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TcpConnectionsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TcpConnectionsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TempStorageKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TempStorageKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ThreadPoolsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ThreadPoolsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ThresholdKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ThresholdKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ThrowKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ThrowKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TimeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TimeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TimeoutKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TimeoutKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TimespanKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TimespanKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TimespanLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TimespanLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TimespanLiteralToken",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TimespanLiteralToken",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TitleKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TitleKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ToKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ToKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ToScalarExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ToScalarExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ToScalarKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ToScalarKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ToTableExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ToTableExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ToTableKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ToTableKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ToTypeOfClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ToTypeOfClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TokenLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TokenLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TokenName",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TokenName",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TopHittersByClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TopHittersByClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TopHittersKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TopHittersKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TopHittersOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TopHittersOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TopKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TopKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TopNestedClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TopNestedClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TopNestedKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TopNestedKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TopNestedOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TopNestedOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TopNestedWithOthersClause",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TopNestedWithOthersClause",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TopOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TopOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TraceKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TraceKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TraceResultsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TraceResultsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TsvKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TsvKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TypeKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TypeKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TypeOfKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TypeOfKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TypeOfLiteralExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TypeOfLiteralExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"TypedColumnReference",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"TypedColumnReference",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UInt16Keyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UInt16Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UInt32Keyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UInt32Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UInt64Keyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UInt64Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UInt8Keyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UInt8Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UIntKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UIntKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ULongKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ULongKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UnaryMinusExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UnaryMinusExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UnaryPlusExpression",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UnaryPlusExpression",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UndoKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UndoKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UnionKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UnionKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UnionOperator",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UnionOperator",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UniqueIdKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UniqueIdKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UnknownCommand",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UnknownCommand",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UpdateKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UpdateKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UserKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UserKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UsersKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UsersKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"UuidKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"UuidKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"VerboseKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"VerboseKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"VersionKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"VersionKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ViewKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ViewKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"ViewersKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"ViewersKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"VolatileKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"VolatileKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"WarmKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"WarmKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"WarmingKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"WarmingKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"WhatIfKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"WhatIfKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"WhereKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"WhereKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"WildcardedName",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"WildcardedName",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"WithKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"WithKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"WorkloadGroupKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"WorkloadGroupKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"WorkloadGroupsKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"WorkloadGroupsKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"WriteAheadLogKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"WriteAheadLogKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"_ProjectAwayKeyword",is:!0,t:4,rt:$n[3].SyntaxKind,sn:"_ProjectAwayKeyword",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}}]}},$n);$m("Kusto.Language.Syntax.SyntaxList",function(){return{att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[System.Array.type(Kusto.Language.Syntax.SyntaxElement),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"elements",pt:System.Array.type(Kusto.Language.Syntax.SyntaxElement),ps:0},{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor,ps:0}],sn:"Accept$1",rt:$n[2].Void,p:[$n[3].SyntaxVisitor]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[3].SyntaxVisitor$1(System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[3].SyntaxVisitor$1(System.Object)]},{ov:!0,a:2,n:"GetChild",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetChild",rt:$n[3].SyntaxElement,p:[$n[2].Int32]},{a:3,n:"GetElements",t:8,sn:"GetElements",rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxElement)},{a:2,n:"GetEnumerator",t:8,sn:"GetEnumerator",rt:$n[0].IEnumerator$1(Kusto.Language.Syntax.SyntaxElement)},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Count",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Count",t:8,rt:$n[2].Int32,fg:"Count",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Count"},{v:!0,a:2,n:"ElementType",t:16,rt:$n[2].Type,g:{v:!0,a:2,n:"get_ElementType",t:8,rt:$n[2].Type,fg:"ElementType"},fn:"ElementType"},{a:2,n:"Item",t:16,rt:$n[3].SyntaxElement,p:[$n[2].Int32],i:!0,ipi:[{n:"index",pt:$n[2].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"getItem",rt:$n[3].SyntaxElement,p:[$n[2].Int32]}},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:1,n:"elements",t:4,rt:System.Array.type(Kusto.Language.Syntax.SyntaxElement),sn:"elements",ro:!0}]}},$n);$m("Kusto.Language.Syntax.SyntaxList$1",function(TElement){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[System.Array.type(TElement)],pi:[{n:"elements",ip:!0,pt:System.Array.type(TElement),ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(TElement),$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"elements",pt:$n[0].IEnumerable$1(TElement),ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"$ctor1"},{a:2,n:"Clone",t:8,sn:"Clone$2",rt:$n[3].SyntaxList$1(TElement)},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{a:1,n:"Copy",is:!0,t:8,pi:[{n:"list",pt:$n[0].IReadOnlyList$1(TElement),ps:0}],sn:"Copy",rt:System.Array.type(TElement),p:[$n[0].IReadOnlyList$1(TElement)]},{a:2,n:"Empty",is:!0,t:8,sn:"Empty",rt:$n[3].SyntaxList$1(TElement)},{a:2,n:"GetEnumerator",t:8,sn:"GetEnumerator$1",rt:$n[0].IEnumerator$1(TElement)},{ov:!0,a:2,n:"ElementType",t:16,rt:$n[2].Type,g:{ov:!0,a:2,n:"get_ElementType",t:8,rt:$n[2].Type,fg:"ElementType"},fn:"ElementType"},{a:2,n:"Item",t:16,rt:TElement,p:[$n[2].Int32],i:!0,ipi:[{n:"index",pt:$n[2].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"getItem$1",rt:TElement,p:[$n[2].Int32]}},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"}]}},$n);$m("Kusto.Language.Syntax.SyntaxListExtensions",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"GetByName",is:!0,t:8,pi:[{n:"list",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:0},{n:"names",pt:$n[0].IReadOnlyList$1(System.String),ps:1}],sn:"GetByName",rt:$n[3].NamedParameter,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[0].IReadOnlyList$1(System.String)]},{a:2,n:"GetByName",is:!0,t:8,pi:[{n:"list",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:0},{n:"name",pt:$n[2].String,ps:1}],sn:"GetByName$1",rt:$n[3].NamedParameter,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[2].String]},{a:2,n:"GetParameter",is:!0,t:8,pi:[{n:"list",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:0},{n:"parameter",pt:$n[4].QueryOperatorParameter,ps:1}],sn:"GetParameter",rt:$n[3].NamedParameter,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[4].QueryOperatorParameter]}]}},$n);$m("Kusto.Language.Syntax.SyntaxToken",function(){return{nested:[$n[3].SyntaxToken.IdentifierToken,$n[3].SyntaxToken.KindToken,$n[3].SyntaxToken.TextAndKindToken,$n[3].SyntaxToken.LiteralToken,$n[3].SyntaxToken.MissingToken],att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"ctor"},{a:1,n:"CheckCategory",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"category",pt:$n[3].SyntaxCategory,ps:1}],sn:"CheckCategory",rt:$n[2].Void,p:[$n[3].SyntaxKind,$n[3].SyntaxCategory]},{a:2,n:"Clone",t:8,sn:"Clone$1",rt:$n[3].SyntaxToken},{a:2,n:"From",is:!0,t:8,pi:[{n:"token",pt:$n[6].LexicalToken,ps:0},{n:"diagnostic",dv:null,o:!0,pt:$n[4].Diagnostic,ps:1}],sn:"From",rt:$n[3].SyntaxToken,p:[$n[6].LexicalToken,$n[4].Diagnostic]},{a:2,n:"GetNextToken",t:8,pi:[{n:"includeZeroWidthTokens",dv:!1,o:!0,pt:$n[2].Boolean,ps:0}],sn:"GetNextToken",rt:$n[3].SyntaxToken,p:[$n[2].Boolean]},{a:2,n:"GetPreviousToken",t:8,pi:[{n:"includeZeroWidthTokens",dv:!1,o:!0,pt:$n[2].Boolean,ps:0}],sn:"GetPreviousToken",rt:$n[3].SyntaxToken,p:[$n[2].Boolean]},{a:2,n:"Identifier",is:!0,t:8,pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"Identifier",rt:$n[3].SyntaxToken,p:[$n[2].String,$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)]},{a:2,n:"Keyword",is:!0,t:8,pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"keyword",pt:$n[3].SyntaxKind,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"Keyword",rt:$n[3].SyntaxToken,p:[$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)]},{a:2,n:"Literal",is:!0,t:8,pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"kind",pt:$n[3].SyntaxKind,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"Literal",rt:$n[3].SyntaxToken,p:[$n[2].String,$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)]},{a:2,n:"Missing",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"diagnostic",dv:null,o:!0,pt:$n[4].Diagnostic,ps:1}],sn:"Missing",rt:$n[3].SyntaxToken,p:[$n[3].SyntaxKind,$n[4].Diagnostic]},{a:2,n:"Missing",is:!0,t:8,pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"kind",pt:$n[3].SyntaxKind,ps:1},{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"Missing$1",rt:$n[3].SyntaxToken,p:[$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)]},{a:2,n:"Operator",is:!0,t:8,pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"kind",pt:$n[3].SyntaxKind,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"Operator",rt:$n[3].SyntaxToken,p:[$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)]},{a:2,n:"Other",is:!0,t:8,pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"kind",pt:$n[3].SyntaxKind,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"Other",rt:$n[3].SyntaxToken,p:[$n[2].String,$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)]},{a:2,n:"Punctuation",is:!0,t:8,pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"kind",pt:$n[3].SyntaxKind,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"Punctuation",rt:$n[3].SyntaxToken,p:[$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)]},{ov:!0,a:2,n:"ToString",t:8,pi:[{n:"includeTrivia",pt:$n[3].IncludeTrivia,ps:0}],sn:"ToString",rt:$n[2].String,p:[$n[3].IncludeTrivia]},{a:4,n:"Write",t:8,pi:[{n:"builder",pt:$n[9].StringBuilder,ps:0},{n:"includeTrivia",pt:$n[3].IncludeTrivia,ps:1},{n:"initialTriviaStart",pt:$n[2].Int32,ps:2}],sn:"Write",rt:$n[2].Void,p:[$n[9].StringBuilder,$n[3].IncludeTrivia,$n[2].Int32]},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[2].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{ov:!0,a:2,n:"FullWidth",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_FullWidth",t:8,rt:$n[2].Int32,fg:"FullWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FullWidth"},{v:!0,a:2,n:"IsLiteral",t:16,rt:$n[2].Boolean,g:{v:!0,a:2,n:"get_IsLiteral",t:8,rt:$n[2].Boolean,fg:"IsLiteral",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsLiteral"},{ov:!0,a:2,n:"IsToken",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsToken",t:8,rt:$n[2].Boolean,fg:"IsToken",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsToken"},{v:!0,a:2,n:"Prefix",t:16,rt:$n[2].String,g:{v:!0,a:2,n:"get_Prefix",t:8,rt:$n[2].String,fg:"Prefix"},fn:"Prefix"},{v:!0,a:2,n:"Text",t:16,rt:$n[2].String,g:{v:!0,a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{v:!0,a:2,n:"Trivia",t:16,rt:$n[2].String,g:{v:!0,a:2,n:"get_Trivia",t:8,rt:$n[2].String,fg:"Trivia"},fn:"Trivia"},{ov:!0,a:2,n:"TriviaWidth",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_TriviaWidth",t:8,rt:$n[2].Int32,fg:"TriviaWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"TriviaWidth"},{v:!0,a:2,n:"Value",t:16,rt:$n[2].Object,g:{v:!0,a:2,n:"get_Value",t:8,rt:$n[2].Object,fg:"Value"},fn:"Value"},{v:!0,a:2,n:"ValueText",t:16,rt:$n[2].String,g:{v:!0,a:2,n:"get_ValueText",t:8,rt:$n[2].String,fg:"ValueText"},fn:"ValueText"},{ov:!0,a:2,n:"Width",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_Width",t:8,rt:$n[2].Int32,fg:"Width",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Width"}]}},$n);$m("Kusto.Language.Syntax.SyntaxToken.IdentifierToken",function(){return{td:$n[3].SyntaxToken,att:1048835,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"FullWidth",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_FullWidth",t:8,rt:$n[2].Int32,fg:"FullWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FullWidth"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{ov:!0,a:2,n:"Text",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{ov:!0,a:2,n:"Trivia",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Trivia",t:8,rt:$n[2].String,fg:"Trivia"},fn:"Trivia"},{ov:!0,a:2,n:"Value",t:16,rt:$n[2].Object,g:{ov:!0,a:2,n:"get_Value",t:8,rt:$n[2].Object,fg:"Value"},fn:"Value"},{a:1,n:"fullWidth",t:4,rt:$n[2].Int32,sn:"fullWidth",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"text",t:4,rt:$n[2].String,sn:"text",ro:!0},{a:1,n:"trivia",t:4,rt:$n[2].String,sn:"trivia",ro:!0}]}},$n);$m("Kusto.Language.Syntax.SyntaxToken.KindToken",function(){return{td:$n[3].SyntaxToken,att:1048835,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"kind",pt:$n[3].SyntaxKind,ps:1},{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"FullWidth",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_FullWidth",t:8,rt:$n[2].Int32,fg:"FullWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FullWidth"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{ov:!0,a:2,n:"Text",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{ov:!0,a:2,n:"Trivia",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Trivia",t:8,rt:$n[2].String,fg:"Trivia"},fn:"Trivia"},{a:1,n:"fullWidth",t:4,rt:$n[2].Int32,sn:"fullWidth",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,n:"trivia",t:4,rt:$n[2].String,sn:"trivia",ro:!0}]}},$n);$m("Kusto.Language.Syntax.SyntaxToken.TextAndKindToken",function(){return{td:$n[3].SyntaxToken,att:1048835,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"kind",pt:$n[3].SyntaxKind,ps:2},{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"FullWidth",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_FullWidth",t:8,rt:$n[2].Int32,fg:"FullWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FullWidth"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{ov:!0,a:2,n:"Text",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{ov:!0,a:2,n:"Trivia",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Trivia",t:8,rt:$n[2].String,fg:"Trivia"},fn:"Trivia"},{a:1,n:"fullWidth",t:4,rt:$n[2].Int32,sn:"fullWidth",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,n:"text",t:4,rt:$n[2].String,sn:"text",ro:!0},{a:1,n:"trivia",t:4,rt:$n[2].String,sn:"trivia",ro:!0}]}},$n);$m("Kusto.Language.Syntax.SyntaxToken.LiteralToken",function(){return{td:$n[3].SyntaxToken,att:1048835,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"kind",pt:$n[3].SyntaxKind,ps:2},{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{a:1,n:"GetBooleanValue",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetBooleanValue",rt:$n[2].Object,p:[$n[2].String]},{a:1,n:"GetDateTimeValue",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetDateTimeValue",rt:$n[2].DateTime,p:[$n[2].String],box:function($v){return Bridge.box($v,System.DateTime,System.DateTime.format)}},{a:1,n:"GetDecimalValue",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetDecimalValue",rt:$n[2].Decimal,p:[$n[2].String]},{a:1,n:"GetGuidValue",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetGuidValue",rt:$n[2].Guid,p:[$n[2].String]},{a:1,n:"GetIntValue",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetIntValue",rt:$n[2].Int32,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"GetLongValue",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetLongValue",rt:$n[2].Int64,p:[$n[2].String]},{a:1,n:"GetPrefixLength",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetPrefixLength",rt:$n[2].Int32,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"GetRealValue",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetRealValue",rt:$n[2].Double,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:1,n:"GetTimeSpanValue",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetTimeSpanValue",rt:$n[2].TimeSpan,p:[$n[2].String]},{a:1,n:"GetTypeOfValue",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetTypeOfValue",rt:$n[2].String,p:[$n[2].String]},{a:1,n:"GetValue",t:8,sn:"GetValue",rt:$n[2].Object},{a:1,n:"GetValueSpan",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",out:!0,pt:$n[2].Int32,ps:1},{n:"length",out:!0,pt:$n[2].Int32,ps:2}],sn:"GetValueSpan",rt:$n[2].Void,p:[$n[2].String,$n[2].Int32,$n[2].Int32]},{a:1,n:"GetValueText",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetValueText",rt:$n[2].String,p:[$n[2].String]},{a:1,n:"IsNull",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"IsNull",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"FullWidth",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_FullWidth",t:8,rt:$n[2].Int32,fg:"FullWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FullWidth"},{ov:!0,a:2,n:"IsLiteral",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsLiteral",t:8,rt:$n[2].Boolean,fg:"IsLiteral",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsLiteral"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{ov:!0,a:2,n:"Prefix",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Prefix",t:8,rt:$n[2].String,fg:"Prefix"},fn:"Prefix"},{ov:!0,a:2,n:"Text",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{ov:!0,a:2,n:"Trivia",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Trivia",t:8,rt:$n[2].String,fg:"Trivia"},fn:"Trivia"},{ov:!0,a:2,n:"Value",t:16,rt:$n[2].Object,g:{ov:!0,a:2,n:"get_Value",t:8,rt:$n[2].Object,fg:"Value"},fn:"Value"},{ov:!0,a:2,n:"ValueText",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_ValueText",t:8,rt:$n[2].String,fg:"ValueText"},fn:"ValueText"},{a:1,n:"fullWidth",t:4,rt:$n[2].Int32,sn:"fullWidth",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,n:"text",t:4,rt:$n[2].String,sn:"text",ro:!0},{a:1,n:"trivia",t:4,rt:$n[2].String,sn:"trivia",ro:!0},{a:1,n:"value",t:4,rt:$n[2].Object,sn:"value"},{a:1,n:"valueText",t:4,rt:$n[2].String,sn:"valueText"}]}},$n);$m("Kusto.Language.Syntax.SyntaxToken.MissingToken",function(){return{td:$n[3].SyntaxToken,att:1048578,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[3].SyntaxKind,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"kind",pt:$n[3].SyntaxKind,ps:1},{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:2}],sn:"ctor"},{ov:!0,a:3,n:"CloneCore",t:8,sn:"CloneCore",rt:$n[3].SyntaxElement},{ov:!0,a:2,n:"FullWidth",t:16,rt:$n[2].Int32,g:{ov:!0,a:2,n:"get_FullWidth",t:8,rt:$n[2].Int32,fg:"FullWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FullWidth"},{ov:!0,a:2,n:"IsMissing",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsMissing",t:8,rt:$n[2].Boolean,fg:"IsMissing",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsMissing"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{ov:!0,a:2,n:"Text",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{ov:!0,a:2,n:"Trivia",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Trivia",t:8,rt:$n[2].String,fg:"Trivia"},fn:"Trivia"},{a:1,n:"kind",t:4,rt:$n[3].SyntaxKind,sn:"kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,n:"trivia",t:4,rt:$n[2].String,sn:"trivia",ro:!0}]}},$n);$m("Kusto.Language.Syntax.SyntaxTree",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[3].SyntaxNode],pi:[{n:"root",pt:$n[3].SyntaxNode,ps:0}],sn:"ctor"},{a:1,n:"ComputeMaxDepth",is:!0,t:8,pi:[{n:"root",pt:$n[3].SyntaxNode,ps:0}],sn:"ComputeMaxDepth",rt:$n[2].Int32,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Depth",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Depth",t:8,rt:$n[2].Int32,fg:"Depth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Depth"},{a:2,n:"IsSafeToRecurse",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsSafeToRecurse",t:8,rt:$n[2].Boolean,fg:"IsSafeToRecurse",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsSafeToRecurse"},{a:2,n:"Root",t:16,rt:$n[3].SyntaxNode,g:{a:2,n:"get_Root",t:8,rt:$n[3].SyntaxNode,fg:"Root"},fn:"Root"},{a:1,n:"_depth",t:4,rt:$n[2].Int32,sn:"_depth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Root>k__BackingField",t:4,rt:$n[3].SyntaxNode,sn:"Root"}]}},$n);$m("Kusto.Language.Parsing.CharScanners",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Char",is:!0,t:8,pi:[{n:"ch",pt:$n[2].Char,ps:0},{n:"ignoreCase",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],sn:"Char",rt:$n[6].Parser$1(System.Char),p:[$n[2].Char,$n[2].Boolean]},{a:2,n:"Chars",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"ignoreCase",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],sn:"Chars",rt:$n[6].Parser$1(System.Char),p:[$n[2].String,$n[2].Boolean]},{a:2,n:"Digit",is:!0,t:4,rt:$n[6].Parser$1(System.Char),sn:"Digit"},{a:2,n:"HexDigit",is:!0,t:4,rt:$n[6].Parser$1(System.Char),sn:"HexDigit"},{a:2,n:"Letter",is:!0,t:4,rt:$n[6].Parser$1(System.Char),sn:"Letter"},{a:2,n:"LineBreak",is:!0,t:4,rt:$n[6].Parser$1(System.Char),sn:"LineBreak"},{a:2,n:"Whitespace",is:!0,t:4,rt:$n[6].Parser$1(System.Char),sn:"Whitespace"}]}},$n);$m("Kusto.Language.Parsing.ArraySource$1",function(TInput){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(TInput),$n[2].Int32,$n[2].Int32],pi:[{n:"input",pt:$n[0].IReadOnlyList$1(TInput),ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1},{n:"length",dv:-1,o:!0,pt:$n[2].Int32,ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Eat",t:8,pi:[{n:"n",pt:$n[2].Int32,ps:0}],sn:"Eat",rt:$n[2].Void,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsEnd",t:8,pi:[{n:"n",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"IsEnd",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"Peek",t:8,pi:[{n:"n",pt:$n[2].Int32,ps:0}],sn:"Peek",rt:TInput,p:[$n[2].Int32]},{a:1,n:"end",t:4,rt:$n[2].Int32,sn:"end",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"input",t:4,rt:$n[0].IReadOnlyList$1(TInput),sn:"input",ro:!0},{a:1,n:"offset",t:4,rt:$n[2].Int32,sn:"offset",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Parsing.GrammarBuilder",function(){return{nested:[$n[6].GrammarBuilder.Builder$1],att:1048961,a:2,s:!0,m:[{a:2,n:"BuildGrammar",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(System.Object),ps:0},{n:"showRequired",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],tpc:1,tprm:["TInput"],sn:"BuildGrammar",rt:$n[2].String,p:[$n[6].Parser$1(System.Object),$n[2].Boolean]}]}},$n);$m("Kusto.Language.Parsing.GrammarBuilder.Builder$1",function(TInput){return{td:$n[6].GrammarBuilder,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].Boolean],pi:[{n:"showRequired",pt:$n[2].Boolean,ps:0}],sn:"ctor"},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[2].String},{a:2,n:"Visit",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"Visit",rt:$n[2].Void,p:[$n[6].Parser$1(TInput)]},{ov:!0,a:2,n:"VisitApply",t:8,pi:[{n:"parser",pt:$n[6].ApplyParser$3(TInput,System.Object,System.Object),ps:0}],tpc:2,tprm:["TLeft","TOutput"],sn:"VisitApply",rt:$n[2].Void,p:[$n[6].ApplyParser$3(TInput,System.Object,System.Object)]},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$1(TInput),ps:0}],sn:"VisitBest",rt:$n[2].Void,p:[$n[6].BestParser$1(TInput)]},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitBest$1",rt:$n[2].Void,p:[$n[6].BestParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitConvert",t:8,pi:[{n:"parser",pt:$n[6].ConvertParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitConvert",rt:$n[2].Void,p:[$n[6].ConvertParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitFails",t:8,pi:[{n:"parser",pt:$n[6].FailsParser$1(TInput),ps:0}],sn:"VisitFails",rt:$n[2].Void,p:[$n[6].FailsParser$1(TInput)]},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$1(TInput),ps:0}],sn:"VisitFirst",rt:$n[2].Void,p:[$n[6].FirstParser$1(TInput)]},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitFirst$1",rt:$n[2].Void,p:[$n[6].FirstParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitForward",t:8,pi:[{n:"parser",pt:$n[6].ForwardParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitForward",rt:$n[2].Void,p:[$n[6].ForwardParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$1(TInput),ps:0}],sn:"VisitIf",rt:$n[2].Void,p:[$n[6].IfParser$1(TInput)]},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitIf$1",rt:$n[2].Void,p:[$n[6].IfParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitMap",t:8,pi:[{n:"parser",pt:$n[6].MapParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMap",rt:$n[2].Void,p:[$n[6].MapParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$1(TInput),ps:0}],sn:"VisitMatch",rt:$n[2].Void,p:[$n[6].MatchParser$1(TInput)]},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMatch$1",rt:$n[2].Void,p:[$n[6].MatchParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitNot",t:8,pi:[{n:"parser",pt:$n[6].NotParser$1(TInput),ps:0}],sn:"VisitNot",rt:$n[2].Void,p:[$n[6].NotParser$1(TInput)]},{ov:!0,a:2,n:"VisitOneOrMore",t:8,pi:[{n:"parser",pt:$n[6].OneOrMoreParser$1(TInput),ps:0}],sn:"VisitOneOrMore",rt:$n[2].Void,p:[$n[6].OneOrMoreParser$1(TInput)]},{ov:!0,a:2,n:"VisitOptional",t:8,pi:[{n:"parser",pt:$n[6].OptionalParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitOptional",rt:$n[2].Void,p:[$n[6].OptionalParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitProduce",t:8,pi:[{n:"parser",pt:$n[6].ProduceParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitProduce",rt:$n[2].Void,p:[$n[6].ProduceParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitRequired",t:8,pi:[{n:"parser",pt:$n[6].RequiredParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRequired",rt:$n[2].Void,p:[$n[6].RequiredParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitRule",t:8,pi:[{n:"parser",pt:$n[6].RuleParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRule",rt:$n[2].Void,p:[$n[6].RuleParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitSequence",t:8,pi:[{n:"parser",pt:$n[6].SequenceParser$1(TInput),ps:0}],sn:"VisitSequence",rt:$n[2].Void,p:[$n[6].SequenceParser$1(TInput)]},{ov:!0,a:2,n:"VisitZeroOrMore",t:8,pi:[{n:"parser",pt:$n[6].ZeroOrMoreParser$1(TInput),ps:0}],sn:"VisitZeroOrMore",rt:$n[2].Void,p:[$n[6].ZeroOrMoreParser$1(TInput)]},{a:1,n:"WriteAlternation",t:8,pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"WriteAlternation",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput))]},{a:1,n:"WriteBracketed",t:8,pi:[{n:"startBracket",pt:$n[2].String,ps:0},{n:"endBracket",pt:$n[2].String,ps:1},{n:"parser",pt:$n[6].Parser$1(TInput),ps:2},{n:"action",dv:null,o:!0,pt:Function,ps:3}],sn:"WriteBracketed",rt:$n[2].Void,p:[$n[2].String,$n[2].String,$n[6].Parser$1(TInput),Function]},{a:1,n:"WriteOneOrMore",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"WriteOneOrMore",rt:$n[2].Void,p:[$n[6].Parser$1(TInput)]},{a:1,n:"WriteOptional",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"WriteOptional",rt:$n[2].Void,p:[$n[6].Parser$1(TInput)]},{a:1,n:"WriteRequired",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"WriteRequired",rt:$n[2].Void,p:[$n[6].Parser$1(TInput)]},{a:1,n:"WriteSeparated",t:8,pi:[{n:"separator",pt:$n[2].String,ps:0},{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:1}],sn:"WriteSeparated",rt:$n[2].Void,p:[$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput))]},{a:1,n:"WriteSequence",t:8,pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"WriteSequence",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput))]},{a:1,n:"WriteTerm",t:8,pi:[{n:"term",pt:$n[2].String,ps:0}],sn:"WriteTerm",rt:$n[2].Void,p:[$n[2].String]},{a:1,n:"WriteZeroOrMore",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"WriteZeroOrMore",rt:$n[2].Void,p:[$n[6].Parser$1(TInput)]},{a:1,n:"builder",t:4,rt:$n[9].StringBuilder,sn:"builder"},{a:1,n:"separator",t:4,rt:$n[2].String,sn:"separator"},{a:1,n:"showRequired",t:4,rt:$n[2].Boolean,sn:"showRequired",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Parsing.GrammarGrammar",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"CreateParser",is:!0,t:8,pi:[{n:"getRule",pt:Function,ps:0},{n:"createTerm",pt:Function,ps:1},{n:"createOptional",pt:Function,ps:2},{n:"createRequired",pt:Function,ps:3},{n:"createTagged",pt:Function,ps:4},{n:"createSequence",pt:Function,ps:5},{n:"createAlternation",pt:Function,ps:6},{n:"createZeroOrMore",pt:Function,ps:7},{n:"createOneOrMore",pt:Function,ps:8},{n:"createZeroOrMoreSeparated",pt:Function,ps:9},{n:"createOneOrMoreSeparated",pt:Function,ps:10}],tpc:1,tprm:["TResult"],sn:"CreateParser",rt:$n[6].Parser$2(System.Char,System.Object),p:[Function,Function,Function,Function,Function,Function,Function,Function,Function,Function,Function]}]}},$n);$m("Kusto.Language.Parsing.Parser$1",function(TInput){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ab:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ab:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ab:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{a:2,n:"Hide",t:8,sn:"Hide",rt:$n[6].Parser$1(TInput)},{ab:!0,a:2,n:"Parse",t:8,pi:[{n:"input",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ab:!0,a:2,n:"Scan",t:8,pi:[{n:"input",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Search",t:8,pi:[{n:"input",pt:$n[6].Source$1(TInput),ps:0},{n:"beforeAction",pt:Function,ps:1},{n:"afterAction",dv:null,o:!0,pt:Function,ps:2}],sn:"Search",rt:$n[6].SearchResult,p:[$n[6].Source$1(TInput),Function,Function]},{a:2,n:"Search",t:8,pi:[{n:"input",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"prevWasMissing",pt:$n[2].Boolean,ps:2},{n:"beforeAction",pt:Function,ps:3},{n:"afterAction",dv:null,o:!0,pt:Function,ps:4}],sn:"Search$1",rt:$n[6].SearchResult,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[2].Boolean,Function,Function]},{a:2,n:"WithAnnotations",t:8,pi:[{n:"annotations",pt:$n[0].IEnumerable$1(System.Object),ps:0}],sn:"WithAnnotations",rt:$n[6].Parser$1(TInput),p:[$n[0].IEnumerable$1(System.Object)]},{a:2,n:"WithIsHidden",t:8,pi:[{n:"isHidden",pt:$n[2].Boolean,ps:0}],sn:"WithIsHidden",rt:$n[6].Parser$1(TInput),p:[$n[2].Boolean]},{a:2,n:"WithTag",t:8,pi:[{n:"tag",pt:$n[2].String,ps:0}],sn:"WithTag",rt:$n[6].Parser$1(TInput),p:[$n[2].String]},{a:2,n:"Annotations",t:16,rt:$n[0].IReadOnlyList$1(System.Object),g:{a:2,n:"get_Annotations",t:8,rt:$n[0].IReadOnlyList$1(System.Object),fg:"Annotations"},s:{a:1,n:"set_Annotations",t:8,p:[$n[0].IReadOnlyList$1(System.Object)],rt:$n[2].Void,fs:"Annotations"},fn:"Annotations"},{a:2,n:"Description",t:16,rt:$n[2].String,g:{a:2,n:"get_Description",t:8,rt:$n[2].String,fg:"Description"},fn:"Description"},{a:2,n:"IsHidden",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsHidden",t:8,rt:$n[2].Boolean,fg:"IsHidden",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:1,n:"set_IsHidden",t:8,p:[$n[2].Boolean],rt:$n[2].Void,fs:"IsHidden"},fn:"IsHidden"},{v:!0,a:2,n:"IsOptional",t:16,rt:$n[2].Boolean,g:{v:!0,a:2,n:"get_IsOptional",t:8,rt:$n[2].Boolean,fg:"IsOptional",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOptional"},{a:2,n:"Tag",t:16,rt:$n[2].String,g:{a:2,n:"get_Tag",t:8,rt:$n[2].String,fg:"Tag"},s:{a:1,n:"set_Tag",t:8,p:[$n[2].String],rt:$n[2].Void,fs:"Tag"},fn:"Tag"},{a:1,n:"__Property__Initializer__Annotations",t:4,rt:$n[0].IReadOnlyList$1(System.Object),sn:"__Property__Initializer__Annotations"},{a:1,n:"__Property__Initializer__IsHidden",t:4,rt:$n[2].Boolean,sn:"__Property__Initializer__IsHidden",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"__Property__Initializer__Tag",t:4,rt:$n[2].String,sn:"__Property__Initializer__Tag"},{a:1,n:"description",t:4,rt:$n[2].String,sn:"description"},{a:1,backing:!0,n:"<Annotations>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(System.Object),sn:"Annotations"},{a:1,backing:!0,n:"<IsHidden>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsHidden",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Tag>k__BackingField",t:4,rt:$n[2].String,sn:"Tag"}]}},$n);$m("Kusto.Language.Parsing.ParseResult$1",function(TOutput){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].Int32,TOutput],pi:[{n:"length",pt:$n[2].Int32,ps:0},{n:"value",pt:TOutput,ps:1}],sn:"$ctor1"},{a:2,n:"Length",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Length",t:8,rt:$n[2].Int32,fg:"Length",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Length"},{a:2,n:"Succeeded",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_Succeeded",t:8,rt:$n[2].Boolean,fg:"Succeeded",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"Succeeded"},{a:2,n:"Value",t:16,rt:TOutput,g:{a:2,n:"get_Value",t:8,rt:TOutput,fg:"Value"},fn:"Value"},{a:1,backing:!0,n:"<Length>k__BackingField",t:4,rt:$n[2].Int32,sn:"Length",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:TOutput,sn:"Value"}]}},$n);$m("Kusto.Language.Parsing.Parser$2",function(TInput,TOutput){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Cast",t:8,tpc:1,tprm:["TNewOutput"],sn:"Cast",rt:$n[6].Parser$2(TInput,System.Object)},{a:2,n:"Hide",t:8,sn:"Hide$1",rt:$n[6].Parser$2(TInput,TOutput)},{ab:!0,a:2,n:"Parse",t:8,pi:[{n:"input",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{a:2,n:"WithAnnotations",t:8,pi:[{n:"annotations",pt:$n[0].IEnumerable$1(System.Object),ps:0}],sn:"WithAnnotations$1",rt:$n[6].Parser$2(TInput,TOutput),p:[$n[0].IEnumerable$1(System.Object)]},{a:2,n:"WithIsHidden",t:8,pi:[{n:"isHidden",pt:$n[2].Boolean,ps:0}],sn:"WithIsHidden$1",rt:$n[6].Parser$2(TInput,TOutput),p:[$n[2].Boolean]},{a:2,n:"WithTag",t:8,pi:[{n:"tag",pt:$n[2].String,ps:0}],sn:"WithTag$1",rt:$n[6].Parser$2(TInput,TOutput),p:[$n[2].String]}]}},$n);$m("Kusto.Language.Parsing.RightParser$2",function(TInput,TOutput){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:4,n:".ctor",t:1,p:[$n[6].Parser$2(TInput,TOutput)],pi:[{n:"parser",pt:$n[6].Parser$2(TInput,TOutput),ps:0}],sn:"$ctor1"},{a:2,n:"Hide",t:8,sn:"Hide",rt:$n[6].RightParser$2(TInput,TOutput)},{a:2,n:"WithAnnotations",t:8,pi:[{n:"annotations",pt:$n[0].IEnumerable$1(System.Object),ps:0}],sn:"WithAnnotations",rt:$n[6].RightParser$2(TInput,TOutput),p:[$n[0].IEnumerable$1(System.Object)]},{a:2,n:"WithIsHidden",t:8,pi:[{n:"isHidden",pt:$n[2].Boolean,ps:0}],sn:"WithIsHidden",rt:$n[6].RightParser$2(TInput,TOutput),p:[$n[2].Boolean]},{a:2,n:"WithTag",t:8,pi:[{n:"tag",pt:$n[2].String,ps:0}],sn:"WithTag",rt:$n[6].RightParser$2(TInput,TOutput),p:[$n[2].String]},{a:4,n:"Parser",t:16,rt:$n[6].Parser$2(TInput,TOutput),g:{a:4,n:"get_Parser",t:8,rt:$n[6].Parser$2(TInput,TOutput),fg:"Parser"},fn:"Parser"},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$2(TInput,TOutput),sn:"Parser"}]}},$n);$m("Kusto.Language.Parsing.ParserExtensions",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Parse",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(System.Char,System.Object),ps:0},{n:"text",pt:$n[2].String,ps:1}],tpc:1,tprm:["TOutput"],sn:"Parse",rt:$n[6].ParseResult$1(System.Object),p:[$n[6].Parser$2(System.Char,System.Object),$n[2].String]},{a:2,n:"Parse",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(System.Char),ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2}],sn:"Parse$1",rt:$n[2].Int32,p:[$n[6].Parser$1(System.Char),$n[2].String,$n[0].List$1(System.Object)],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"TryParse",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(System.Char,System.Object),ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"value",out:!0,pt:System.Object,ps:2}],tpc:1,tprm:["TOutput"],sn:"TryParse",rt:$n[2].Boolean,p:[$n[6].Parser$2(System.Char,System.Object),$n[2].String,System.Object],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Parsing.OffsetValue$1",function(TValue){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].Int32,TValue],pi:[{n:"offset",pt:$n[2].Int32,ps:0},{n:"value",pt:TValue,ps:1}],sn:"$ctor1"},{a:2,n:"Offset",t:4,rt:$n[2].Int32,sn:"Offset",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Value",t:4,rt:TValue,sn:"Value",ro:!0}]}},$n);$m("Kusto.Language.Parsing.Parsers$1",function(TInput){return{nested:[$n[6].Parsers$1.ElementAndSeparatorProducer$3,$n[6].Parsers$1.ElementProducer$2,$n[6].Parsers$1.LeftValue$1],att:1048961,a:2,s:!0,m:[{a:2,n:"And",is:!0,t:8,pi:[{n:"parsers",ip:!0,pt:System.Array.type(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"And",rt:$n[6].Parser$1(TInput),p:[System.Array.type(Kusto.Language.Parsing.Parser$1(TInput))]},{a:2,n:"Apply",is:!0,t:8,pi:[{n:"leftParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"fnRightParser",pt:Function,ps:1}],tpc:2,tprm:["TLeft","TOutput"],sn:"Apply",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"ApplyOptional",is:!0,t:8,pi:[{n:"leftParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"fnRightParser",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"ApplyOptional",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"ApplyZeroOrMore",is:!0,t:8,pi:[{n:"leftParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"fnRightParser",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"ApplyZeroOrMore",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Best",is:!0,t:8,pi:[{n:"parsers",ip:!0,pt:System.Array.type(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"Best",rt:$n[6].Parser$1(TInput),p:[System.Array.type(Kusto.Language.Parsing.Parser$1(TInput))]},{a:2,n:"Best",is:!0,t:8,pi:[{n:"parsers",ip:!0,pt:System.Array.type(Kusto.Language.Parsing.Parser$2(TInput,System.Object)),ps:0}],tpc:1,tprm:["TOutput"],sn:"Best$1",rt:$n[6].Parser$2(TInput,System.Object),p:[System.Array.type(Kusto.Language.Parsing.Parser$2(TInput,System.Object))]},{a:2,n:"Best",is:!0,t:8,pi:[{n:"parsers",ip:!0,pt:System.Array.type(Kusto.Language.Parsing.RightParser$2(TInput,System.Object)),ps:0}],tpc:1,tprm:["TOutput"],sn:"Best$3",rt:$n[6].RightParser$2(TInput,System.Object),p:[System.Array.type(Kusto.Language.Parsing.RightParser$2(TInput,System.Object))]},{a:2,n:"Best",is:!0,t:8,pi:[{n:"parsers",pt:System.Array.type(Kusto.Language.Parsing.Parser$2(TInput,System.Object)),ps:0},{n:"fnBetter",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Best$2",rt:$n[6].Parser$2(TInput,System.Object),p:[System.Array.type(Kusto.Language.Parsing.Parser$2(TInput,System.Object)),Function]},{a:2,n:"Convert",is:!0,t:8,pi:[{n:"pattern",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Convert$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$1(TInput),Function]},{a:2,n:"Convert",is:!0,t:8,pi:[{n:"pattern",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Convert$3",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$1(TInput),Function]},{a:2,n:"Convert",is:!0,t:8,pi:[{n:"pattern",pt:$n[6].Parser$1(System.Char),ps:0},{n:"producer",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Convert$4",rt:$n[6].Parser$2(System.Char,System.Object),p:[$n[6].Parser$1(System.Char),Function]},{a:2,n:"Convert",is:!0,t:8,pi:[{n:"pattern",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Convert$2",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$1(TInput),Function]},{a:2,n:"Convert",is:!0,t:8,pi:[{n:"pattern",pt:$n[6].Parser$1(TInput),ps:0},{n:"value",pt:System.Object,ps:1}],tpc:1,tprm:["TOutput"],sn:"Convert",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$1(TInput),System.Object]},{a:2,n:"Count",is:!0,t:8,pi:[{n:"scanner",pt:$n[6].Parser$1(TInput),ps:0}],sn:"Count",rt:$n[6].Parser$2(TInput,System.Int32),p:[$n[6].Parser$1(TInput)]},{a:2,n:"Fails",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"Fails",rt:$n[6].Parser$1(TInput),p:[$n[6].Parser$1(TInput)]},{a:2,n:"First",is:!0,t:8,pi:[{n:"parsers",ip:!0,pt:System.Array.type(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"First",rt:$n[6].Parser$1(TInput),p:[System.Array.type(Kusto.Language.Parsing.Parser$1(TInput))]},{a:2,n:"First",is:!0,t:8,pi:[{n:"parsers",ip:!0,pt:System.Array.type(Kusto.Language.Parsing.Parser$2(TInput,System.Object)),ps:0}],tpc:1,tprm:["TOutput"],sn:"First$1",rt:$n[6].Parser$2(TInput,System.Object),p:[System.Array.type(Kusto.Language.Parsing.Parser$2(TInput,System.Object))]},{a:2,n:"First",is:!0,t:8,pi:[{n:"parsers",ip:!0,pt:System.Array.type(Kusto.Language.Parsing.RightParser$2(TInput,System.Object)),ps:0}],tpc:1,tprm:["TOutput"],sn:"First$2",rt:$n[6].RightParser$2(TInput,System.Object),p:[System.Array.type(Kusto.Language.Parsing.RightParser$2(TInput,System.Object))]},{a:2,n:"Forward",is:!0,t:8,pi:[{n:"deferredParser",pt:Function,ps:0}],tpc:1,tprm:["TOutput"],sn:"Forward",rt:$n[6].Parser$2(TInput,System.Object),p:[Function]},{a:2,n:"If",is:!0,t:8,pi:[{n:"test",pt:$n[6].Parser$1(TInput),ps:0},{n:"parser",pt:$n[6].Parser$1(TInput),ps:1}],sn:"If",rt:$n[6].Parser$1(TInput),p:[$n[6].Parser$1(TInput),$n[6].Parser$1(TInput)]},{a:2,n:"If",is:!0,t:8,pi:[{n:"test",pt:$n[6].Parser$1(TInput),ps:0},{n:"parser",pt:$n[6].Parser$2(TInput,System.Object),ps:1}],tpc:1,tprm:["TOutput"],sn:"If$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$1(TInput),$n[6].Parser$2(TInput,System.Object)]},{a:2,n:"If",is:!0,t:8,pi:[{n:"test",pt:$n[6].Parser$1(TInput),ps:0},{n:"parser",pt:$n[6].RightParser$2(TInput,System.Object),ps:1}],tpc:1,tprm:["TOutput"],sn:"If$2",rt:$n[6].RightParser$2(TInput,System.Object),p:[$n[6].Parser$1(TInput),$n[6].RightParser$2(TInput,System.Object)]},{a:2,n:"List",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"oneOrMore",pt:$n[2].Boolean,ps:1},{n:"producer",pt:Function,ps:2}],tpc:2,tprm:["TElement","TProducer"],sn:"List",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[2].Boolean,Function]},{a:2,n:"List",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"separatorParser",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"oneOrMore",pt:$n[2].Boolean,ps:2},{n:"producer",pt:Function,ps:3}],tpc:3,tprm:["TElement","TSeparator","TProducer"],sn:"List$4",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[2].Boolean,Function]},{a:2,n:"List",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"missingElement",pt:Function,ps:1},{n:"oneOrMore",pt:$n[2].Boolean,ps:2},{n:"producer",pt:Function,ps:3}],tpc:2,tprm:["TElement","TProducer"],sn:"List$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),Function,$n[2].Boolean,Function]},{a:2,n:"List",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"separatorParser",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"secondaryElementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"oneOrMore",pt:$n[2].Boolean,ps:3},{n:"producer",pt:Function,ps:4}],tpc:3,tprm:["TElement","TSeparator","TProducer"],sn:"List$2",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[2].Boolean,Function]},{a:2,n:"List",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"separatorParser",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"missingElement",pt:Function,ps:2},{n:"missingSeparator",pt:Function,ps:3},{n:"endOfList",pt:$n[6].Parser$1(TInput),ps:4},{n:"oneOrMore",pt:$n[2].Boolean,ps:5},{n:"allowTrailingSeparator",pt:$n[2].Boolean,ps:6},{n:"producer",pt:Function,ps:7}],tpc:3,tprm:["TElement","TSeparator","TProducer"],sn:"List$5",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function,Function,$n[6].Parser$1(TInput),$n[2].Boolean,$n[2].Boolean,Function]},{a:2,n:"List",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"separatorParser",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"secondaryElementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"missingElement",pt:Function,ps:3},{n:"missingSeparator",pt:Function,ps:4},{n:"endOfList",pt:$n[6].Parser$1(TInput),ps:5},{n:"oneOrMore",pt:$n[2].Boolean,ps:6},{n:"allowTrailingSeparator",pt:$n[2].Boolean,ps:7},{n:"producer",pt:Function,ps:8}],tpc:3,tprm:["TElement","TSeparator","TProducer"],sn:"List$3",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function,Function,$n[6].Parser$1(TInput),$n[2].Boolean,$n[2].Boolean,Function]},{a:2,n:"Map",is:!0,t:8,pi:[{n:"keyValuePairs",pt:$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),System.Object)),ps:0}],tpc:1,tprm:["TOutput"],sn:"Map",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),System.Object))]},{a:2,n:"Map",is:!0,t:8,pi:[{n:"keyValuePairs",pt:$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),Function)),ps:0}],tpc:1,tprm:["TOutput"],sn:"Map$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),Function))]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"consumer",pt:Function,ps:0}],sn:"Match$2",rt:$n[6].Parser$1(TInput),p:[Function]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"items",pt:$n[0].IReadOnlyList$1(TInput),ps:0}],sn:"Match$3",rt:$n[6].Parser$1(TInput),p:[$n[0].IReadOnlyList$1(TInput)]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"predicate",pt:Function,ps:0}],sn:"Match$5",rt:$n[6].Parser$1(TInput),p:[Function]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"item",pt:TInput,ps:0}],sn:"Match",rt:$n[6].Parser$1(TInput),p:[TInput]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"consumer",pt:Function,ps:0},{n:"producer",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Match$8",rt:$n[6].Parser$2(TInput,System.Object),p:[Function,Function]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"ch",pt:$n[2].Char,ps:0},{n:"ignoreCase",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],sn:"Match$6",rt:$n[6].Parser$1(System.Char),p:[$n[2].Char,$n[2].Boolean]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"items",pt:$n[0].IReadOnlyList$1(TInput),ps:0},{n:"comparer",pt:$n[0].EqualityComparer$1(TInput),ps:1}],sn:"Match$4",rt:$n[6].Parser$1(TInput),p:[$n[0].IReadOnlyList$1(TInput),$n[0].EqualityComparer$1(TInput)]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"predicate",pt:Function,ps:0},{n:"producer",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Match$9",rt:$n[6].Parser$2(TInput,System.Object),p:[Function,Function]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"ignoreCase",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],sn:"Match$7",rt:$n[6].Parser$1(System.Char),p:[$n[2].String,$n[2].Boolean]},{a:2,n:"Match",is:!0,t:8,pi:[{n:"item",pt:TInput,ps:0},{n:"comparer",pt:$n[0].EqualityComparer$1(TInput),ps:1}],sn:"Match$1",rt:$n[6].Parser$1(TInput),p:[TInput,$n[0].EqualityComparer$1(TInput)]},{a:2,n:"Not",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"Not",rt:$n[6].Parser$1(TInput),p:[$n[6].Parser$1(TInput)]},{a:2,n:"OList",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"separatorParser",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"missingElement",pt:Function,ps:2},{n:"missingSeparator",pt:Function,ps:3},{n:"endOfList",pt:$n[6].Parser$1(TInput),ps:4},{n:"oneOrMore",pt:$n[2].Boolean,ps:5},{n:"allowTrailingSeparator",pt:$n[2].Boolean,ps:6},{n:"producer",pt:Function,ps:7}],tpc:3,tprm:["TElement","TSeparator","TProducer"],sn:"OList$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function,Function,$n[6].Parser$1(TInput),$n[2].Boolean,$n[2].Boolean,Function]},{a:2,n:"OList",is:!0,t:8,pi:[{n:"primaryElementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"separatorParser",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"secondaryElementParser",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"missingElement",pt:Function,ps:3},{n:"missingSeparator",pt:Function,ps:4},{n:"endOfList",pt:$n[6].Parser$1(TInput),ps:5},{n:"oneOrMore",pt:$n[2].Boolean,ps:6},{n:"allowTrailingSeparator",pt:$n[2].Boolean,ps:7},{n:"producer",pt:Function,ps:8}],tpc:3,tprm:["TElement","TSeparator","TProducer"],sn:"OList",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function,Function,$n[6].Parser$1(TInput),$n[2].Boolean,$n[2].Boolean,Function]},{a:2,n:"OneOrMore",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"OneOrMore",rt:$n[6].Parser$1(TInput),p:[$n[6].Parser$1(TInput)]},{a:2,n:"OneOrMore",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"producer",pt:Function,ps:1}],tpc:2,tprm:["TParser","TProducer"],sn:"OneOrMore$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Optional",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"Optional",rt:$n[6].Parser$1(TInput),p:[$n[6].Parser$1(TInput)]},{a:2,n:"Optional",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"Optional$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object)]},{a:2,n:"Optional",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"producer",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Optional$2",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Or",is:!0,t:8,pi:[{n:"parsers",ip:!0,pt:System.Array.type(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"Or",rt:$n[6].Parser$1(TInput),p:[System.Array.type(Kusto.Language.Parsing.Parser$1(TInput))]},{a:1,n:"Produce",is:!0,t:8,pi:[{n:"producer",pt:Function,ps:0}],tpc:2,tprm:["TElement","TOutput"],sn:"Produce$3",rt:Function,p:[Function]},{a:2,n:"Produce",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Produce",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$1(TInput),Function]},{a:2,n:"Produce",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],tpc:2,tprm:["TElement","TOutput"],sn:"Produce$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$1(TInput),Function]},{a:1,n:"Produce",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],tpc:2,tprm:["TElement","TOutput"],sn:"Produce$2",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$1(TInput),Function]},{a:2,n:"Required",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"producer",pt:Function,ps:1}],tpc:1,tprm:["TOutput"],sn:"Required",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"producer",pt:Function,ps:1}],tpc:2,tprm:["TParser1","TOutput"],sn:"Rule",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"left",pt:$n[6].Parsers$1.LeftValue$1(TInput,System.Object),ps:0},{n:"producer",pt:Function,ps:1}],tpc:2,tprm:["TLeft","TOutput"],sn:"Rule$9",rt:$n[6].RightParser$2(TInput,System.Object),p:[$n[6].Parsers$1.LeftValue$1(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"producer",pt:Function,ps:2}],tpc:3,tprm:["TParser1","TParser2","TOutput"],sn:"Rule$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"left",pt:$n[6].Parsers$1.LeftValue$1(TInput,System.Object),ps:0},{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"producer",pt:Function,ps:2}],tpc:3,tprm:["TLeft","TParser1","TOutput"],sn:"Rule$10",rt:$n[6].RightParser$2(TInput,System.Object),p:[$n[6].Parsers$1.LeftValue$1(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"parser3",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"producer",pt:Function,ps:3}],tpc:4,tprm:["TParser1","TParser2","TParser3","TOutput"],sn:"Rule$2",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"left",pt:$n[6].Parsers$1.LeftValue$1(TInput,System.Object),ps:0},{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"producer",pt:Function,ps:3}],tpc:4,tprm:["TLeft","TParser1","TParser2","TOutput"],sn:"Rule$11",rt:$n[6].RightParser$2(TInput,System.Object),p:[$n[6].Parsers$1.LeftValue$1(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"parser3",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"parser4",pt:$n[6].Parser$2(TInput,System.Object),ps:3},{n:"producer",pt:Function,ps:4}],tpc:5,tprm:["TParser1","TParser2","TParser3","TParser4","TOutput"],sn:"Rule$3",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"left",pt:$n[6].Parsers$1.LeftValue$1(TInput,System.Object),ps:0},{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"parser3",pt:$n[6].Parser$2(TInput,System.Object),ps:3},{n:"producer",pt:Function,ps:4}],tpc:5,tprm:["TLeft","TParser1","TParser2","TParser3","TOutput"],sn:"Rule$12",rt:$n[6].RightParser$2(TInput,System.Object),p:[$n[6].Parsers$1.LeftValue$1(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"parser3",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"parser4",pt:$n[6].Parser$2(TInput,System.Object),ps:3},{n:"parser5",pt:$n[6].Parser$2(TInput,System.Object),ps:4},{n:"producer",pt:Function,ps:5}],tpc:6,tprm:["TParser1","TParser2","TParser3","TParser4","TParser5","TOutput"],sn:"Rule$4",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"parser3",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"parser4",pt:$n[6].Parser$2(TInput,System.Object),ps:3},{n:"parser5",pt:$n[6].Parser$2(TInput,System.Object),ps:4},{n:"parser6",pt:$n[6].Parser$2(TInput,System.Object),ps:5},{n:"producer",pt:Function,ps:6}],tpc:7,tprm:["TParser1","TParser2","TParser3","TParser4","TParser5","TParser6","TOutput"],sn:"Rule$5",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"parser3",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"parser4",pt:$n[6].Parser$2(TInput,System.Object),ps:3},{n:"parser5",pt:$n[6].Parser$2(TInput,System.Object),ps:4},{n:"parser6",pt:$n[6].Parser$2(TInput,System.Object),ps:5},{n:"parser7",pt:$n[6].Parser$2(TInput,System.Object),ps:6},{n:"producer",pt:Function,ps:7}],tpc:8,tprm:["TParser1","TParser2","TParser3","TParser4","TParser5","TParser6","TParser7","TOutput"],sn:"Rule$6",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"parser3",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"parser4",pt:$n[6].Parser$2(TInput,System.Object),ps:3},{n:"parser5",pt:$n[6].Parser$2(TInput,System.Object),ps:4},{n:"parser6",pt:$n[6].Parser$2(TInput,System.Object),ps:5},{n:"parser7",pt:$n[6].Parser$2(TInput,System.Object),ps:6},{n:"parser8",pt:$n[6].Parser$2(TInput,System.Object),ps:7},{n:"producer",pt:Function,ps:8}],tpc:9,tprm:["TParser1","TParser2","TParser3","TParser4","TParser5","TParser6","TParser7","TParser8","TOutput"],sn:"Rule$7",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Rule",is:!0,t:8,pi:[{n:"parser1",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"parser2",pt:$n[6].Parser$2(TInput,System.Object),ps:1},{n:"parser3",pt:$n[6].Parser$2(TInput,System.Object),ps:2},{n:"parser4",pt:$n[6].Parser$2(TInput,System.Object),ps:3},{n:"parser5",pt:$n[6].Parser$2(TInput,System.Object),ps:4},{n:"parser6",pt:$n[6].Parser$2(TInput,System.Object),ps:5},{n:"parser7",pt:$n[6].Parser$2(TInput,System.Object),ps:6},{n:"parser8",pt:$n[6].Parser$2(TInput,System.Object),ps:7},{n:"parser9",pt:$n[6].Parser$2(TInput,System.Object),ps:8},{n:"producer",pt:Function,ps:9}],tpc:10,tprm:["TParser1","TParser2","TParser3","TParser4","TParser5","TParser6","TParser7","TParser8","TParser9","TOutput"],sn:"Rule$8",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"Sequence",is:!0,t:8,pi:[{n:"parsers",ip:!0,pt:System.Array.type(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"Sequence",rt:$n[6].Parser$1(TInput),p:[System.Array.type(Kusto.Language.Parsing.Parser$1(TInput))]},{a:2,n:"Text",is:!0,t:8,pi:[{n:"pattern",pt:$n[6].Parser$1(System.Char),ps:0}],sn:"Text",rt:$n[6].Parser$2(System.Char,System.String),p:[$n[6].Parser$1(System.Char)]},{a:2,n:"Text",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"Text$1",rt:$n[6].Parser$2(System.Char,System.String),p:[$n[2].String]},{a:2,n:"TextAndOffset",is:!0,t:8,pi:[{n:"pattern",pt:$n[6].Parser$1(System.Char),ps:0}],sn:"TextAndOffset",rt:$n[6].Parser$2(System.Char,Kusto.Language.Parsing.OffsetValue$1(System.String)),p:[$n[6].Parser$1(System.Char)]},{a:2,n:"ZeroOrMore",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"ZeroOrMore",rt:$n[6].Parser$1(TInput),p:[$n[6].Parser$1(TInput)]},{a:2,n:"ZeroOrMore",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(TInput,System.Object),ps:0},{n:"producer",pt:Function,ps:1}],tpc:2,tprm:["TParser","TProducer"],sn:"ZeroOrMore$1",rt:$n[6].Parser$2(TInput,System.Object),p:[$n[6].Parser$2(TInput,System.Object),Function]},{a:2,n:"ZeroOrOne",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"ZeroOrOne",rt:$n[6].Parser$1(TInput),p:[$n[6].Parser$1(TInput)]},{a:2,n:"Any",is:!0,t:4,rt:$n[6].Parser$1(TInput),sn:"Any",ro:!0}]}},$n);$m("Kusto.Language.Parsing.Parsers$1.ElementAndSeparatorProducer$3",function(TInput,TElement,TSeparator,TProducer){return{td:$n[6].Parsers$1(TInput),att:1048579,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Produce",is:!0,t:8,pi:[{n:"output",pt:$n[0].IReadOnlyList$1(System.Object),ps:0},{n:"producer",pt:Function,ps:1}],sn:"Produce",rt:TProducer,p:[$n[0].IReadOnlyList$1(System.Object),Function]},{a:1,n:"listPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Parsing.ElementAndSeparator$2(TElement,TSeparator))),sn:"listPool",ro:!0}]}},$n);$m("Kusto.Language.Parsing.Parsers$1.ElementProducer$2",function(TInput,TElement,TProducer){return{td:$n[6].Parsers$1(TInput),att:1048579,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Produce",is:!0,t:8,pi:[{n:"output",pt:$n[0].List$1(System.Object),ps:0},{n:"outputStart",pt:$n[2].Int32,ps:1},{n:"producer",pt:Function,ps:2}],sn:"Produce",rt:TProducer,p:[$n[0].List$1(System.Object),$n[2].Int32,Function]},{a:1,n:"listPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(TElement)),sn:"listPool",ro:!0}]}},$n);$m("Kusto.Language.Parsing.Parsers$1.LeftValue$1",function(TInput,TLeft){return{td:$n[6].Parsers$1(TInput),att:1048842,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"}]}},$n);$m("Kusto.Language.Parsing.ElementAndSeparator$2",function(TElement,TSeparator){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[TElement,TSeparator],pi:[{n:"element",pt:TElement,ps:0},{n:"separator",dv:Bridge.getDefaultValue(TSeparator),o:!0,pt:TSeparator,ps:1}],sn:"$ctor1"},{a:2,n:"Element",t:16,rt:TElement,g:{a:2,n:"get_Element",t:8,rt:TElement,fg:"Element"},fn:"Element"},{a:2,n:"Separator",t:16,rt:TSeparator,g:{a:2,n:"get_Separator",t:8,rt:TSeparator,fg:"Separator"},fn:"Separator"},{a:1,backing:!0,n:"<Element>k__BackingField",t:4,rt:TElement,sn:"Element"},{a:1,backing:!0,n:"<Separator>k__BackingField",t:4,rt:TSeparator,sn:"Separator"}]}},$n);$m("Kusto.Language.Parsing.MatchParser$1",function(TInput){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[Function],pi:[{n:"consumer",pt:Function,ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[Function],pi:[{n:"predicate",pt:Function,ps:0}],sn:"$ctor1"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Consumer",t:16,rt:Function,g:{a:2,n:"get_Consumer",t:8,rt:Function,fg:"Consumer"},fn:"Consumer"},{a:1,backing:!0,n:"<Consumer>k__BackingField",t:4,rt:Function,sn:"Consumer"}]}},$n);$m("Kusto.Language.Parsing.MatchParser$2",function(TInput,TOutput){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[Function,Function],pi:[{n:"consumer",pt:Function,ps:0},{n:"producer",pt:Function,ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[Function,Function],pi:[{n:"predicate",pt:Function,ps:0},{n:"producer",pt:Function,ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Consumer",t:16,rt:Function,g:{a:2,n:"get_Consumer",t:8,rt:Function,fg:"Consumer"},fn:"Consumer"},{a:2,n:"Producer",t:16,rt:Function,g:{a:2,n:"get_Producer",t:8,rt:Function,fg:"Producer"},fn:"Producer"},{a:1,backing:!0,n:"<Consumer>k__BackingField",t:4,rt:Function,sn:"Consumer"},{a:1,backing:!0,n:"<Producer>k__BackingField",t:4,rt:Function,sn:"Producer"}]}},$n);$m("Kusto.Language.Parsing.NotParser$1",function(TInput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput)],pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Pattern",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Pattern",t:8,rt:$n[6].Parser$1(TInput),fg:"Pattern"},fn:"Pattern"},{a:1,backing:!0,n:"<Pattern>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Pattern"}]}},$n);$m("Kusto.Language.Parsing.FailsParser$1",function(TInput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput)],pi:[{n:"pattern",pt:$n[6].Parser$1(TInput),ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Pattern",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Pattern",t:8,rt:$n[6].Parser$1(TInput),fg:"Pattern"},fn:"Pattern"},{a:1,backing:!0,n:"<Pattern>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Pattern"}]}},$n);$m("Kusto.Language.Parsing.ListPrimaryParser$2",function(TInput,TOutput){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{a:1,n:"s_outputListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(System.Object)),sn:"s_outputListPool",ro:!0}]}},$n);$m("Kusto.Language.Parsing.ResultPrimaryParser$2",function(TInput,TOutput){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Parsing.RuleParser$2",function(TInput,TProducer){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),Function,Function],pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0},{n:"listProducer",pt:Function,ps:1},{n:"resultProducer",dv:null,o:!0,pt:Function,ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TProducer),p:[$n[6].Source$1(TInput),$n[2].Int32]},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"input",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ListProducer",t:16,rt:Function,g:{a:2,n:"get_ListProducer",t:8,rt:Function,fg:"ListProducer"},fn:"ListProducer"},{a:2,n:"Parsers",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),g:{a:2,n:"get_Parsers",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),fg:"Parsers"},fn:"Parsers"},{a:2,n:"ResultProducer",t:16,rt:Function,g:{a:2,n:"get_ResultProducer",t:8,rt:Function,fg:"ResultProducer"},fn:"ResultProducer"},{a:1,n:"_parsers",t:4,rt:System.Array.type(Kusto.Language.Parsing.Parser$1(TInput)),sn:"_parsers",ro:!0},{a:1,backing:!0,n:"<ListProducer>k__BackingField",t:4,rt:Function,sn:"ListProducer"},{a:1,backing:!0,n:"<ResultProducer>k__BackingField",t:4,rt:Function,sn:"ResultProducer"}]}},$n);$m("Kusto.Language.Parsing.ProduceParser$2",function(TInput,TProducer){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput),Function],pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"Produce",t:8,pi:[{n:"output",pt:$n[0].List$1(System.Object),ps:0},{n:"outputStart",pt:$n[2].Int32,ps:1},{n:"originalOutputCount",pt:$n[2].Int32,ps:2},{n:"inputLength",pt:$n[2].Int32,ps:3}],sn:"Produce",rt:$n[2].Int32,p:[$n[0].List$1(System.Object),$n[2].Int32,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Parser",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$1(TInput),fg:"Parser"},fn:"Parser"},{a:2,n:"Producer",t:16,rt:Function,g:{a:2,n:"get_Producer",t:8,rt:Function,fg:"Producer"},fn:"Producer"},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Parser"},{a:1,backing:!0,n:"<Producer>k__BackingField",t:4,rt:Function,sn:"Producer"}]}},$n);$m("Kusto.Language.Parsing.OptionalParser$2",function(TInput,TOutput){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$2(TInput,TOutput),Function],pi:[{n:"parser",pt:$n[6].Parser$2(TInput,TOutput),ps:0},{n:"producer",pt:Function,ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"IsOptional",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsOptional",t:8,rt:$n[2].Boolean,fg:"IsOptional",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOptional"},{a:2,n:"Parser",t:16,rt:$n[6].Parser$2(TInput,TOutput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$2(TInput,TOutput),fg:"Parser"},fn:"Parser"},{a:2,n:"Producer",t:16,rt:Function,g:{a:2,n:"get_Producer",t:8,rt:Function,fg:"Producer"},fn:"Producer"},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$2(TInput,TOutput),sn:"Parser"},{a:1,backing:!0,n:"<Producer>k__BackingField",t:4,rt:Function,sn:"Producer"}]}},$n);$m("Kusto.Language.Parsing.RequiredParser$2",function(TInput,TOutput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$2(TInput,TOutput),Function],pi:[{n:"parser",pt:$n[6].Parser$2(TInput,TOutput),ps:0},{n:"producer",pt:Function,ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Parser",t:16,rt:$n[6].Parser$2(TInput,TOutput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$2(TInput,TOutput),fg:"Parser"},fn:"Parser"},{a:2,n:"Producer",t:16,rt:Function,g:{a:2,n:"get_Producer",t:8,rt:Function,fg:"Producer"},fn:"Producer"},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$2(TInput,TOutput),sn:"Parser"},{a:1,backing:!0,n:"<Producer>k__BackingField",t:4,rt:Function,sn:"Producer"}]}},$n);$m("Kusto.Language.Parsing.FirstParser$2",function(TInput,TOutput){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput))],pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput)),ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Parsers",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput)),g:{a:2,n:"get_Parsers",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput)),fg:"Parsers"},fn:"Parsers"},{a:1,n:"_parsers",t:4,rt:System.Array.type(Kusto.Language.Parsing.Parser$2(TInput,TOutput)),sn:"_parsers",ro:!0}]}},$n);$m("Kusto.Language.Parsing.BestParser$1",function(TInput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput))],pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Parsers",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),g:{a:2,n:"get_Parsers",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),fg:"Parsers"},fn:"Parsers"},{a:1,n:"_parsers",t:4,rt:System.Array.type(Kusto.Language.Parsing.Parser$1(TInput)),sn:"_parsers",ro:!0}]}},$n);$m("Kusto.Language.Parsing.BestParser$2",function(TInput,TOutput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput)),Function],pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput)),ps:0},{n:"fnBetter",dv:null,o:!0,pt:Function,ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Better",t:16,rt:Function,g:{a:2,n:"get_Better",t:8,rt:Function,fg:"Better"},fn:"Better"},{a:2,n:"Parsers",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput)),g:{a:2,n:"get_Parsers",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput)),fg:"Parsers"},fn:"Parsers"},{a:1,n:"_fnBetter",t:4,rt:Function,sn:"_fnBetter",ro:!0},{a:1,n:"_parsers",t:4,rt:System.Array.type(Kusto.Language.Parsing.Parser$2(TInput,TOutput)),sn:"_parsers",ro:!0}]}},$n);$m("Kusto.Language.Parsing.ConvertParser$2",function(TInput,TOutput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput),Function],pi:[{n:"pattern",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput),Function],pi:[{n:"pattern",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],sn:"$ctor3"},{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput),Function],pi:[{n:"pattern",pt:$n[6].Parser$1(TInput),ps:0},{n:"producer",pt:Function,ps:1}],sn:"$ctor2"},{a:1,n:".ctor",t:1,p:[$n[6].Parser$1(TInput),Function,Function],pi:[{n:"pattern",pt:$n[6].Parser$1(TInput),ps:0},{n:"listProducer",pt:Function,ps:1},{n:"singleProducer",pt:Function,ps:2}],sn:"$ctor1"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{a:1,n:"Produce",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"Produce",rt:TOutput,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[2].Int32]},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ListProducer",t:16,rt:Function,g:{a:2,n:"get_ListProducer",t:8,rt:Function,fg:"ListProducer"},fn:"ListProducer"},{a:2,n:"Pattern",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Pattern",t:8,rt:$n[6].Parser$1(TInput),fg:"Pattern"},fn:"Pattern"},{a:2,n:"SingleProducer",t:16,rt:Function,g:{a:2,n:"get_SingleProducer",t:8,rt:Function,fg:"SingleProducer"},fn:"SingleProducer"},{a:1,n:"s_inputListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(TInput)),sn:"s_inputListPool",ro:!0},{a:1,backing:!0,n:"<ListProducer>k__BackingField",t:4,rt:Function,sn:"ListProducer"},{a:1,backing:!0,n:"<Pattern>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Pattern"},{a:1,backing:!0,n:"<SingleProducer>k__BackingField",t:4,rt:Function,sn:"SingleProducer"}]}},$n);$m("Kusto.Language.Parsing.IfParser$2",function(TInput,TOutput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput),$n[6].Parser$2(TInput,TOutput)],pi:[{n:"test",pt:$n[6].Parser$1(TInput),ps:0},{n:"parser",pt:$n[6].Parser$2(TInput,TOutput),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Parser",t:16,rt:$n[6].Parser$2(TInput,TOutput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$2(TInput,TOutput),fg:"Parser"},fn:"Parser"},{a:2,n:"Test",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Test",t:8,rt:$n[6].Parser$1(TInput),fg:"Test"},fn:"Test"},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$2(TInput,TOutput),sn:"Parser"},{a:1,backing:!0,n:"<Test>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Test"}]}},$n);$m("Kusto.Language.Parsing.ForwardParser$2",function(TInput,TOutput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[Function],pi:[{n:"deferredParser",pt:Function,ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"DeferredParser",t:4,rt:Function,sn:"DeferredParser"},{a:1,n:"MaxCallDepth",is:!0,t:4,rt:$n[2].Int32,sn:"MaxCallDepth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"s_callDepth",is:!0,t:4,rt:$n[2].Int32,sn:"s_callDepth",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Parsing.MapParser$2",function(TInput,TOutput){return{nested:[$n[6].MapParser$2.Node],att:1048833,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[6].MapParser$2.Node(TInput,TOutput)],pi:[{n:"root",pt:$n[6].MapParser$2.Node(TInput,TOutput),ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),Function))],pi:[{n:"keyValuePairs",pt:$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),Function)),ps:0}],sn:"$ctor1"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Parse$1",rt:$n[6].ParseResult$1(TOutput),p:[$n[6].Source$1(TInput),$n[2].Int32]},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"root",t:4,rt:$n[6].MapParser$2.Node(TInput,TOutput),sn:"root",ro:!0}]}},$n);$m("Kusto.Language.Parsing.MapParser$2.Node",function(TInput,TOutput){return{td:$n[6].MapParser$2(TInput,TOutput),att:1048579,a:1,m:[{a:1,n:".ctor",t:1,sn:"ctor"},{a:1,n:"Add",t:8,pi:[{n:"sequence",pt:$n[0].IEnumerable$1(TInput),ps:0},{n:"pos",pt:$n[2].Int32,ps:1},{n:"value",pt:Function,ps:2}],sn:"Add",rt:$n[2].Void,p:[$n[0].IEnumerable$1(TInput),$n[2].Int32,Function]},{a:2,n:"From",is:!0,t:8,pi:[{n:"keyValuePairs",pt:$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),Function)),ps:0}],sn:"From",rt:$n[6].MapParser$2.Node(TInput,TOutput),p:[$n[0].IEnumerable$1(System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),Function))]},{a:2,n:"TryGetValueNode",t:8,pi:[{n:"key",pt:TInput,ps:0},{n:"node",out:!0,pt:$n[6].MapParser$2.Node(TInput,TOutput),ps:1}],sn:"TryGetValueNode",rt:$n[2].Boolean,p:[TInput,$n[6].MapParser$2.Node(TInput,TOutput)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"HasValue",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_HasValue",t:8,rt:$n[2].Boolean,fg:"HasValue",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:1,n:"set_HasValue",t:8,p:[$n[2].Boolean],rt:$n[2].Void,fs:"HasValue"},fn:"HasValue"},{a:2,n:"Value",t:16,rt:Function,g:{a:2,n:"get_Value",t:8,rt:Function,fg:"Value"},s:{a:1,n:"set_Value",t:8,p:[Function],rt:$n[2].Void,fs:"Value"},fn:"Value"},{a:1,n:"map",t:4,rt:$n[0].Dictionary$2(TInput,Kusto.Language.Parsing.MapParser$2.Node(TInput,TOutput)),sn:"map"},{a:1,backing:!0,n:"<HasValue>k__BackingField",t:4,rt:$n[2].Boolean,sn:"HasValue",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Value>k__BackingField",t:4,rt:Function,sn:"Value"}]}},$n);$m("Kusto.Language.Parsing.ApplyKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"One",is:!0,t:4,rt:$n[6].ApplyKind,sn:"One",box:function($v){return Bridge.box($v,Kusto.Language.Parsing.ApplyKind,System.Enum.toStringFn(Kusto.Language.Parsing.ApplyKind))}},{a:2,n:"ZeroOrMore",is:!0,t:4,rt:$n[6].ApplyKind,sn:"ZeroOrMore",box:function($v){return Bridge.box($v,Kusto.Language.Parsing.ApplyKind,System.Enum.toStringFn(Kusto.Language.Parsing.ApplyKind))}},{a:2,n:"ZeroOrOne",is:!0,t:4,rt:$n[6].ApplyKind,sn:"ZeroOrOne",box:function($v){return Bridge.box($v,Kusto.Language.Parsing.ApplyKind,System.Enum.toStringFn(Kusto.Language.Parsing.ApplyKind))}}]}},$n);$m("Kusto.Language.Parsing.ApplyParser$3",function(TInput,TLeft,TOutput){return{att:1048833,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[6].ApplyKind,$n[6].Parser$2(TInput,TLeft),$n[6].Parser$2(TInput,TOutput)],pi:[{n:"kind",pt:$n[6].ApplyKind,ps:0},{n:"leftParser",pt:$n[6].Parser$2(TInput,TLeft),ps:1},{n:"rightParser",pt:$n[6].Parser$2(TInput,TOutput),ps:2}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[6].ApplyKind,$n[6].Parser$2(TInput,TLeft),$n[6].RightParser$2(TInput,TOutput)],pi:[{n:"kind",pt:$n[6].ApplyKind,ps:0},{n:"leftParser",pt:$n[6].Parser$2(TInput,TLeft),ps:1},{n:"rightParser",pt:$n[6].RightParser$2(TInput,TOutput),ps:2}],sn:"$ctor1"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ApplyKind",t:16,rt:$n[6].ApplyKind,g:{a:2,n:"get_ApplyKind",t:8,rt:$n[6].ApplyKind,fg:"ApplyKind",box:function($v){return Bridge.box($v,Kusto.Language.Parsing.ApplyKind,System.Enum.toStringFn(Kusto.Language.Parsing.ApplyKind))}},fn:"ApplyKind"},{a:2,n:"LeftParser",t:16,rt:$n[6].Parser$2(TInput,TLeft),g:{a:2,n:"get_LeftParser",t:8,rt:$n[6].Parser$2(TInput,TLeft),fg:"LeftParser"},fn:"LeftParser"},{a:2,n:"RightParser",t:16,rt:$n[6].Parser$2(TInput,TOutput),g:{a:2,n:"get_RightParser",t:8,rt:$n[6].Parser$2(TInput,TOutput),fg:"RightParser"},fn:"RightParser"},{a:1,backing:!0,n:"<ApplyKind>k__BackingField",t:4,rt:$n[6].ApplyKind,sn:"ApplyKind",box:function($v){return Bridge.box($v,Kusto.Language.Parsing.ApplyKind,System.Enum.toStringFn(Kusto.Language.Parsing.ApplyKind))}},{a:1,backing:!0,n:"<LeftParser>k__BackingField",t:4,rt:$n[6].Parser$2(TInput,TLeft),sn:"LeftParser"},{a:1,backing:!0,n:"<RightParser>k__BackingField",t:4,rt:$n[6].Parser$2(TInput,TOutput),sn:"RightParser"}]}},$n);$m("Kusto.Language.Parsing.SequenceParser$1",function(TInput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput))],pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Parsers",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),g:{a:2,n:"get_Parsers",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),fg:"Parsers"},fn:"Parsers"},{a:1,n:"_parsers",t:4,rt:System.Array.type(Kusto.Language.Parsing.Parser$1(TInput)),sn:"_parsers",ro:!0}]}},$n);$m("Kusto.Language.Parsing.OneOrMoreParser$1",function(TInput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput)],pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Parser",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$1(TInput),fg:"Parser"},fn:"Parser"},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Parser"}]}},$n);$m("Kusto.Language.Parsing.ZeroOrMoreParser$1",function(TInput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput),$n[2].Boolean],pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"zeroOrOne",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"IsOptional",t:16,rt:$n[2].Boolean,g:{ov:!0,a:2,n:"get_IsOptional",t:8,rt:$n[2].Boolean,fg:"IsOptional",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOptional"},{a:2,n:"Parser",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$1(TInput),fg:"Parser"},fn:"Parser"},{a:2,n:"ZeroOrOne",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_ZeroOrOne",t:8,rt:$n[2].Boolean,fg:"ZeroOrOne",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"ZeroOrOne"},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Parser"},{a:1,backing:!0,n:"<ZeroOrOne>k__BackingField",t:4,rt:$n[2].Boolean,sn:"ZeroOrOne",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Parsing.FirstParser$1",function(TInput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput))],pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputCount",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Parsers",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),g:{a:2,n:"get_Parsers",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),fg:"Parsers"},fn:"Parsers"},{a:1,n:"_parsers",t:4,rt:System.Array.type(Kusto.Language.Parsing.Parser$1(TInput)),sn:"_parsers",ro:!0}]}},$n);$m("Kusto.Language.Parsing.IfParser$1",function(TInput){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$1(TInput),$n[6].Parser$1(TInput)],pi:[{n:"test",pt:$n[6].Parser$1(TInput),ps:0},{n:"parser",pt:$n[6].Parser$1(TInput),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$1(TInput),ps:0}],sn:"Accept$2",rt:$n[2].Void,p:[$n[6].ParserVisitor$1(TInput)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TResult"],sn:"Accept",rt:System.Object,p:[$n[6].ParserVisitor$2(TInput,System.Object)]},{ov:!0,a:2,n:"Accept",t:8,pi:[{n:"visitor",pt:$n[6].ParserVisitor$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:System.Object,ps:1}],tpc:2,tprm:["TArg","TResult"],sn:"Accept$1",rt:System.Object,p:[$n[6].ParserVisitor$3(TInput,System.Object,System.Object),System.Object]},{ov:!0,a:3,n:"Clone",t:8,sn:"Clone",rt:$n[6].Parser$1(TInput)},{ov:!0,a:2,n:"Parse",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"output",pt:$n[0].List$1(System.Object),ps:2},{n:"outputStart",pt:$n[2].Int32,ps:3}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"Scan",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Parser",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$1(TInput),fg:"Parser"},fn:"Parser"},{a:2,n:"Test",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Test",t:8,rt:$n[6].Parser$1(TInput),fg:"Test"},fn:"Test"},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Parser"},{a:1,backing:!0,n:"<Test>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Test"}]}},$n);$m("Kusto.Language.Parsing.ParserVisitor$1",function(TInput){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"VisitApply",t:8,pi:[{n:"parser",pt:$n[6].ApplyParser$3(TInput,System.Object,System.Object),ps:0}],tpc:2,tprm:["TLeft","TOutput"],sn:"VisitApply",rt:$n[2].Void,p:[$n[6].ApplyParser$3(TInput,System.Object,System.Object)]},{ab:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$1(TInput),ps:0}],sn:"VisitBest",rt:$n[2].Void,p:[$n[6].BestParser$1(TInput)]},{ab:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitBest$1",rt:$n[2].Void,p:[$n[6].BestParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitConvert",t:8,pi:[{n:"parser",pt:$n[6].ConvertParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitConvert",rt:$n[2].Void,p:[$n[6].ConvertParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitFails",t:8,pi:[{n:"parser",pt:$n[6].FailsParser$1(TInput),ps:0}],sn:"VisitFails",rt:$n[2].Void,p:[$n[6].FailsParser$1(TInput)]},{ab:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$1(TInput),ps:0}],sn:"VisitFirst",rt:$n[2].Void,p:[$n[6].FirstParser$1(TInput)]},{ab:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitFirst$1",rt:$n[2].Void,p:[$n[6].FirstParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitForward",t:8,pi:[{n:"parser",pt:$n[6].ForwardParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitForward",rt:$n[2].Void,p:[$n[6].ForwardParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$1(TInput),ps:0}],sn:"VisitIf",rt:$n[2].Void,p:[$n[6].IfParser$1(TInput)]},{ab:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitIf$1",rt:$n[2].Void,p:[$n[6].IfParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitMap",t:8,pi:[{n:"parser",pt:$n[6].MapParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMap",rt:$n[2].Void,p:[$n[6].MapParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$1(TInput),ps:0}],sn:"VisitMatch",rt:$n[2].Void,p:[$n[6].MatchParser$1(TInput)]},{ab:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMatch$1",rt:$n[2].Void,p:[$n[6].MatchParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitNot",t:8,pi:[{n:"parser",pt:$n[6].NotParser$1(TInput),ps:0}],sn:"VisitNot",rt:$n[2].Void,p:[$n[6].NotParser$1(TInput)]},{ab:!0,a:2,n:"VisitOneOrMore",t:8,pi:[{n:"parser",pt:$n[6].OneOrMoreParser$1(TInput),ps:0}],sn:"VisitOneOrMore",rt:$n[2].Void,p:[$n[6].OneOrMoreParser$1(TInput)]},{ab:!0,a:2,n:"VisitOptional",t:8,pi:[{n:"parser",pt:$n[6].OptionalParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitOptional",rt:$n[2].Void,p:[$n[6].OptionalParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitProduce",t:8,pi:[{n:"parser",pt:$n[6].ProduceParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitProduce",rt:$n[2].Void,p:[$n[6].ProduceParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitRequired",t:8,pi:[{n:"parser",pt:$n[6].RequiredParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRequired",rt:$n[2].Void,p:[$n[6].RequiredParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitRule",t:8,pi:[{n:"parser",pt:$n[6].RuleParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRule",rt:$n[2].Void,p:[$n[6].RuleParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitSequence",t:8,pi:[{n:"parser",pt:$n[6].SequenceParser$1(TInput),ps:0}],sn:"VisitSequence",rt:$n[2].Void,p:[$n[6].SequenceParser$1(TInput)]},{ab:!0,a:2,n:"VisitZeroOrMore",t:8,pi:[{n:"parser",pt:$n[6].ZeroOrMoreParser$1(TInput),ps:0}],sn:"VisitZeroOrMore",rt:$n[2].Void,p:[$n[6].ZeroOrMoreParser$1(TInput)]}]}},$n);$m("Kusto.Language.Parsing.ParserVisitor$2",function(TInput,TResult){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"VisitApply",t:8,pi:[{n:"parser",pt:$n[6].ApplyParser$3(TInput,System.Object,System.Object),ps:0}],tpc:2,tprm:["TLeft","TOutput"],sn:"VisitApply",rt:TResult,p:[$n[6].ApplyParser$3(TInput,System.Object,System.Object)]},{ab:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$1(TInput),ps:0}],sn:"VisitBest",rt:TResult,p:[$n[6].BestParser$1(TInput)]},{ab:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitBest$1",rt:TResult,p:[$n[6].BestParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitConvert",t:8,pi:[{n:"parser",pt:$n[6].ConvertParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitConvert",rt:TResult,p:[$n[6].ConvertParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitFails",t:8,pi:[{n:"parser",pt:$n[6].FailsParser$1(TInput),ps:0}],sn:"VisitFails",rt:TResult,p:[$n[6].FailsParser$1(TInput)]},{ab:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$1(TInput),ps:0}],sn:"VisitFirst",rt:TResult,p:[$n[6].FirstParser$1(TInput)]},{ab:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitFirst$1",rt:TResult,p:[$n[6].FirstParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitForward",t:8,pi:[{n:"parser",pt:$n[6].ForwardParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitForward",rt:TResult,p:[$n[6].ForwardParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$1(TInput),ps:0}],sn:"VisitIf",rt:TResult,p:[$n[6].IfParser$1(TInput)]},{ab:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitIf$1",rt:TResult,p:[$n[6].IfParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitMap",t:8,pi:[{n:"parser",pt:$n[6].MapParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMap",rt:TResult,p:[$n[6].MapParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$1(TInput),ps:0}],sn:"VisitMatch",rt:TResult,p:[$n[6].MatchParser$1(TInput)]},{ab:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMatch$1",rt:TResult,p:[$n[6].MatchParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitNot",t:8,pi:[{n:"parser",pt:$n[6].NotParser$1(TInput),ps:0}],sn:"VisitNot",rt:TResult,p:[$n[6].NotParser$1(TInput)]},{ab:!0,a:2,n:"VisitOneOrMore",t:8,pi:[{n:"parser",pt:$n[6].OneOrMoreParser$1(TInput),ps:0}],sn:"VisitOneOrMore",rt:TResult,p:[$n[6].OneOrMoreParser$1(TInput)]},{ab:!0,a:2,n:"VisitOptional",t:8,pi:[{n:"parser",pt:$n[6].OptionalParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitOptional",rt:TResult,p:[$n[6].OptionalParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitProduce",t:8,pi:[{n:"parser",pt:$n[6].ProduceParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitProduce",rt:TResult,p:[$n[6].ProduceParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitRequired",t:8,pi:[{n:"parser",pt:$n[6].RequiredParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRequired",rt:TResult,p:[$n[6].RequiredParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitRule",t:8,pi:[{n:"parser",pt:$n[6].RuleParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRule",rt:TResult,p:[$n[6].RuleParser$2(TInput,System.Object)]},{ab:!0,a:2,n:"VisitSequence",t:8,pi:[{n:"parser",pt:$n[6].SequenceParser$1(TInput),ps:0}],sn:"VisitSequence",rt:TResult,p:[$n[6].SequenceParser$1(TInput)]},{ab:!0,a:2,n:"VisitZeroOrMore",t:8,pi:[{n:"parser",pt:$n[6].ZeroOrMoreParser$1(TInput),ps:0}],sn:"VisitZeroOrMore",rt:TResult,p:[$n[6].ZeroOrMoreParser$1(TInput)]}]}},$n);$m("Kusto.Language.Parsing.ParserVisitor$3",function(TInput,TArg,TResult){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"VisitApply",t:8,pi:[{n:"parser",pt:$n[6].ApplyParser$3(TInput,System.Object,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:2,tprm:["TLeft","TOutput"],sn:"VisitApply",rt:TResult,p:[$n[6].ApplyParser$3(TInput,System.Object,System.Object),TArg]},{ab:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$1(TInput),ps:0},{n:"arg",pt:TArg,ps:1}],sn:"VisitBest",rt:TResult,p:[$n[6].BestParser$1(TInput),TArg]},{ab:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitBest$1",rt:TResult,p:[$n[6].BestParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitConvert",t:8,pi:[{n:"parser",pt:$n[6].ConvertParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitConvert",rt:TResult,p:[$n[6].ConvertParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitFails",t:8,pi:[{n:"parser",pt:$n[6].FailsParser$1(TInput),ps:0},{n:"arg",pt:TArg,ps:1}],sn:"VisitFails",rt:TResult,p:[$n[6].FailsParser$1(TInput),TArg]},{ab:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$1(TInput),ps:0},{n:"arg",pt:TArg,ps:1}],sn:"VisitFirst",rt:TResult,p:[$n[6].FirstParser$1(TInput),TArg]},{ab:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitFirst$1",rt:TResult,p:[$n[6].FirstParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitForward",t:8,pi:[{n:"parser",pt:$n[6].ForwardParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitForward",rt:TResult,p:[$n[6].ForwardParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$1(TInput),ps:0},{n:"arg",pt:TArg,ps:1}],sn:"VisitIf",rt:TResult,p:[$n[6].IfParser$1(TInput),TArg]},{ab:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitIf$1",rt:TResult,p:[$n[6].IfParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitMap",t:8,pi:[{n:"parser",pt:$n[6].MapParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitMap",rt:TResult,p:[$n[6].MapParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$1(TInput),ps:0},{n:"arg",pt:TArg,ps:1}],sn:"VisitMatch",rt:TResult,p:[$n[6].MatchParser$1(TInput),TArg]},{ab:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitMatch$1",rt:TResult,p:[$n[6].MatchParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitNot",t:8,pi:[{n:"parser",pt:$n[6].NotParser$1(TInput),ps:0},{n:"arg",pt:TArg,ps:1}],sn:"VisitNot",rt:TResult,p:[$n[6].NotParser$1(TInput),TArg]},{ab:!0,a:2,n:"VisitOneOrMore",t:8,pi:[{n:"parser",pt:$n[6].OneOrMoreParser$1(TInput),ps:0},{n:"arg",pt:TArg,ps:1}],sn:"VisitOneOrMore",rt:TResult,p:[$n[6].OneOrMoreParser$1(TInput),TArg]},{ab:!0,a:2,n:"VisitOptional",t:8,pi:[{n:"parser",pt:$n[6].OptionalParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitOptional",rt:TResult,p:[$n[6].OptionalParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitProduce",t:8,pi:[{n:"parser",pt:$n[6].ProduceParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitProduce",rt:TResult,p:[$n[6].ProduceParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitRequired",t:8,pi:[{n:"parser",pt:$n[6].RequiredParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitRequired",rt:TResult,p:[$n[6].RequiredParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitRule",t:8,pi:[{n:"parser",pt:$n[6].RuleParser$2(TInput,System.Object),ps:0},{n:"arg",pt:TArg,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitRule",rt:TResult,p:[$n[6].RuleParser$2(TInput,System.Object),TArg]},{ab:!0,a:2,n:"VisitSequence",t:8,pi:[{n:"parser",pt:$n[6].SequenceParser$1(TInput),ps:0},{n:"arg",pt:TArg,ps:1}],sn:"VisitSequence",rt:TResult,p:[$n[6].SequenceParser$1(TInput),TArg]},{ab:!0,a:2,n:"VisitZeroOrMore",t:8,pi:[{n:"parser",pt:$n[6].ZeroOrMoreParser$1(TInput),ps:0},{n:"arg",pt:TArg,ps:1}],sn:"VisitZeroOrMore",rt:TResult,p:[$n[6].ZeroOrMoreParser$1(TInput),TArg]}]}},$n);$m("Kusto.Language.Parsing.SafeParser",function(){return{nested:[$n[6].SafeParser.ParserPool$1],att:1048961,a:2,s:!0,m:[{a:2,n:"ParseSafe",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(System.Object),ps:0},{n:"source",pt:$n[6].Source$1(System.Object),ps:1},{n:"inputStart",pt:$n[2].Int32,ps:2},{n:"output",pt:$n[0].List$1(System.Object),ps:3},{n:"outputStart",pt:$n[2].Int32,ps:4}],tpc:1,tprm:["TInput"],sn:"ParseSafe",rt:$n[2].Int32,p:[$n[6].Parser$1(System.Object),$n[6].Source$1(System.Object),$n[2].Int32,$n[0].List$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Parsing.SafeParser.ParserPool$1",function(TInput){return{td:$n[6].SafeParser,att:1048963,a:1,s:!0,m:[{a:2,n:"Pool",is:!0,t:4,rt:$n[5].ObjectPool$1(Kusto.Language.Parsing.StackSafeParser$1(TInput)),sn:"Pool",ro:!0}]}},$n);$m("Kusto.Language.Parsing.StackSafeParser$1",function(TInput){return{nested:[$n[6].StackSafeParser$1.ParseState],att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[6].Source$1(TInput),$n[0].List$1(System.Object)],pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"output",pt:$n[0].List$1(System.Object),ps:1}],sn:"ctor"},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[2].Void},{a:2,n:"Initialize",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"output",pt:$n[0].List$1(System.Object),ps:1}],sn:"Initialize",rt:$n[2].Void,p:[$n[6].Source$1(TInput),$n[0].List$1(System.Object)]},{a:2,n:"Parse",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"outputStart",pt:$n[2].Int32,ps:2}],sn:"Parse",rt:$n[2].Int32,p:[$n[6].Parser$1(TInput),$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"Pop",t:8,sn:"Pop",rt:$n[2].Void},{a:1,n:"Push",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"outputStart",pt:$n[2].Int32,ps:2}],sn:"Push",rt:$n[2].Void,p:[$n[6].Parser$1(TInput),$n[2].Int32,$n[2].Int32]},{a:1,n:"Scan",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"source",pt:$n[6].Source$1(TInput),ps:1},{n:"start",pt:$n[2].Int32,ps:2}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Parser$1(TInput),$n[6].Source$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitApply",t:8,pi:[{n:"parser",pt:$n[6].ApplyParser$3(TInput,System.Object,System.Object),ps:0}],tpc:2,tprm:["TLeft","TOutput"],sn:"VisitApply",rt:$n[6].Parser$1(TInput),p:[$n[6].ApplyParser$3(TInput,System.Object,System.Object)]},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$1(TInput),ps:0}],sn:"VisitBest",rt:$n[6].Parser$1(TInput),p:[$n[6].BestParser$1(TInput)]},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitBest$1",rt:$n[6].Parser$1(TInput),p:[$n[6].BestParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitConvert",t:8,pi:[{n:"parser",pt:$n[6].ConvertParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitConvert",rt:$n[6].Parser$1(TInput),p:[$n[6].ConvertParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitFails",t:8,pi:[{n:"parser",pt:$n[6].FailsParser$1(TInput),ps:0}],sn:"VisitFails",rt:$n[6].Parser$1(TInput),p:[$n[6].FailsParser$1(TInput)]},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$1(TInput),ps:0}],sn:"VisitFirst",rt:$n[6].Parser$1(TInput),p:[$n[6].FirstParser$1(TInput)]},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitFirst$1",rt:$n[6].Parser$1(TInput),p:[$n[6].FirstParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitForward",t:8,pi:[{n:"parser",pt:$n[6].ForwardParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitForward",rt:$n[6].Parser$1(TInput),p:[$n[6].ForwardParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$1(TInput),ps:0}],sn:"VisitIf",rt:$n[6].Parser$1(TInput),p:[$n[6].IfParser$1(TInput)]},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitIf$1",rt:$n[6].Parser$1(TInput),p:[$n[6].IfParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitMap",t:8,pi:[{n:"parser",pt:$n[6].MapParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMap",rt:$n[6].Parser$1(TInput),p:[$n[6].MapParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$1(TInput),ps:0}],sn:"VisitMatch",rt:$n[6].Parser$1(TInput),p:[$n[6].MatchParser$1(TInput)]},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMatch$1",rt:$n[6].Parser$1(TInput),p:[$n[6].MatchParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitNot",t:8,pi:[{n:"parser",pt:$n[6].NotParser$1(TInput),ps:0}],sn:"VisitNot",rt:$n[6].Parser$1(TInput),p:[$n[6].NotParser$1(TInput)]},{ov:!0,a:2,n:"VisitOneOrMore",t:8,pi:[{n:"parser",pt:$n[6].OneOrMoreParser$1(TInput),ps:0}],sn:"VisitOneOrMore",rt:$n[6].Parser$1(TInput),p:[$n[6].OneOrMoreParser$1(TInput)]},{ov:!0,a:2,n:"VisitOptional",t:8,pi:[{n:"parser",pt:$n[6].OptionalParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitOptional",rt:$n[6].Parser$1(TInput),p:[$n[6].OptionalParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitProduce",t:8,pi:[{n:"parser",pt:$n[6].ProduceParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitProduce",rt:$n[6].Parser$1(TInput),p:[$n[6].ProduceParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitRequired",t:8,pi:[{n:"parser",pt:$n[6].RequiredParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRequired",rt:$n[6].Parser$1(TInput),p:[$n[6].RequiredParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitRule",t:8,pi:[{n:"parser",pt:$n[6].RuleParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRule",rt:$n[6].Parser$1(TInput),p:[$n[6].RuleParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitSequence",t:8,pi:[{n:"parser",pt:$n[6].SequenceParser$1(TInput),ps:0}],sn:"VisitSequence",rt:$n[6].Parser$1(TInput),p:[$n[6].SequenceParser$1(TInput)]},{ov:!0,a:2,n:"VisitZeroOrMore",t:8,pi:[{n:"parser",pt:$n[6].ZeroOrMoreParser$1(TInput),ps:0}],sn:"VisitZeroOrMore",rt:$n[6].Parser$1(TInput),p:[$n[6].ZeroOrMoreParser$1(TInput)]},{a:1,n:"output",t:4,rt:$n[0].List$1(System.Object),sn:"output"},{a:1,n:"scanner",t:4,rt:$n[6].StackSafeScanner$1(TInput),sn:"scanner"},{a:1,n:"source",t:4,rt:$n[6].Source$1(TInput),sn:"source"},{a:1,n:"stack",t:4,rt:$n[0].List$1(Kusto.Language.Parsing.StackSafeParser$1.ParseState(TInput)),sn:"stack"},{a:1,n:"stackPosition",t:4,rt:$n[2].Int32,sn:"stackPosition",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"state",t:4,rt:$n[6].StackSafeParser$1.ParseState(TInput),sn:"state"}]}},$n);$m("Kusto.Language.Parsing.StackSafeParser$1.ParseState",function(TInput){return{td:$n[6].StackSafeParser$1(TInput),att:1048579,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Init",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"outputStart",pt:$n[2].Int32,ps:2},{n:"outputCount",pt:$n[2].Int32,ps:3}],sn:"Init",rt:$n[2].Void,p:[$n[6].Parser$1(TInput),$n[2].Int32,$n[2].Int32,$n[2].Int32]},{a:2,n:"InputStart",t:16,rt:$n[2].Int32,g:{a:2,n:"get_InputStart",t:8,rt:$n[2].Int32,fg:"InputStart",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:1,n:"set_InputStart",t:8,p:[$n[2].Int32],rt:$n[2].Void,fs:"InputStart"},fn:"InputStart"},{a:2,n:"OriginalOutputCount",t:16,rt:$n[2].Int32,g:{a:2,n:"get_OriginalOutputCount",t:8,rt:$n[2].Int32,fg:"OriginalOutputCount",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:1,n:"set_OriginalOutputCount",t:8,p:[$n[2].Int32],rt:$n[2].Void,fs:"OriginalOutputCount"},fn:"OriginalOutputCount"},{a:2,n:"OutputStart",t:16,rt:$n[2].Int32,g:{a:2,n:"get_OutputStart",t:8,rt:$n[2].Int32,fg:"OutputStart",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:1,n:"set_OutputStart",t:8,p:[$n[2].Int32],rt:$n[2].Void,fs:"OutputStart"},fn:"OutputStart"},{a:2,n:"Parser",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$1(TInput),fg:"Parser"},s:{a:1,n:"set_Parser",t:8,p:[$n[6].Parser$1(TInput)],rt:$n[2].Void,fs:"Parser"},fn:"Parser"},{a:2,n:"BestFailedResult",t:4,rt:$n[2].Int32,sn:"BestFailedResult",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"BestSuccessResult",t:4,rt:$n[2].Int32,sn:"BestSuccessResult",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"InputLength",t:4,rt:$n[2].Int32,sn:"InputLength",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"LastResult",t:4,rt:$n[2].Int32,sn:"LastResult",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"NextOutputStart",t:4,rt:$n[2].Int32,sn:"NextOutputStart",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"State",t:4,rt:$n[2].Int32,sn:"State",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<InputStart>k__BackingField",t:4,rt:$n[2].Int32,sn:"InputStart",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<OriginalOutputCount>k__BackingField",t:4,rt:$n[2].Int32,sn:"OriginalOutputCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<OutputStart>k__BackingField",t:4,rt:$n[2].Int32,sn:"OutputStart",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Parser"}]}},$n);$m("Kusto.Language.Parsing.SafeScanner",function(){return{nested:[$n[6].SafeScanner.ScannerPool$1],att:1048961,a:2,s:!0,m:[{a:2,n:"ScanSafe",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(System.Object),ps:0},{n:"source",pt:$n[6].Source$1(System.Object),ps:1},{n:"start",pt:$n[2].Int32,ps:2}],tpc:1,tprm:["TInput"],sn:"ScanSafe",rt:$n[2].Int32,p:[$n[6].Parser$1(System.Object),$n[6].Source$1(System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Parsing.SafeScanner.ScannerPool$1",function(TInput){return{td:$n[6].SafeScanner,att:1048963,a:1,s:!0,m:[{a:2,n:"Pool",is:!0,t:4,rt:$n[5].ObjectPool$1(Kusto.Language.Parsing.StackSafeScanner$1(TInput)),sn:"Pool",ro:!0}]}},$n);$m("Kusto.Language.Parsing.StackSafeScanner$1",function(TInput){return{nested:[$n[6].StackSafeScanner$1.ScanState],att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[6].Source$1(TInput)],pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0}],sn:"ctor"},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[2].Void},{a:2,n:"Initialize",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0}],sn:"Initialize",rt:$n[2].Void,p:[$n[6].Source$1(TInput)]},{a:1,n:"Pop",t:8,sn:"Pop",rt:$n[2].Void},{a:1,n:"Push",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1}],sn:"Push",rt:$n[2].Void,p:[$n[6].Parser$1(TInput),$n[2].Int32]},{a:2,n:"Scan",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Scan",rt:$n[2].Int32,p:[$n[6].Parser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitApply",t:8,pi:[{n:"parser",pt:$n[6].ApplyParser$3(TInput,System.Object,System.Object),ps:0}],tpc:2,tprm:["TLeft","TOutput"],sn:"VisitApply",rt:$n[6].Parser$1(TInput),p:[$n[6].ApplyParser$3(TInput,System.Object,System.Object)]},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$1(TInput),ps:0}],sn:"VisitBest",rt:$n[6].Parser$1(TInput),p:[$n[6].BestParser$1(TInput)]},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitBest$1",rt:$n[6].Parser$1(TInput),p:[$n[6].BestParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitConvert",t:8,pi:[{n:"parser",pt:$n[6].ConvertParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitConvert",rt:$n[6].Parser$1(TInput),p:[$n[6].ConvertParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitFails",t:8,pi:[{n:"parser",pt:$n[6].FailsParser$1(TInput),ps:0}],sn:"VisitFails",rt:$n[6].Parser$1(TInput),p:[$n[6].FailsParser$1(TInput)]},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$1(TInput),ps:0}],sn:"VisitFirst",rt:$n[6].Parser$1(TInput),p:[$n[6].FirstParser$1(TInput)]},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitFirst$1",rt:$n[6].Parser$1(TInput),p:[$n[6].FirstParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitForward",t:8,pi:[{n:"parser",pt:$n[6].ForwardParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitForward",rt:$n[6].Parser$1(TInput),p:[$n[6].ForwardParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$1(TInput),ps:0}],sn:"VisitIf",rt:$n[6].Parser$1(TInput),p:[$n[6].IfParser$1(TInput)]},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitIf$1",rt:$n[6].Parser$1(TInput),p:[$n[6].IfParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitMap",t:8,pi:[{n:"parser",pt:$n[6].MapParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMap",rt:$n[6].Parser$1(TInput),p:[$n[6].MapParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$1(TInput),ps:0}],sn:"VisitMatch",rt:$n[6].Parser$1(TInput),p:[$n[6].MatchParser$1(TInput)]},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMatch$1",rt:$n[6].Parser$1(TInput),p:[$n[6].MatchParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitNot",t:8,pi:[{n:"parser",pt:$n[6].NotParser$1(TInput),ps:0}],sn:"VisitNot",rt:$n[6].Parser$1(TInput),p:[$n[6].NotParser$1(TInput)]},{ov:!0,a:2,n:"VisitOneOrMore",t:8,pi:[{n:"parser",pt:$n[6].OneOrMoreParser$1(TInput),ps:0}],sn:"VisitOneOrMore",rt:$n[6].Parser$1(TInput),p:[$n[6].OneOrMoreParser$1(TInput)]},{ov:!0,a:2,n:"VisitOptional",t:8,pi:[{n:"parser",pt:$n[6].OptionalParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitOptional",rt:$n[6].Parser$1(TInput),p:[$n[6].OptionalParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitProduce",t:8,pi:[{n:"parser",pt:$n[6].ProduceParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitProduce",rt:$n[6].Parser$1(TInput),p:[$n[6].ProduceParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitRequired",t:8,pi:[{n:"parser",pt:$n[6].RequiredParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRequired",rt:$n[6].Parser$1(TInput),p:[$n[6].RequiredParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitRule",t:8,pi:[{n:"parser",pt:$n[6].RuleParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRule",rt:$n[6].Parser$1(TInput),p:[$n[6].RuleParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitSequence",t:8,pi:[{n:"parser",pt:$n[6].SequenceParser$1(TInput),ps:0}],sn:"VisitSequence",rt:$n[6].Parser$1(TInput),p:[$n[6].SequenceParser$1(TInput)]},{ov:!0,a:2,n:"VisitZeroOrMore",t:8,pi:[{n:"parser",pt:$n[6].ZeroOrMoreParser$1(TInput),ps:0}],sn:"VisitZeroOrMore",rt:$n[6].Parser$1(TInput),p:[$n[6].ZeroOrMoreParser$1(TInput)]},{a:1,n:"source",t:4,rt:$n[6].Source$1(TInput),sn:"source"},{a:1,n:"stack",t:4,rt:$n[0].List$1(Kusto.Language.Parsing.StackSafeScanner$1.ScanState(TInput)),sn:"stack"},{a:1,n:"stackPosition",t:4,rt:$n[2].Int32,sn:"stackPosition",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"state",t:4,rt:$n[6].StackSafeScanner$1.ScanState(TInput),sn:"state"}]}},$n);$m("Kusto.Language.Parsing.StackSafeScanner$1.ScanState",function(TInput){return{td:$n[6].StackSafeScanner$1(TInput),att:1048579,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Init",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1}],sn:"Init",rt:$n[2].Void,p:[$n[6].Parser$1(TInput),$n[2].Int32]},{a:2,n:"InputStart",t:16,rt:$n[2].Int32,g:{a:2,n:"get_InputStart",t:8,rt:$n[2].Int32,fg:"InputStart",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:1,n:"set_InputStart",t:8,p:[$n[2].Int32],rt:$n[2].Void,fs:"InputStart"},fn:"InputStart"},{a:2,n:"Parser",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$1(TInput),fg:"Parser"},s:{a:1,n:"set_Parser",t:8,p:[$n[6].Parser$1(TInput)],rt:$n[2].Void,fs:"Parser"},fn:"Parser"},{a:2,n:"BestFailedResult",t:4,rt:$n[2].Int32,sn:"BestFailedResult",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"BestSuccessResult",t:4,rt:$n[2].Int32,sn:"BestSuccessResult",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"InputLength",t:4,rt:$n[2].Int32,sn:"InputLength",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"LastResult",t:4,rt:$n[2].Int32,sn:"LastResult",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"State",t:4,rt:$n[2].Int32,sn:"State",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<InputStart>k__BackingField",t:4,rt:$n[2].Int32,sn:"InputStart",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Parser"}]}},$n);$m("Kusto.Language.Parsing.SearchResult",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].Int32,$n[2].Boolean],pi:[{n:"length",pt:$n[2].Int32,ps:0},{n:"missing",pt:$n[2].Boolean,ps:1}],sn:"$ctor1"},{a:2,n:"Length",t:4,rt:$n[2].Int32,sn:"Length",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Missing",t:4,rt:$n[2].Boolean,sn:"Missing",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Parsing.SafeSearcher",function(){return{nested:[$n[6].SafeSearcher.SearcherPool$1],att:1048961,a:2,s:!0,m:[{a:2,n:"SearchSafe",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(System.Object),ps:0},{n:"source",pt:$n[6].Source$1(System.Object),ps:1},{n:"start",pt:$n[2].Int32,ps:2},{n:"prevWasMissing",pt:$n[2].Boolean,ps:3},{n:"beforeAction",pt:Function,ps:4},{n:"afterAction",dv:null,o:!0,pt:Function,ps:5}],tpc:1,tprm:["TInput"],sn:"SearchSafe",rt:$n[6].SearchResult,p:[$n[6].Parser$1(System.Object),$n[6].Source$1(System.Object),$n[2].Int32,$n[2].Boolean,Function,Function]}]}},$n);$m("Kusto.Language.Parsing.SafeSearcher.SearcherPool$1",function(TInput){return{td:$n[6].SafeSearcher,att:1048963,a:1,s:!0,m:[{a:2,n:"Pool",is:!0,t:4,rt:$n[5].ObjectPool$1(Kusto.Language.Parsing.StackSafeSearcher$1(TInput)),sn:"Pool",ro:!0}]}},$n);$m("Kusto.Language.Parsing.StackSafeSearcher$1",function(TInput){return{nested:[$n[6].StackSafeSearcher$1.SearchState],att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[6].Source$1(TInput),Function,Function],pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"beforeAction",pt:Function,ps:1},{n:"afterAction",pt:Function,ps:2}],sn:"ctor"},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[2].Void},{a:2,n:"Initialize",t:8,pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"beforeAction",pt:Function,ps:1},{n:"afterAction",pt:Function,ps:2}],sn:"Initialize",rt:$n[2].Void,p:[$n[6].Source$1(TInput),Function,Function]},{a:1,n:"NextBest",t:8,pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"NextBest",rt:$n[6].Parser$1(TInput),p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput))]},{a:1,n:"NextIf",t:8,pi:[{n:"test",pt:$n[6].Parser$1(TInput),ps:0},{n:"parser",pt:$n[6].Parser$1(TInput),ps:1}],sn:"NextIf",rt:$n[6].Parser$1(TInput),p:[$n[6].Parser$1(TInput),$n[6].Parser$1(TInput)]},{a:1,n:"NextSequence",t:8,pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0}],sn:"NextSequence",rt:$n[6].Parser$1(TInput),p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput))]},{a:1,n:"Pop",t:8,sn:"Pop",rt:$n[2].Void},{a:1,n:"Push",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"prevWasMissing",pt:$n[2].Boolean,ps:2}],sn:"Push",rt:$n[2].Void,p:[$n[6].Parser$1(TInput),$n[2].Int32,$n[2].Boolean]},{a:2,n:"Search",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"initialPrevWasMissing",pt:$n[2].Boolean,ps:2}],sn:"Search",rt:$n[6].SearchResult,p:[$n[6].Parser$1(TInput),$n[2].Int32,$n[2].Boolean]},{ov:!0,a:2,n:"VisitApply",t:8,pi:[{n:"parser",pt:$n[6].ApplyParser$3(TInput,System.Object,System.Object),ps:0}],tpc:2,tprm:["TLeft","TOutput"],sn:"VisitApply",rt:$n[6].Parser$1(TInput),p:[$n[6].ApplyParser$3(TInput,System.Object,System.Object)]},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$1(TInput),ps:0}],sn:"VisitBest",rt:$n[6].Parser$1(TInput),p:[$n[6].BestParser$1(TInput)]},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitBest$1",rt:$n[6].Parser$1(TInput),p:[$n[6].BestParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitConvert",t:8,pi:[{n:"parser",pt:$n[6].ConvertParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitConvert",rt:$n[6].Parser$1(TInput),p:[$n[6].ConvertParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitFails",t:8,pi:[{n:"parser",pt:$n[6].FailsParser$1(TInput),ps:0}],sn:"VisitFails",rt:$n[6].Parser$1(TInput),p:[$n[6].FailsParser$1(TInput)]},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$1(TInput),ps:0}],sn:"VisitFirst",rt:$n[6].Parser$1(TInput),p:[$n[6].FirstParser$1(TInput)]},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitFirst$1",rt:$n[6].Parser$1(TInput),p:[$n[6].FirstParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitForward",t:8,pi:[{n:"parser",pt:$n[6].ForwardParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitForward",rt:$n[6].Parser$1(TInput),p:[$n[6].ForwardParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$1(TInput),ps:0}],sn:"VisitIf",rt:$n[6].Parser$1(TInput),p:[$n[6].IfParser$1(TInput)]},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitIf$1",rt:$n[6].Parser$1(TInput),p:[$n[6].IfParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitMap",t:8,pi:[{n:"parser",pt:$n[6].MapParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMap",rt:$n[6].Parser$1(TInput),p:[$n[6].MapParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$1(TInput),ps:0}],sn:"VisitMatch",rt:$n[6].Parser$1(TInput),p:[$n[6].MatchParser$1(TInput)]},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitMatch$1",rt:$n[6].Parser$1(TInput),p:[$n[6].MatchParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitNot",t:8,pi:[{n:"parser",pt:$n[6].NotParser$1(TInput),ps:0}],sn:"VisitNot",rt:$n[6].Parser$1(TInput),p:[$n[6].NotParser$1(TInput)]},{ov:!0,a:2,n:"VisitOneOrMore",t:8,pi:[{n:"parser",pt:$n[6].OneOrMoreParser$1(TInput),ps:0}],sn:"VisitOneOrMore",rt:$n[6].Parser$1(TInput),p:[$n[6].OneOrMoreParser$1(TInput)]},{ov:!0,a:2,n:"VisitOptional",t:8,pi:[{n:"parser",pt:$n[6].OptionalParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitOptional",rt:$n[6].Parser$1(TInput),p:[$n[6].OptionalParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitProduce",t:8,pi:[{n:"parser",pt:$n[6].ProduceParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitProduce",rt:$n[6].Parser$1(TInput),p:[$n[6].ProduceParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitRequired",t:8,pi:[{n:"parser",pt:$n[6].RequiredParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRequired",rt:$n[6].Parser$1(TInput),p:[$n[6].RequiredParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitRule",t:8,pi:[{n:"parser",pt:$n[6].RuleParser$2(TInput,System.Object),ps:0}],tpc:1,tprm:["TOutput"],sn:"VisitRule",rt:$n[6].Parser$1(TInput),p:[$n[6].RuleParser$2(TInput,System.Object)]},{ov:!0,a:2,n:"VisitSequence",t:8,pi:[{n:"parser",pt:$n[6].SequenceParser$1(TInput),ps:0}],sn:"VisitSequence",rt:$n[6].Parser$1(TInput),p:[$n[6].SequenceParser$1(TInput)]},{ov:!0,a:2,n:"VisitZeroOrMore",t:8,pi:[{n:"parser",pt:$n[6].ZeroOrMoreParser$1(TInput),ps:0}],sn:"VisitZeroOrMore",rt:$n[6].Parser$1(TInput),p:[$n[6].ZeroOrMoreParser$1(TInput)]},{a:1,n:"afterAction",t:4,rt:Function,sn:"afterAction"},{a:1,n:"beforeAction",t:4,rt:Function,sn:"beforeAction"},{a:1,n:"prevWasMissing",t:4,rt:$n[2].Boolean,sn:"prevWasMissing",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"scanner",t:4,rt:$n[6].StackSafeScanner$1(TInput),sn:"scanner"},{a:1,n:"source",t:4,rt:$n[6].Source$1(TInput),sn:"source"},{a:1,n:"stack",t:4,rt:$n[0].List$1(Kusto.Language.Parsing.StackSafeSearcher$1.SearchState(TInput)),sn:"stack"},{a:1,n:"stackPosition",t:4,rt:$n[2].Int32,sn:"stackPosition",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"state",t:4,rt:$n[6].StackSafeSearcher$1.SearchState(TInput),sn:"state"}]}},$n);$m("Kusto.Language.Parsing.StackSafeSearcher$1.SearchState",function(TInput){return{td:$n[6].StackSafeSearcher$1(TInput),att:1048579,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Init",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"inputStart",pt:$n[2].Int32,ps:1},{n:"prevWasMissing",pt:$n[2].Boolean,ps:2}],sn:"Init",rt:$n[2].Void,p:[$n[6].Parser$1(TInput),$n[2].Int32,$n[2].Boolean]},{a:2,n:"InputStart",t:16,rt:$n[2].Int32,g:{a:2,n:"get_InputStart",t:8,rt:$n[2].Int32,fg:"InputStart",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:1,n:"set_InputStart",t:8,p:[$n[2].Int32],rt:$n[2].Void,fs:"InputStart"},fn:"InputStart"},{a:2,n:"Parser",t:16,rt:$n[6].Parser$1(TInput),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$1(TInput),fg:"Parser"},s:{a:1,n:"set_Parser",t:8,p:[$n[6].Parser$1(TInput)],rt:$n[2].Void,fs:"Parser"},fn:"Parser"},{a:2,n:"PrevWasMissing",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_PrevWasMissing",t:8,rt:$n[2].Boolean,fg:"PrevWasMissing",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:1,n:"set_PrevWasMissing",t:8,p:[$n[2].Boolean],rt:$n[2].Void,fs:"PrevWasMissing"},fn:"PrevWasMissing"},{a:2,n:"BestFailedMissing",t:4,rt:$n[2].Boolean,sn:"BestFailedMissing",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"BestFailedResult",t:4,rt:$n[2].Int32,sn:"BestFailedResult",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"BestSuccessMissing",t:4,rt:$n[2].Boolean,sn:"BestSuccessMissing",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"BestSuccessResult",t:4,rt:$n[2].Int32,sn:"BestSuccessResult",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"InputLength",t:4,rt:$n[2].Int32,sn:"InputLength",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"LastResult",t:4,rt:$n[2].Int32,sn:"LastResult",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"State",t:4,rt:$n[2].Int32,sn:"State",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<InputStart>k__BackingField",t:4,rt:$n[2].Int32,sn:"InputStart",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$1(TInput),sn:"Parser"},{a:1,backing:!0,n:"<PrevWasMissing>k__BackingField",t:4,rt:$n[2].Boolean,sn:"PrevWasMissing",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Parsing.Searcher$1",function(TInput){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[6].Source$1(TInput),$n[2].Boolean,Function,Function],pi:[{n:"source",pt:$n[6].Source$1(TInput),ps:0},{n:"prevWasMissing",pt:$n[2].Boolean,ps:1},{n:"beforeAction",pt:Function,ps:2},{n:"afterAction",pt:Function,ps:3}],sn:"ctor"},{a:1,n:"Search",t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"Search",rt:$n[2].Int32,p:[$n[6].Parser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Search",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(TInput),ps:0},{n:"source",pt:$n[6].Source$1(TInput),ps:1},{n:"start",pt:$n[2].Int32,ps:2},{n:"prevWasMissing",pt:$n[2].Boolean,ps:3},{n:"beforeAction",pt:Function,ps:4},{n:"afterAction",dv:null,o:!0,pt:Function,ps:5}],sn:"Search",rt:$n[6].SearchResult,p:[$n[6].Parser$1(TInput),$n[6].Source$1(TInput),$n[2].Int32,$n[2].Boolean,Function,Function]},{ov:!0,a:2,n:"VisitApply",t:8,pi:[{n:"parser",pt:$n[6].ApplyParser$3(TInput,System.Object,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:2,tprm:["TLeft","TOutput"],sn:"VisitApply",rt:$n[2].Int32,p:[$n[6].ApplyParser$3(TInput,System.Object,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitBest",rt:$n[2].Int32,p:[$n[6].BestParser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitBest",t:8,pi:[{n:"parser",pt:$n[6].BestParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitBest$1",rt:$n[2].Int32,p:[$n[6].BestParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitConvert",t:8,pi:[{n:"parser",pt:$n[6].ConvertParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitConvert",rt:$n[2].Int32,p:[$n[6].ConvertParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitFails",t:8,pi:[{n:"parser",pt:$n[6].FailsParser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitFails",rt:$n[2].Int32,p:[$n[6].FailsParser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitFirst",rt:$n[2].Int32,p:[$n[6].FirstParser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitFirst",t:8,pi:[{n:"parser",pt:$n[6].FirstParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitFirst$1",rt:$n[2].Int32,p:[$n[6].FirstParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"VisitFirst",t:8,pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitFirst$2",rt:$n[2].Int32,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitForward",t:8,pi:[{n:"parser",pt:$n[6].ForwardParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitForward",rt:$n[2].Int32,p:[$n[6].ForwardParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitIf",rt:$n[2].Int32,p:[$n[6].IfParser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitIf",t:8,pi:[{n:"parser",pt:$n[6].IfParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitIf$1",rt:$n[2].Int32,p:[$n[6].IfParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitMap",t:8,pi:[{n:"parser",pt:$n[6].MapParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitMap",rt:$n[2].Int32,p:[$n[6].MapParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitMatch",rt:$n[2].Int32,p:[$n[6].MatchParser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitMatch",t:8,pi:[{n:"parser",pt:$n[6].MatchParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitMatch$1",rt:$n[2].Int32,p:[$n[6].MatchParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitNot",t:8,pi:[{n:"parser",pt:$n[6].NotParser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitNot",rt:$n[2].Int32,p:[$n[6].NotParser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitOneOrMore",t:8,pi:[{n:"parser",pt:$n[6].OneOrMoreParser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitOneOrMore",rt:$n[2].Int32,p:[$n[6].OneOrMoreParser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitOptional",t:8,pi:[{n:"parser",pt:$n[6].OptionalParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitOptional",rt:$n[2].Int32,p:[$n[6].OptionalParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitProduce",t:8,pi:[{n:"parser",pt:$n[6].ProduceParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitProduce",rt:$n[2].Int32,p:[$n[6].ProduceParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitRequired",t:8,pi:[{n:"parser",pt:$n[6].RequiredParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitRequired",rt:$n[2].Int32,p:[$n[6].RequiredParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitRule",t:8,pi:[{n:"parser",pt:$n[6].RuleParser$2(TInput,System.Object),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],tpc:1,tprm:["TOutput"],sn:"VisitRule",rt:$n[2].Int32,p:[$n[6].RuleParser$2(TInput,System.Object),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitSequence",t:8,pi:[{n:"parser",pt:$n[6].SequenceParser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitSequence",rt:$n[2].Int32,p:[$n[6].SequenceParser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"VisitSequence",t:8,pi:[{n:"parsers",pt:$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitSequence$1",rt:$n[2].Int32,p:[$n[0].IReadOnlyList$1(Kusto.Language.Parsing.Parser$1(TInput)),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{ov:!0,a:2,n:"VisitZeroOrMore",t:8,pi:[{n:"parser",pt:$n[6].ZeroOrMoreParser$1(TInput),ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"VisitZeroOrMore",rt:$n[2].Int32,p:[$n[6].ZeroOrMoreParser$1(TInput),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"MaxDepth",is:!0,t:4,rt:$n[2].Int32,sn:"MaxDepth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_afterAction",t:4,rt:Function,sn:"_afterAction",ro:!0},{a:1,n:"_beforeAction",t:4,rt:Function,sn:"_beforeAction",ro:!0},{a:1,n:"_depth",t:4,rt:$n[2].Int32,sn:"_depth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_prevWasMissing",t:4,rt:$n[2].Boolean,sn:"_prevWasMissing",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_source",t:4,rt:$n[6].Source$1(TInput),sn:"_source",ro:!0},{a:1,n:"safeSearcher",t:4,rt:$n[6].StackSafeSearcher$1(TInput),sn:"safeSearcher"}]}},$n);$m("Kusto.Language.Parsing.Source$1",function(T){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"Eat",t:8,pi:[{n:"n",dv:1,o:!0,pt:$n[2].Int32,ps:0}],sn:"Eat",rt:$n[2].Void,p:[$n[2].Int32]},{ab:!0,a:2,n:"IsEnd",t:8,pi:[{n:"n",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"IsEnd",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:2,n:"Peek",t:8,pi:[{n:"n",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"Peek",rt:T,p:[$n[2].Int32]}]}},$n);$m("Kusto.Language.Parsing.TextSource",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"source",pt:$n[2].String,ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].Int32,$n[2].Int32],pi:[{n:"source",pt:$n[2].String,ps:0},{n:"offset",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"$ctor1"},{ov:!0,a:2,n:"Eat",t:8,pi:[{n:"n",pt:$n[2].Int32,ps:0}],sn:"Eat",rt:$n[2].Void,p:[$n[2].Int32]},{a:2,n:"EatText",t:8,pi:[{n:"length",pt:$n[2].Int32,ps:0}],sn:"EatText",rt:$n[2].String,p:[$n[2].Int32]},{ov:!0,a:2,n:"IsEnd",t:8,pi:[{n:"n",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"IsEnd",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Matches",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"text",pt:$n[2].String,ps:1}],sn:"Matches",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Matches",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"ignoreCase",pt:$n[2].Boolean,ps:2}],sn:"Matches$1",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].String,$n[2].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"Peek",t:8,pi:[{n:"n",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"Peek",rt:$n[2].Char,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Char,String.fromCharCode,System.Char.getHashCode)}},{a:2,n:"PeekText",t:8,pi:[{n:"length",pt:$n[2].Int32,ps:0}],sn:"PeekText",rt:$n[2].String,p:[$n[2].Int32]},{a:2,n:"PeekText",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"PeekText$1",rt:$n[2].String,p:[$n[2].Int32,$n[2].Int32]},{a:2,n:"Position",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Position",t:8,rt:$n[2].Int32,fg:"Position",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Position"},{a:1,n:"end",t:4,rt:$n[2].Int32,sn:"end",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"offset",t:4,rt:$n[2].Int32,sn:"offset",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"source",t:4,rt:$n[2].String,sn:"source",ro:!0},{a:1,n:"strings",t:4,rt:$n[5].StringTable,sn:"strings"}]}},$n);$m("Kusto.Language.Parsing.CommandGrammar",function(){return{nested:[$n[6].CommandGrammar.RecentGrammar,$n[6].CommandGrammar.ParserInfo],att:1048577,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.CommandBlock),$n[6].Parser$2(System.Char,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement)),$n[0].Dictionary$2(Kusto.Language.Symbols.CommandSymbol,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command))],pi:[{n:"commandBlockParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.CommandBlock),ps:0},{n:"commandGrammarParser",pt:$n[6].Parser$2(System.Char,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement)),ps:1},{n:"commandToParserMap",pt:$n[0].Dictionary$2(Kusto.Language.Symbols.CommandSymbol,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command)),ps:2}],sn:"ctor"},{a:1,n:"Create",is:!0,t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"Create",rt:$n[6].CommandGrammar,p:[$n[4].GlobalState]},{a:1,n:"CreateCommandGrammarParser",is:!0,t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0},{n:"command",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command),ps:1}],sn:"CreateCommandGrammarParser",rt:$n[6].Parser$2(System.Char,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement)),p:[$n[4].GlobalState,$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command)]},{a:1,n:"CreateCommandParser",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].CommandSymbol,ps:0},{n:"commandGrammarParser",pt:$n[6].Parser$2(System.Char,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement)),ps:1}],sn:"CreateCommandParser",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command),p:[$n[1].CommandSymbol,$n[6].Parser$2(System.Char,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement))]},{a:2,n:"From",is:!0,t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"From",rt:$n[6].CommandGrammar,p:[$n[4].GlobalState]},{a:2,n:"GetCommandGrammarParser",is:!0,t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"GetCommandGrammarParser",rt:$n[6].Parser$2(System.Char,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement)),p:[$n[4].GlobalState]},{a:2,n:"GetCommandParser",t:8,pi:[{n:"command",pt:$n[1].CommandSymbol,ps:0}],sn:"GetCommandParser",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command),p:[$n[1].CommandSymbol]},{a:1,n:"GetCompletionKind",is:!0,t:8,pi:[{n:"textAndOffset",pt:$n[6].OffsetValue$1(System.String),ps:0}],sn:"GetCompletionKind",rt:$n[8].CompletionKind,p:[$n[6].OffsetValue$1(System.String)],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:1,n:"GetDefaultCommandGrammar",is:!0,t:8,sn:"GetDefaultCommandGrammar",rt:$n[6].CommandGrammar},{a:1,n:"GetElementParser",is:!0,t:8,pi:[{n:"info",pt:$n[6].CommandGrammar.ParserInfo,ps:0}],sn:"GetElementParser",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement),p:[$n[6].CommandGrammar.ParserInfo]},{a:1,n:"IsHex",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"IsHex",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"CommandBlock",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.CommandBlock),g:{a:2,n:"get_CommandBlock",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.CommandBlock),fg:"CommandBlock"},fn:"CommandBlock"},{a:1,n:"MissingCommandStatement",is:!0,t:4,rt:Function,sn:"MissingCommandStatement"},{a:1,n:"MissingCommandStatementNode",is:!0,t:4,rt:$n[3].Statement,sn:"MissingCommandStatementNode"},{a:1,n:"commandGrammarParser",t:4,rt:$n[6].Parser$2(System.Char,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement)),sn:"commandGrammarParser",ro:!0},{a:1,n:"commandToParserMap",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Symbols.CommandSymbol,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command)),sn:"commandToParserMap",ro:!0},{a:1,n:"s_defaultCommandGrammar",is:!0,t:4,rt:$n[6].CommandGrammar,sn:"s_defaultCommandGrammar"},{a:1,n:"s_recentGrammar",is:!0,t:4,rt:$n[6].CommandGrammar.RecentGrammar,sn:"s_recentGrammar"},{a:1,backing:!0,n:"<CommandBlock>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.CommandBlock),sn:"CommandBlock"}]}},$n);$m("Kusto.Language.Parsing.CommandGrammar.RecentGrammar",function(){return{td:$n[6].CommandGrammar,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),$n[6].CommandGrammar],pi:[{n:"commands",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),ps:0},{n:"grammar",pt:$n[6].CommandGrammar,ps:1}],sn:"ctor"},{a:2,n:"Commands",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),g:{a:2,n:"get_Commands",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),fg:"Commands"},fn:"Commands"},{a:2,n:"Grammar",t:16,rt:$n[6].CommandGrammar,g:{a:2,n:"get_Grammar",t:8,rt:$n[6].CommandGrammar,fg:"Grammar"},fn:"Grammar"},{a:1,backing:!0,n:"<Commands>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),sn:"Commands"},{a:1,backing:!0,n:"<Grammar>k__BackingField",t:4,rt:$n[6].CommandGrammar,sn:"Grammar"}]}},$n);$m("Kusto.Language.Parsing.CommandGrammar.ParserInfo",function(){return{td:$n[6].CommandGrammar,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement),$n[3].CustomElementDescriptor,Function,$n[2].Boolean],pi:[{n:"parser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement),ps:0},{n:"element",pt:$n[3].CustomElementDescriptor,ps:1},{n:"missing",pt:Function,ps:2},{n:"isTerm",dv:!1,o:!0,pt:$n[2].Boolean,ps:3}],sn:"ctor"},{a:2,n:"WithElement",t:8,pi:[{n:"element",pt:$n[3].CustomElementDescriptor,ps:0}],sn:"WithElement",rt:$n[6].CommandGrammar.ParserInfo,p:[$n[3].CustomElementDescriptor]},{a:2,n:"Element",t:16,rt:$n[3].CustomElementDescriptor,g:{a:2,n:"get_Element",t:8,rt:$n[3].CustomElementDescriptor,fg:"Element"},fn:"Element"},{a:2,n:"IsTerm",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IsTerm",t:8,rt:$n[2].Boolean,fg:"IsTerm",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsTerm"},{a:2,n:"Missing",t:16,rt:Function,g:{a:2,n:"get_Missing",t:8,rt:Function,fg:"Missing"},fn:"Missing"},{a:2,n:"Parser",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement),g:{a:2,n:"get_Parser",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement),fg:"Parser"},fn:"Parser"},{a:1,backing:!0,n:"<Element>k__BackingField",t:4,rt:$n[3].CustomElementDescriptor,sn:"Element"},{a:1,backing:!0,n:"<IsTerm>k__BackingField",t:4,rt:$n[2].Boolean,sn:"IsTerm",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Missing>k__BackingField",t:4,rt:Function,sn:"Missing"},{a:1,backing:!0,n:"<Parser>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement),sn:"Parser"}]}},$n);$m("Kusto.Language.Parsing.DirectiveGrammar",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"DirectiveBlock",is:!0,t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.DirectiveBlock),sn:"DirectiveBlock",ro:!0}]}},$n);$m("Kusto.Language.Parsing.LexicalToken",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].SyntaxKind,$n[2].String,$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"trivia",pt:$n[2].String,ps:1},{n:"text",pt:$n[2].String,ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:3}],sn:"ctor"},{a:1,n:"DebugText",t:16,rt:$n[2].String,g:{a:1,n:"get_DebugText",t:8,rt:$n[2].String,fg:"DebugText"},fn:"DebugText"},{a:2,n:"Diagnostics",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),g:{a:2,n:"get_Diagnostics",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),fg:"Diagnostics"},fn:"Diagnostics"},{a:2,n:"Kind",t:16,rt:$n[3].SyntaxKind,g:{a:2,n:"get_Kind",t:8,rt:$n[3].SyntaxKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},fn:"Kind"},{a:2,n:"Length",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Length",t:8,rt:$n[2].Int32,fg:"Length",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Length"},{a:2,n:"Text",t:16,rt:$n[2].String,g:{a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:2,n:"Trivia",t:16,rt:$n[2].String,g:{a:2,n:"get_Trivia",t:8,rt:$n[2].String,fg:"Trivia"},fn:"Trivia"},{a:1,backing:!0,n:"<Diagnostics>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"Diagnostics"},{a:1,backing:!0,n:"<Kind>k__BackingField",t:4,rt:$n[3].SyntaxKind,sn:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,backing:!0,n:"<Text>k__BackingField",t:4,rt:$n[2].String,sn:"Text"},{a:1,backing:!0,n:"<Trivia>k__BackingField",t:4,rt:$n[2].String,sn:"Trivia"}]}},$n);$m("Kusto.Language.Parsing.QueryGrammar",function(){return{att:1048577,a:2,m:[{a:1,n:".ctor",t:1,sn:"ctor"},{a:1,n:"AsIdentifierNameDeclaration",is:!0,t:8,pi:[{n:"tokenParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),ps:0}],sn:"AsIdentifierNameDeclaration",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NameDeclaration),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken)]},{a:1,n:"AsIdentifierNameReference",is:!0,t:8,pi:[{n:"tokenParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),ps:0}],sn:"AsIdentifierNameReference",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken)]},{a:1,n:"AsPrimitiveTypeExpression",is:!0,t:8,pi:[{n:"tokenParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),ps:0}],sn:"AsPrimitiveTypeExpression",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.TypeExpression),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken)]},{a:1,n:"AsTokenLiteral",is:!0,t:8,pi:[{n:"tokenParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),ps:0}],sn:"AsTokenLiteral",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken)]},{a:2,n:"From",is:!0,t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"From",rt:$n[6].QueryGrammar,p:[$n[4].GlobalState]},{a:1,n:"Initialize",t:8,sn:"Initialize",rt:$n[2].Void},{a:1,n:"IsTokenVisible",is:!0,t:8,pi:[{n:"tokenKind",pt:$n[3].SyntaxKind,ps:0}],sn:"IsTokenVisible",rt:$n[2].Boolean,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"MissingTokenLiteral",is:!0,t:8,pi:[{n:"tokens",pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"MissingTokenLiteral",rt:Function,p:[$n[0].IReadOnlyList$1(System.String)]},{a:2,n:"MissingTokenLiteral",is:!0,t:8,pi:[{n:"tokens",ip:!0,pt:$n[2].Array.type(System.String),ps:0}],sn:"MissingTokenLiteral$1",rt:Function,p:[$n[2].Array.type(System.String)]},{a:2,n:"MissingTokenLiteralNode",is:!0,t:8,pi:[{n:"tokens",pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"MissingTokenLiteralNode",rt:$n[3].Expression,p:[$n[0].IReadOnlyList$1(System.String)]},{a:2,n:"BracedName",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name),g:{a:2,n:"get_BracedName",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name),fg:"BracedName"},s:{a:1,n:"set_BracedName",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name)],rt:$n[2].Void,fs:"BracedName"},fn:"BracedName"},{a:2,n:"BracketedName",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name),g:{a:2,n:"get_BracketedName",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name),fg:"BracketedName"},s:{a:1,n:"set_BracketedName",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name)],rt:$n[2].Void,fs:"BracketedName"},fn:"BracketedName"},{a:2,n:"BracketedNameDeclaration",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NameDeclaration),g:{a:2,n:"get_BracketedNameDeclaration",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NameDeclaration),fg:"BracketedNameDeclaration"},s:{a:1,n:"set_BracketedNameDeclaration",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NameDeclaration)],rt:$n[2].Void,fs:"BracketedNameDeclaration"},fn:"BracketedNameDeclaration"},{a:2,n:"Expression",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),g:{a:2,n:"get_Expression",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),fg:"Expression"},s:{a:1,n:"set_Expression",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression)],rt:$n[2].Void,fs:"Expression"},fn:"Expression"},{a:2,n:"FollowingPipeElementExpression",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryOperator),g:{a:2,n:"get_FollowingPipeElementExpression",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryOperator),fg:"FollowingPipeElementExpression"},s:{a:1,n:"set_FollowingPipeElementExpression",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryOperator)],rt:$n[2].Void,fs:"FollowingPipeElementExpression"},fn:"FollowingPipeElementExpression"},{a:2,n:"FunctionBody",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.FunctionBody),g:{a:2,n:"get_FunctionBody",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.FunctionBody),fg:"FunctionBody"},s:{a:1,n:"set_FunctionBody",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.FunctionBody)],rt:$n[2].Void,fs:"FunctionBody"},fn:"FunctionBody"},{a:2,n:"FunctionParameters",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.FunctionParameters),g:{a:2,n:"get_FunctionParameters",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.FunctionParameters),fg:"FunctionParameters"},s:{a:1,n:"set_FunctionParameters",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.FunctionParameters)],rt:$n[2].Void,fs:"FunctionParameters"},fn:"FunctionParameters"},{a:2,n:"IdentifierName",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name),g:{a:2,n:"get_IdentifierName",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name),fg:"IdentifierName"},s:{a:1,n:"set_IdentifierName",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name)],rt:$n[2].Void,fs:"IdentifierName"},fn:"IdentifierName"},{a:2,n:"Literal",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),g:{a:2,n:"get_Literal",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),fg:"Literal"},s:{a:1,n:"set_Literal",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression)],rt:$n[2].Void,fs:"Literal"},fn:"Literal"},{a:2,n:"LiteralList",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))),g:{a:2,n:"get_LiteralList",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))),fg:"LiteralList"},s:{a:1,n:"set_LiteralList",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)))],rt:$n[2].Void,fs:"LiteralList"},fn:"LiteralList"},{a:2,n:"NamedExpression",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),g:{a:2,n:"get_NamedExpression",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),fg:"NamedExpression"},s:{a:1,n:"set_NamedExpression",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression)],rt:$n[2].Void,fs:"NamedExpression"},fn:"NamedExpression"},{a:2,n:"ParamTypeExtended",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.TypeExpression),g:{a:2,n:"get_ParamTypeExtended",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.TypeExpression),fg:"ParamTypeExtended"},s:{a:1,n:"set_ParamTypeExtended",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.TypeExpression)],rt:$n[2].Void,fs:"ParamTypeExtended"},fn:"ParamTypeExtended"},{a:2,n:"PipeExpression",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),g:{a:2,n:"get_PipeExpression",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),fg:"PipeExpression"},s:{a:1,n:"set_PipeExpression",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression)],rt:$n[2].Void,fs:"PipeExpression"},fn:"PipeExpression"},{a:2,n:"PipeSubExpression",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),g:{a:2,n:"get_PipeSubExpression",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),fg:"PipeSubExpression"},s:{a:1,n:"set_PipeSubExpression",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression)],rt:$n[2].Void,fs:"PipeSubExpression"},fn:"PipeSubExpression"},{a:2,n:"QueryBlock",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryBlock),g:{a:2,n:"get_QueryBlock",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryBlock),fg:"QueryBlock"},s:{a:1,n:"set_QueryBlock",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryBlock)],rt:$n[2].Void,fs:"QueryBlock"},fn:"QueryBlock"},{a:2,n:"QueryOperator",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryOperator),g:{a:2,n:"get_QueryOperator",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryOperator),fg:"QueryOperator"},s:{a:1,n:"set_QueryOperator",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryOperator)],rt:$n[2].Void,fs:"QueryOperator"},fn:"QueryOperator"},{a:2,n:"SchemaType",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SchemaTypeExpression),g:{a:2,n:"get_SchemaType",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SchemaTypeExpression),fg:"SchemaType"},s:{a:1,n:"set_SchemaType",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SchemaTypeExpression)],rt:$n[2].Void,fs:"SchemaType"},fn:"SchemaType"},{a:2,n:"SimpleNameDeclaration",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NameDeclaration),g:{a:2,n:"get_SimpleNameDeclaration",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NameDeclaration),fg:"SimpleNameDeclaration"},s:{a:1,n:"set_SimpleNameDeclaration",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NameDeclaration)],rt:$n[2].Void,fs:"SimpleNameDeclaration"},fn:"SimpleNameDeclaration"},{a:2,n:"SimpleNameDeclarationExpression",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),g:{a:2,n:"get_SimpleNameDeclarationExpression",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),fg:"SimpleNameDeclarationExpression"},s:{a:1,n:"set_SimpleNameDeclarationExpression",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression)],rt:$n[2].Void,fs:"SimpleNameDeclarationExpression"},fn:"SimpleNameDeclarationExpression"},{a:2,n:"SimpleNameReference",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),g:{a:2,n:"get_SimpleNameReference",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),fg:"SimpleNameReference"},s:{a:1,n:"set_SimpleNameReference",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression)],rt:$n[2].Void,fs:"SimpleNameReference"},fn:"SimpleNameReference"},{a:2,n:"SkippedTokens",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SkippedTokens),g:{a:2,n:"get_SkippedTokens",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SkippedTokens),fg:"SkippedTokens"},s:{a:1,n:"set_SkippedTokens",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SkippedTokens)],rt:$n[2].Void,fs:"SkippedTokens"},fn:"SkippedTokens"},{a:2,n:"Statement",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Statement),g:{a:2,n:"get_Statement",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Statement),fg:"Statement"},s:{a:1,n:"set_Statement",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Statement)],rt:$n[2].Void,fs:"Statement"},fn:"Statement"},{a:2,n:"StatementList",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))),g:{a:2,n:"get_StatementList",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))),fg:"StatementList"},s:{a:1,n:"set_StatementList",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)))],rt:$n[2].Void,fs:"StatementList"},fn:"StatementList"},{a:2,n:"StringLiteral",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),g:{a:2,n:"get_StringLiteral",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),fg:"StringLiteral"},s:{a:1,n:"set_StringLiteral",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression)],rt:$n[2].Void,fs:"StringLiteral"},fn:"StringLiteral"},{a:2,n:"UnnamedExpression",t:16,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),g:{a:2,n:"get_UnnamedExpression",t:8,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),fg:"UnnamedExpression"},s:{a:1,n:"set_UnnamedExpression",t:8,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression)],rt:$n[2].Void,fs:"UnnamedExpression"},fn:"UnnamedExpression"},{a:2,n:"MissingBooleanLiteral",is:!0,t:4,rt:Function,sn:"MissingBooleanLiteral",ro:!0},{a:2,n:"MissingBooleanLiteralNode",is:!0,t:4,rt:$n[3].Expression,sn:"MissingBooleanLiteralNode",ro:!0},{a:2,n:"MissingExpression",is:!0,t:4,rt:Function,sn:"MissingExpression",ro:!0},{a:2,n:"MissingExpressionNode",is:!0,t:4,rt:$n[3].Expression,sn:"MissingExpressionNode",ro:!0},{a:2,n:"MissingForkExpression",is:!0,t:4,rt:Function,sn:"MissingForkExpression",ro:!0},{a:2,n:"MissingForkExpressionNode",is:!0,t:4,rt:$n[3].ForkExpression,sn:"MissingForkExpressionNode",ro:!0},{a:2,n:"MissingFunctionCall",is:!0,t:4,rt:Function,sn:"MissingFunctionCall",ro:!0},{a:2,n:"MissingFunctionCallExpression",is:!0,t:4,rt:Function,sn:"MissingFunctionCallExpression",ro:!0},{a:2,n:"MissingFunctionCallNode",is:!0,t:4,rt:$n[3].FunctionCallExpression,sn:"MissingFunctionCallNode",ro:!0},{a:2,n:"MissingFunctionDeclaration",is:!0,t:4,rt:Function,sn:"MissingFunctionDeclaration"},{a:2,n:"MissingFunctionDeclarationNode",is:!0,t:4,rt:$n[3].FunctionDeclaration,sn:"MissingFunctionDeclarationNode"},{a:2,n:"MissingFunctionParameter",is:!0,t:4,rt:Function,sn:"MissingFunctionParameter",ro:!0},{a:2,n:"MissingFunctionParameterNode",is:!0,t:4,rt:$n[3].FunctionParameter,sn:"MissingFunctionParameterNode",ro:!0},{a:2,n:"MissingJoinOnClause",is:!0,t:4,rt:Function,sn:"MissingJoinOnClause",ro:!0},{a:2,n:"MissingJoinOnClauseNode",is:!0,t:4,rt:$n[3].JoinOnClause,sn:"MissingJoinOnClauseNode",ro:!0},{a:2,n:"MissingJsonPair",is:!0,t:4,rt:Function,sn:"MissingJsonPair",ro:!0},{a:2,n:"MissingJsonPairNode",is:!0,t:4,rt:$n[3].JsonPair,sn:"MissingJsonPairNode",ro:!0},{a:2,n:"MissingJsonValue",is:!0,t:4,rt:Function,sn:"MissingJsonValue",ro:!0},{a:2,n:"MissingJsonValueNode",is:!0,t:4,rt:$n[3].Expression,sn:"MissingJsonValueNode",ro:!0},{a:2,n:"MissingLongLiteral",is:!0,t:4,rt:Function,sn:"MissingLongLiteral",ro:!0},{a:2,n:"MissingLongLiteralNode",is:!0,t:4,rt:$n[3].Expression,sn:"MissingLongLiteralNode",ro:!0},{a:2,n:"MissingMakeSeriesExpression",is:!0,t:4,rt:Function,sn:"MissingMakeSeriesExpression",ro:!0},{a:2,n:"MissingMakeSeriesExpressionNode",is:!0,t:4,rt:$n[3].MakeSeriesExpression,sn:"MissingMakeSeriesExpressionNode",ro:!0},{a:2,n:"MissingMvApplyExpression",is:!0,t:4,rt:Function,sn:"MissingMvApplyExpression",ro:!0},{a:2,n:"MissingMvApplyExpressionNode",is:!0,t:4,rt:$n[3].MvApplyExpression,sn:"MissingMvApplyExpressionNode",ro:!0},{a:2,n:"MissingMvApplySubqueryExpression",is:!0,t:4,rt:Function,sn:"MissingMvApplySubqueryExpression",ro:!0},{a:2,n:"MissingMvApplySubqueryExpressionNode",is:!0,t:4,rt:$n[3].MvApplySubqueryExpression,sn:"MissingMvApplySubqueryExpressionNode",ro:!0},{a:2,n:"MissingMvExpandExpression",is:!0,t:4,rt:Function,sn:"MissingMvExpandExpression",ro:!0},{a:2,n:"MissingMvExpandExpressionNode",is:!0,t:4,rt:$n[3].MvExpandExpression,sn:"MissingMvExpandExpressionNode",ro:!0},{a:2,n:"MissingNameAndTypeDeclaration",is:!0,t:4,rt:Function,sn:"MissingNameAndTypeDeclaration",ro:!0},{a:2,n:"MissingNameAndTypeDeclarationNode",is:!0,t:4,rt:$n[3].NameAndTypeDeclaration,sn:"MissingNameAndTypeDeclarationNode",ro:!0},{a:2,n:"MissingNameDeclaration",is:!0,t:4,rt:Function,sn:"MissingNameDeclaration",ro:!0},{a:2,n:"MissingNameDeclarationExpression",is:!0,t:4,rt:Function,sn:"MissingNameDeclarationExpression",ro:!0},{a:2,n:"MissingNameDeclarationNode",is:!0,t:4,rt:$n[3].NameDeclaration,sn:"MissingNameDeclarationNode",ro:!0},{a:2,n:"MissingNameReference",is:!0,t:4,rt:Function,sn:"MissingNameReference",ro:!0},{a:2,n:"MissingNameReferenceNode",is:!0,t:4,rt:$n[3].NameReference,sn:"MissingNameReferenceNode",ro:!0},{a:2,n:"MissingNamedExpression",is:!0,t:4,rt:Function,sn:"MissingNamedExpression",ro:!0},{a:2,n:"MissingNamedExpressionNode",is:!0,t:4,rt:$n[3].NamedExpression,sn:"MissingNamedExpressionNode",ro:!0},{a:2,n:"MissingNamedParameter",is:!0,t:4,rt:Function,sn:"MissingNamedParameter",ro:!0},{a:2,n:"MissingNamedParameterNode",is:!0,t:4,rt:$n[3].NamedParameter,sn:"MissingNamedParameterNode",ro:!0},{a:2,n:"MissingPartitionOperand",is:!0,t:4,rt:Function,sn:"MissingPartitionOperand",ro:!0},{a:2,n:"MissingPartitionOperandNode",is:!0,t:4,rt:$n[3].PartitionOperand,sn:"MissingPartitionOperandNode",ro:!0},{a:2,n:"MissingQueryOperator",is:!0,t:4,rt:Function,sn:"MissingQueryOperator",ro:!0},{a:2,n:"MissingQueryOperatorExpression",is:!0,t:4,rt:Function,sn:"MissingQueryOperatorExpression",ro:!0},{a:2,n:"MissingQueryOperatorNode",is:!0,t:4,rt:$n[3].QueryOperator,sn:"MissingQueryOperatorNode",ro:!0},{a:2,n:"MissingScanAssignment",is:!0,t:4,rt:Function,sn:"MissingScanAssignment",ro:!0},{a:2,n:"MissingScanAssignmentNode",is:!0,t:4,rt:$n[3].ScanAssignment,sn:"MissingScanAssignmentNode",ro:!0},{a:2,n:"MissingSchema",is:!0,t:4,rt:Function,sn:"MissingSchema",ro:!0},{a:2,n:"MissingSchemaNode",is:!0,t:4,rt:$n[3].SchemaTypeExpression,sn:"MissingSchemaNode",ro:!0},{a:2,n:"MissingStatement",is:!0,t:4,rt:Function,sn:"MissingStatement",ro:!0},{a:2,n:"MissingStatementElement",is:!0,t:4,rt:Function,sn:"MissingStatementElement",ro:!0},{a:2,n:"MissingStatementElementNode",is:!0,t:4,rt:$n[3].SeparatedElement$1(Kusto.Language.Syntax.Statement),sn:"MissingStatementElementNode",ro:!0},{a:2,n:"MissingStatementNode",is:!0,t:4,rt:$n[3].Statement,sn:"MissingStatementNode",ro:!0},{a:2,n:"MissingStringLiteral",is:!0,t:4,rt:Function,sn:"MissingStringLiteral",ro:!0},{a:2,n:"MissingStringLiteralNode",is:!0,t:4,rt:$n[3].Expression,sn:"MissingStringLiteralNode",ro:!0},{a:2,n:"MissingType",is:!0,t:4,rt:Function,sn:"MissingType",ro:!0},{a:2,n:"MissingTypeNode",is:!0,t:4,rt:$n[3].TypeExpression,sn:"MissingTypeNode",ro:!0},{a:2,n:"MissingTypeOfLiteral",is:!0,t:4,rt:Function,sn:"MissingTypeOfLiteral",ro:!0},{a:2,n:"MissingTypeofLiteralNode",is:!0,t:4,rt:$n[3].TypeOfLiteralExpression,sn:"MissingTypeofLiteralNode",ro:!0},{a:2,n:"MissingValue",is:!0,t:4,rt:Function,sn:"MissingValue",ro:!0},{a:2,n:"MissingValueNode",is:!0,t:4,rt:$n[3].Expression,sn:"MissingValueNode",ro:!0},{a:2,n:"StringOperatorMap",is:!0,t:4,rt:$n[0].Dictionary$2(Kusto.Language.Syntax.SyntaxKind,Kusto.Language.Syntax.SyntaxKind),sn:"StringOperatorMap",ro:!0},{a:1,n:"s_Instance",is:!0,t:4,rt:$n[6].QueryGrammar,sn:"s_Instance"},{a:1,backing:!0,n:"<BracedName>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name),sn:"BracedName"},{a:1,backing:!0,n:"<BracketedName>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name),sn:"BracketedName"},{a:1,backing:!0,n:"<BracketedNameDeclaration>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NameDeclaration),sn:"BracketedNameDeclaration"},{a:1,backing:!0,n:"<Expression>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),sn:"Expression"},{a:1,backing:!0,n:"<FollowingPipeElementExpression>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryOperator),sn:"FollowingPipeElementExpression"},{a:1,backing:!0,n:"<FunctionBody>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.FunctionBody),sn:"FunctionBody"},{a:1,backing:!0,n:"<FunctionParameters>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.FunctionParameters),sn:"FunctionParameters"},{a:1,backing:!0,n:"<IdentifierName>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Name),sn:"IdentifierName"},{a:1,backing:!0,n:"<Literal>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),sn:"Literal"},{a:1,backing:!0,n:"<LiteralList>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))),sn:"LiteralList"},{a:1,backing:!0,n:"<NamedExpression>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),sn:"NamedExpression"},{a:1,backing:!0,n:"<ParamTypeExtended>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.TypeExpression),sn:"ParamTypeExtended"},{a:1,backing:!0,n:"<PipeExpression>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),sn:"PipeExpression"},{a:1,backing:!0,n:"<PipeSubExpression>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),sn:"PipeSubExpression"},{a:1,backing:!0,n:"<QueryBlock>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryBlock),sn:"QueryBlock"},{a:1,backing:!0,n:"<QueryOperator>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.QueryOperator),sn:"QueryOperator"},{a:1,backing:!0,n:"<SchemaType>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SchemaTypeExpression),sn:"SchemaType"},{a:1,backing:!0,n:"<SimpleNameDeclaration>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NameDeclaration),sn:"SimpleNameDeclaration"},{a:1,backing:!0,n:"<SimpleNameDeclarationExpression>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),sn:"SimpleNameDeclarationExpression"},{a:1,backing:!0,n:"<SimpleNameReference>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),sn:"SimpleNameReference"},{a:1,backing:!0,n:"<SkippedTokens>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SkippedTokens),sn:"SkippedTokens"},{a:1,backing:!0,n:"<Statement>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Statement),sn:"Statement"},{a:1,backing:!0,n:"<StatementList>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))),sn:"StatementList"},{a:1,backing:!0,n:"<StringLiteral>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),sn:"StringLiteral"},{a:1,backing:!0,n:"<UnnamedExpression>k__BackingField",t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Expression),sn:"UnnamedExpression"}]}},$n);$m("Kusto.Language.Parsing.QueryParser",function(){return{att:1048577,a:2,m:[{a:1,n:".ctor",t:1,p:[System.Array.type(Kusto.Language.Parsing.LexicalToken),$n[2].Int32],pi:[{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ctor"},{a:1,n:"CreateMissingFirstOrLastToken",t:8,sn:"CreateMissingFirstOrLastToken",rt:$n[3].SyntaxToken},{a:1,n:"CreateMissingFunctionBody",is:!0,t:8,sn:"CreateMissingFunctionBody",rt:$n[3].FunctionBody},{a:1,n:"CreateMissingFunctionCallExpression",is:!0,t:8,sn:"CreateMissingFunctionCallExpression",rt:$n[3].FunctionCallExpression},{a:1,n:"CreateMissingFunctionParameters",is:!0,t:8,sn:"CreateMissingFunctionParameters",rt:$n[3].FunctionParameters},{a:1,n:"CreateMissingJoinOnClause",is:!0,t:8,sn:"CreateMissingJoinOnClause",rt:$n[3].JoinOnClause},{a:1,n:"CreateMissingMaterializedViewCombineClause",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"CreateMissingMaterializedViewCombineClause",rt:$n[3].MaterializedViewCombineClause,p:[$n[2].String]},{a:1,n:"CreateMissingMvApplySubqueryExpression",is:!0,t:8,sn:"CreateMissingMvApplySubqueryExpression",rt:$n[3].MvApplySubqueryExpression},{a:1,n:"CreateMissingNameToken",is:!0,t:8,pi:[{n:"texts",pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"CreateMissingNameToken",rt:$n[3].SyntaxToken,p:[$n[0].IReadOnlyList$1(System.String)]},{a:1,n:"CreateMissingPartitionOperand",is:!0,t:8,sn:"CreateMissingPartitionOperand",rt:$n[3].PartitionOperand},{a:1,n:"CreateMissingToken",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"CreateMissingToken",rt:$n[3].SyntaxToken,p:[$n[3].SyntaxKind]},{a:1,n:"CreateMissingToken",is:!0,t:8,pi:[{n:"kinds",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:0}],sn:"CreateMissingToken$1",rt:$n[3].SyntaxToken,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind)]},{a:1,n:"CreateMissingTokenLiteral",is:!0,t:8,pi:[{n:"tokens",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"CreateMissingTokenLiteral",rt:$n[3].Expression,p:[$n[0].IReadOnlyList$1(System.String)]},{a:1,n:"CreateMissingTypeOfLiteral",is:!0,t:8,sn:"CreateMissingTypeOfLiteral",rt:$n[3].Expression},{a:1,n:"CreateQueryOperatorParameterMap",is:!0,t:8,pi:[{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),ps:0}],sn:"CreateQueryOperatorParameterMap",rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),p:[$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter)]},{a:1,n:"GetAdditiveExpressionKind",is:!0,t:8,pi:[{n:"tokenKind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetAdditiveExpressionKind",rt:$n[3].SyntaxKind,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,n:"GetMultiplicativeExpressionKind",is:!0,t:8,pi:[{n:"tokenKind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetMultiplicativeExpressionKind",rt:$n[3].SyntaxKind,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,n:"GetRelationalExpressionKind",is:!0,t:8,pi:[{n:"tokenKind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetRelationalExpressionKind",rt:$n[3].SyntaxKind,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,n:"GetResetPoint",t:8,sn:"GetResetPoint",rt:$n[2].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"GetStringOperationKind",is:!0,t:8,pi:[{n:"tokenKind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetStringOperationKind",rt:$n[3].SyntaxKind,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,n:"GetTokenText",t:8,pi:[{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:0},{n:"length",dv:1,o:!0,pt:$n[2].Int32,ps:1}],sn:"GetTokenText",rt:$n[2].String,p:[$n[2].Int32,$n[2].Int32]},{a:1,n:"IsKnownQueyrOperatorParameterName",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"IsKnownQueyrOperatorParameterName",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsMultiTokenName",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"IsMultiTokenName",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ParseAdditiveExpression",t:8,sn:"ParseAdditiveExpression",rt:$n[3].Expression},{a:1,n:"ParseAliasStatement",t:8,sn:"ParseAliasStatement",rt:$n[3].AliasStatement},{a:1,n:"ParseAnyQueryOperatorParameterValue",t:8,sn:"ParseAnyQueryOperatorParameterValue",rt:$n[3].Expression},{a:1,n:"ParseArgument",t:8,sn:"ParseArgument",rt:$n[3].Expression},{a:1,n:"ParseArgumentList",t:8,sn:"ParseArgumentList",rt:$n[3].ExpressionList},{a:1,n:"ParseAsOperator",t:8,sn:"ParseAsOperator",rt:$n[3].AsOperator},{a:1,n:"ParseBadQueryOperator",t:8,sn:"ParseBadQueryOperator",rt:$n[3].BadQueryOperator},{a:1,n:"ParseBarePathElementSelector",t:8,sn:"ParseBarePathElementSelector",rt:$n[3].Expression},{a:1,n:"ParseBracketedEntityNamePathElementSelector",t:8,sn:"ParseBracketedEntityNamePathElementSelector",rt:$n[3].Expression},{a:1,n:"ParseBracketedExpression",t:8,sn:"ParseBracketedExpression",rt:$n[3].Expression},{a:1,n:"ParseBracketedName",t:8,sn:"ParseBracketedName",rt:$n[3].Name},{a:1,n:"ParseBracketedNameReference",t:8,sn:"ParseBracketedNameReference",rt:$n[3].NameReference},{a:1,n:"ParseBracketedPathElementSelector",t:8,sn:"ParseBracketedPathElementSelector",rt:$n[3].Expression},{a:1,n:"ParseBracketedWildcardedNameReference",t:8,sn:"ParseBracketedWildcardedNameReference",rt:$n[3].NameReference},{a:1,n:"ParseClientParameterName",t:8,sn:"ParseClientParameterName",rt:$n[3].Name},{a:1,n:"ParseClientParameterReference",t:8,sn:"ParseClientParameterReference",rt:$n[3].Expression},{a:1,n:"ParseCombinedIdentifier",t:8,pi:[{n:"count",pt:$n[2].Int32,ps:0}],sn:"ParseCombinedIdentifier",rt:$n[3].SyntaxToken,p:[$n[2].Int32]},{a:1,n:"ParseCommaList",t:8,pi:[{n:"elementParser",pt:Function,ps:0},{n:"createMissingElement",dv:null,o:!0,pt:Function,ps:1},{n:"fnScanEnd",dv:null,o:!0,pt:Function,ps:2},{n:"oneOrMore",dv:!1,o:!0,pt:$n[2].Boolean,ps:3},{n:"allowTrailingComma",dv:!1,o:!0,pt:$n[2].Boolean,ps:4}],tpc:1,tprm:["TElement"],sn:"ParseCommaList",rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(System.Object)),p:[Function,Function,Function,$n[2].Boolean,$n[2].Boolean]},{a:1,n:"ParseConsumeOperator",t:8,sn:"ParseConsumeOperator",rt:$n[3].ConsumeOperator},{a:1,n:"ParseContextualDataTableExpression",t:8,sn:"ParseContextualDataTableExpression",rt:$n[3].ContextualDataTableExpression},{a:1,n:"ParseContextualSubExpression",t:8,sn:"ParseContextualSubExpression",rt:$n[3].Expression},{a:1,n:"ParseCountAsIdentifierClause",t:8,sn:"ParseCountAsIdentifierClause",rt:$n[3].CountAsIdentifierClause},{a:1,n:"ParseCountOperator",t:8,sn:"ParseCountOperator",rt:$n[3].CountOperator},{a:1,n:"ParseDataScopeClause",t:8,sn:"ParseDataScopeClause",rt:$n[3].DataScopeClause},{a:1,n:"ParseDataTableExpression",t:8,sn:"ParseDataTableExpression",rt:$n[3].DataTableExpression},{a:1,n:"ParseDefaultExpressionClause",t:8,sn:"ParseDefaultExpressionClause",rt:$n[3].DefaultExpressionClause},{a:1,n:"ParseDefaultValueDeclaration",t:8,sn:"ParseDefaultValueDeclaration",rt:$n[3].DefaultValueDeclaration},{a:1,n:"ParseDeprecatedRenderProperty",t:8,sn:"ParseDeprecatedRenderProperty",rt:$n[3].NamedParameter},{a:1,n:"ParseDistinctExpression",t:8,sn:"ParseDistinctExpression",rt:$n[3].Expression},{a:1,n:"ParseDistinctOperator",t:8,sn:"ParseDistinctOperator",rt:$n[3].DistinctOperator},{a:1,n:"ParseDotCompositeFunctionCall",t:8,sn:"ParseDotCompositeFunctionCall",rt:$n[3].Expression},{a:1,n:"ParseDynamicLiteral",t:8,sn:"ParseDynamicLiteral",rt:$n[3].Expression},{a:1,n:"ParseEntityPathExpression",t:8,sn:"ParseEntityPathExpression",rt:$n[3].Expression},{a:1,n:"ParseEntityReferenceExpression",t:8,sn:"ParseEntityReferenceExpression",rt:$n[3].Expression},{a:1,n:"ParseEqualityExpression",t:8,sn:"ParseEqualityExpression",rt:$n[3].Expression},{a:1,n:"ParseEvaluateOperator",t:8,sn:"ParseEvaluateOperator",rt:$n[3].EvaluateOperator},{a:1,n:"ParseEvaluateSchemaClause",t:8,sn:"ParseEvaluateSchemaClause",rt:$n[3].EvaluateSchemaClause},{a:1,n:"ParseExecuteAndCacheOperator",t:8,sn:"ParseExecuteAndCacheOperator",rt:$n[3].ExecuteAndCacheOperator},{a:1,n:"ParseExpression",t:8,sn:"ParseExpression",rt:$n[3].Expression},{a:2,n:"ParseExpression",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ParseExpression$1",rt:$n[3].Expression,p:[$n[2].String]},{a:2,n:"ParseExpression",is:!0,t:8,pi:[{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ParseExpression",rt:$n[3].Expression,p:[System.Array.type(Kusto.Language.Parsing.LexicalToken),$n[2].Int32]},{a:1,n:"ParseExtendOperator",t:8,sn:"ParseExtendOperator",rt:$n[3].ExtendOperator},{a:1,n:"ParseExternalDataExpression",t:8,sn:"ParseExternalDataExpression",rt:$n[3].ExternalDataExpression},{a:1,n:"ParseExternalDataWithClause",t:8,sn:"ParseExternalDataWithClause",rt:$n[3].ExternalDataWithClause},{a:1,n:"ParseFacetOperator",t:8,sn:"ParseFacetOperator",rt:$n[3].FacetOperator},{a:1,n:"ParseFacetWithClause",t:8,sn:"ParseFacetWithClause",rt:$n[3].FacetWithClause},{a:1,n:"ParseFilterOperator",t:8,sn:"ParseFilterOperator",rt:$n[3].FilterOperator},{a:1,n:"ParseFindInClause",t:8,sn:"ParseFindInClause",rt:$n[3].FindInClause},{a:1,n:"ParseFindOperand",t:8,sn:"ParseFindOperand",rt:$n[3].Expression},{a:1,n:"ParseFindOperator",t:8,sn:"ParseFindOperator",rt:$n[3].FindOperator},{a:1,n:"ParseFindProjectAwayClause",t:8,sn:"ParseFindProjectAwayClause",rt:$n[3].FindProjectClause},{a:1,n:"ParseFindProjectClause",t:8,sn:"ParseFindProjectClause",rt:$n[3].FindProjectClause},{a:1,n:"ParseFindProjectColumn",t:8,sn:"ParseFindProjectColumn",rt:$n[3].Expression},{a:1,n:"ParseFollowingPipeQueryOperator",t:8,sn:"ParseFollowingPipeQueryOperator",rt:$n[3].QueryOperator},{a:1,n:"ParseForkExpression",t:8,sn:"ParseForkExpression",rt:$n[3].ForkExpression},{a:1,n:"ParseForkOperator",t:8,sn:"ParseForkOperator",rt:$n[3].ForkOperator},{a:1,n:"ParseForkPipeExpression",t:8,sn:"ParseForkPipeExpression",rt:$n[3].Expression},{a:1,n:"ParseForkPipeQueryOperator",t:8,sn:"ParseForkPipeQueryOperator",rt:$n[3].QueryOperator},{a:1,n:"ParseFunctionBody",t:8,sn:"ParseFunctionBody",rt:$n[3].FunctionBody},{a:2,n:"ParseFunctionBody",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ParseFunctionBody$1",rt:$n[3].FunctionBody,p:[$n[2].String]},{a:2,n:"ParseFunctionBody",is:!0,t:8,pi:[{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ParseFunctionBody",rt:$n[3].FunctionBody,p:[System.Array.type(Kusto.Language.Parsing.LexicalToken),$n[2].Int32]},{a:1,n:"ParseFunctionBodyStatement",t:8,sn:"ParseFunctionBodyStatement",rt:$n[3].SeparatedElement$1(Kusto.Language.Syntax.Statement)},{a:1,n:"ParseFunctionCallExpression",t:8,sn:"ParseFunctionCallExpression",rt:$n[3].FunctionCallExpression},{a:1,n:"ParseFunctionCallName",t:8,sn:"ParseFunctionCallName",rt:$n[3].NameReference},{a:1,n:"ParseFunctionCallOrPath",t:8,sn:"ParseFunctionCallOrPath",rt:$n[3].Expression},{a:1,n:"ParseFunctionDeclaration",t:8,sn:"ParseFunctionDeclaration",rt:$n[3].FunctionDeclaration},{a:1,n:"ParseFunctionParameter",t:8,sn:"ParseFunctionParameter",rt:$n[3].FunctionParameter},{a:1,n:"ParseFunctionParameters",t:8,sn:"ParseFunctionParameters",rt:$n[3].FunctionParameters},{a:2,n:"ParseFunctionParameters",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ParseFunctionParameters$1",rt:$n[3].FunctionParameters,p:[$n[2].String]},{a:2,n:"ParseFunctionParameters",is:!0,t:8,pi:[{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ParseFunctionParameters",rt:$n[3].FunctionParameters,p:[System.Array.type(Kusto.Language.Parsing.LexicalToken),$n[2].Int32]},{a:1,n:"ParseGetSchemaOperator",t:8,sn:"ParseGetSchemaOperator",rt:$n[3].GetSchemaOperator},{a:1,n:"ParseIdentiferOrKeywordAsIdentifier",t:8,sn:"ParseIdentiferOrKeywordAsIdentifier",rt:$n[3].SyntaxToken},{a:1,n:"ParseIdentifierName",t:8,sn:"ParseIdentifierName",rt:$n[3].Name},{a:1,n:"ParseIdentifierOrKeywordTokenLiteral",t:8,sn:"ParseIdentifierOrKeywordTokenLiteral",rt:$n[3].Expression},{a:1,n:"ParseIdentifierTypeExpression",t:8,sn:"ParseIdentifierTypeExpression",rt:$n[3].TypeExpression},{a:1,n:"ParseInvocationExpression",t:8,sn:"ParseInvocationExpression",rt:$n[3].Expression},{a:1,n:"ParseInvokeOperator",t:8,sn:"ParseInvokeOperator",rt:$n[3].InvokeOperator},{a:1,n:"ParseJoinOnClause",t:8,sn:"ParseJoinOnClause",rt:$n[3].JoinConditionClause},{a:1,n:"ParseJoinOperator",t:8,sn:"ParseJoinOperator",rt:$n[3].JoinOperator},{a:1,n:"ParseJoinWhereClause",t:8,sn:"ParseJoinWhereClause",rt:$n[3].JoinConditionClause},{a:1,n:"ParseJsonArray",t:8,sn:"ParseJsonArray",rt:$n[3].Expression},{a:1,n:"ParseJsonNumber",t:8,sn:"ParseJsonNumber",rt:$n[3].Expression},{a:1,n:"ParseJsonObject",t:8,sn:"ParseJsonObject",rt:$n[3].Expression},{a:1,n:"ParseJsonPair",t:8,sn:"ParseJsonPair",rt:$n[3].JsonPair},{a:1,n:"ParseJsonValue",t:8,sn:"ParseJsonValue",rt:$n[3].Expression},{a:1,n:"ParseKnownQueryOperatorParaterName",t:8,sn:"ParseKnownQueryOperatorParaterName",rt:$n[3].SyntaxToken},{a:1,n:"ParseLetStatement",t:8,sn:"ParseLetStatement",rt:$n[3].LetStatement},{a:1,n:"ParseList",t:8,pi:[{n:"elementParser",pt:Function,ps:0},{n:"createMissingElement",dv:null,o:!0,pt:Function,ps:1},{n:"fnScanEnd",dv:null,o:!0,pt:Function,ps:2},{n:"oneOrMore",dv:!1,o:!0,pt:$n[2].Boolean,ps:3}],tpc:1,tprm:["TElement"],sn:"ParseList",rt:$n[3].SyntaxList$1(System.Object),p:[Function,Function,Function,$n[2].Boolean]},{a:1,n:"ParseLiteral",t:8,sn:"ParseLiteral",rt:$n[3].Expression},{a:2,n:"ParseLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ParseLiteral$1",rt:$n[3].Expression,p:[$n[2].String]},{a:2,n:"ParseLiteral",is:!0,t:8,pi:[{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ParseLiteral",rt:$n[3].Expression,p:[System.Array.type(Kusto.Language.Parsing.LexicalToken),$n[2].Int32]},{a:1,n:"ParseLogicalAndExpression",t:8,sn:"ParseLogicalAndExpression",rt:$n[3].Expression},{a:1,n:"ParseLogicalOrExpression",t:8,sn:"ParseLogicalOrExpression",rt:$n[3].Expression},{a:1,n:"ParseLookupOperator",t:8,sn:"ParseLookupOperator",rt:$n[3].LookupOperator},{a:1,n:"ParseMakeSeriesByClause",t:8,sn:"ParseMakeSeriesByClause",rt:$n[3].MakeSeriesByClause},{a:1,n:"ParseMakeSeriesExpression",t:8,sn:"ParseMakeSeriesExpression",rt:$n[3].MakeSeriesExpression},{a:1,n:"ParseMakeSeriesFromClause",t:8,sn:"ParseMakeSeriesFromClause",rt:$n[3].MakeSeriesFromClause},{a:1,n:"ParseMakeSeriesFromToStepClause",t:8,sn:"ParseMakeSeriesFromToStepClause",rt:$n[3].MakeSeriesRangeClause},{a:1,n:"ParseMakeSeriesOperator",t:8,sn:"ParseMakeSeriesOperator",rt:$n[3].MakeSeriesOperator},{a:1,n:"ParseMakeSeriesToClause",t:8,sn:"ParseMakeSeriesToClause",rt:$n[3].MakeSeriesToClause},{a:1,n:"ParseMaterializeExpression",t:8,sn:"ParseMaterializeExpression",rt:$n[3].MaterializeExpression},{a:1,n:"ParseMaterializedViewCombineExpression",t:8,sn:"ParseMaterializedViewCombineExpression",rt:$n[3].MaterializedViewCombineExpression},{a:1,n:"ParseMultiplicativeExpression",t:8,sn:"ParseMultiplicativeExpression",rt:$n[3].Expression},{a:1,n:"ParseMvApplyContextIdClause",t:8,sn:"ParseMvApplyContextIdClause",rt:$n[3].MvApplyContextIdClause},{a:1,n:"ParseMvApplyExpression",t:8,sn:"ParseMvApplyExpression",rt:$n[3].MvApplyExpression},{a:1,n:"ParseMvApplyExpressionList",t:8,sn:"ParseMvApplyExpressionList",rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression))},{a:1,n:"ParseMvApplyOperator",t:8,sn:"ParseMvApplyOperator",rt:$n[3].MvApplyOperator},{a:1,n:"ParseMvApplyRowLimitClause",t:8,sn:"ParseMvApplyRowLimitClause",rt:$n[3].MvApplyRowLimitClause},{a:1,n:"ParseMvApplySubqueryExpression",t:8,sn:"ParseMvApplySubqueryExpression",rt:$n[3].MvApplySubqueryExpression},{a:1,n:"ParseMvExpandExpression",t:8,sn:"ParseMvExpandExpression",rt:$n[3].MvExpandExpression},{a:1,n:"ParseMvExpandExpressionList",t:8,sn:"ParseMvExpandExpressionList",rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression))},{a:1,n:"ParseMvExpandOperator",t:8,sn:"ParseMvExpandOperator",rt:$n[3].MvExpandOperator},{a:1,n:"ParseMvExpandRowLimitClause",t:8,sn:"ParseMvExpandRowLimitClause",rt:$n[3].MvExpandRowLimitClause},{a:1,n:"ParseName",t:8,sn:"ParseName",rt:$n[3].Name},{a:1,n:"ParseNameAndOptionalTypeDeclaration",t:8,sn:"ParseNameAndOptionalTypeDeclaration",rt:$n[3].Expression},{a:1,n:"ParseNameAndTypeDeclaration",t:8,sn:"ParseNameAndTypeDeclaration",rt:$n[3].NameAndTypeDeclaration},{a:1,n:"ParseNameDeclaration",t:8,sn:"ParseNameDeclaration",rt:$n[3].NameDeclaration},{a:1,n:"ParseNameEqualsClause",t:8,sn:"ParseNameEqualsClause",rt:$n[3].NameEqualsClause},{a:1,n:"ParseNameReference",t:8,sn:"ParseNameReference",rt:$n[3].NameReference},{a:1,n:"ParseNameReferenceList",t:8,pi:[{n:"fnEndList",pt:Function,ps:0}],sn:"ParseNameReferenceList",rt:$n[3].NameReferenceList,p:[Function]},{a:1,n:"ParseNameReferenceListName",t:8,sn:"ParseNameReferenceListName",rt:$n[3].NameReference},{a:1,n:"ParseNamedExpression",t:8,sn:"ParseNamedExpression",rt:$n[3].Expression},{a:1,n:"ParseNullLiteral",t:8,sn:"ParseNullLiteral",rt:$n[3].Expression},{a:1,n:"ParseNumericLiteral",t:8,sn:"ParseNumericLiteral",rt:$n[3].Expression},{a:1,n:"ParseOptionValueClause",t:8,sn:"ParseOptionValueClause",rt:$n[3].OptionValueClause},{a:1,n:"ParseOrderedExpression",t:8,sn:"ParseOrderedExpression",rt:$n[3].Expression},{a:1,n:"ParseOrderingNullsClause",t:8,sn:"ParseOrderingNullsClause",rt:$n[3].OrderingNullsClause},{a:1,n:"ParsePackExpression",t:8,sn:"ParsePackExpression",rt:$n[3].PackExpression},{a:1,n:"ParseParamType",t:8,sn:"ParseParamType",rt:$n[3].TypeExpression},{a:1,n:"ParseParamTypeExtended",t:8,sn:"ParseParamTypeExtended",rt:$n[3].TypeExpression},{a:1,n:"ParseParenthesizedExpression",t:8,sn:"ParseParenthesizedExpression",rt:$n[3].Expression},{a:1,n:"ParseParseOperator",t:8,sn:"ParseParseOperator",rt:$n[3].ParseOperator},{a:1,n:"ParseParseWhereOperator",t:8,sn:"ParseParseWhereOperator",rt:$n[3].ParseWhereOperator},{a:1,n:"ParseParseWithExpression",t:8,sn:"ParseParseWithExpression",rt:$n[3].SyntaxNode},{a:1,n:"ParsePartitionOperand",t:8,sn:"ParsePartitionOperand",rt:$n[3].PartitionOperand},{a:1,n:"ParsePartitionOperator",t:8,sn:"ParsePartitionOperator",rt:$n[3].PartitionOperator},{a:1,n:"ParsePartitionQuery",t:8,sn:"ParsePartitionQuery",rt:$n[3].PartitionQuery},{a:1,n:"ParsePartitionScopedSubquery",t:8,sn:"ParsePartitionScopedSubquery",rt:$n[3].PartitionSubquery},{a:1,n:"ParsePartitionUnscopedSubquery",t:8,sn:"ParsePartitionUnscopedSubquery",rt:$n[3].PartitionSubquery},{a:1,n:"ParsePathElementSelector",t:8,sn:"ParsePathElementSelector",rt:$n[3].Expression},{a:1,n:"ParsePatternDeclaration",t:8,sn:"ParsePatternDeclaration",rt:$n[3].PatternDeclaration},{a:1,n:"ParsePatternMatch",t:8,sn:"ParsePatternMatch",rt:$n[3].PatternMatch},{a:1,n:"ParsePatternMatchStatementElement",t:8,sn:"ParsePatternMatchStatementElement",rt:$n[3].SeparatedElement$1(Kusto.Language.Syntax.Statement)},{a:1,n:"ParsePatternPathParameter",t:8,sn:"ParsePatternPathParameter",rt:$n[3].PatternPathParameter},{a:1,n:"ParsePatternPathValue",t:8,sn:"ParsePatternPathValue",rt:$n[3].PatternPathValue},{a:1,n:"ParsePatternStatement",t:8,sn:"ParsePatternStatement",rt:$n[3].PatternStatement},{a:1,n:"ParsePipeExpression",t:8,sn:"ParsePipeExpression",rt:$n[3].Expression},{a:1,n:"ParsePipeSubExpression",t:8,sn:"ParsePipeSubExpression",rt:$n[3].Expression},{a:1,n:"ParsePrimaryExpression",t:8,sn:"ParsePrimaryExpression",rt:$n[3].Expression},{a:1,n:"ParsePrimaryPathSelector",t:8,sn:"ParsePrimaryPathSelector",rt:$n[3].Expression},{a:1,n:"ParsePrintOperator",t:8,sn:"ParsePrintOperator",rt:$n[3].PrintOperator},{a:1,n:"ParseProjectAwayOperator",t:8,sn:"ParseProjectAwayOperator",rt:$n[3].ProjectAwayOperator},{a:1,n:"ParseProjectKeepOperator",t:8,sn:"ParseProjectKeepOperator",rt:$n[3].ProjectKeepOperator},{a:1,n:"ParseProjectOperator",t:8,sn:"ParseProjectOperator",rt:$n[3].ProjectOperator},{a:1,n:"ParseProjectRenameOperator",t:8,sn:"ParseProjectRenameOperator",rt:$n[3].ProjectRenameOperator},{a:1,n:"ParseProjectReorderExpression",t:8,sn:"ParseProjectReorderExpression",rt:$n[3].Expression},{a:1,n:"ParseProjectReorderOperator",t:8,sn:"ParseProjectReorderOperator",rt:$n[3].ProjectReorderOperator},{a:1,n:"ParseQuery",t:8,sn:"ParseQuery",rt:$n[3].QueryBlock},{a:2,n:"ParseQuery",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ParseQuery$1",rt:$n[3].QueryBlock,p:[$n[2].String]},{a:2,n:"ParseQuery",is:!0,t:8,pi:[{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ParseQuery",rt:$n[3].QueryBlock,p:[System.Array.type(Kusto.Language.Parsing.LexicalToken),$n[2].Int32]},{a:1,n:"ParseQueryBlockStatement",t:8,sn:"ParseQueryBlockStatement",rt:$n[3].Statement},{a:1,n:"ParseQueryBlockStatementList",t:8,sn:"ParseQueryBlockStatementList",rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))},{a:1,n:"ParseQueryOperator",t:8,sn:"ParseQueryOperator",rt:$n[3].QueryOperator},{a:1,n:"ParseQueryOperatorParameter",t:8,sn:"ParseQueryOperatorParameter",rt:$n[3].NamedParameter},{a:1,n:"ParseQueryOperatorParameter",t:8,pi:[{n:"parameter",pt:$n[4].QueryOperatorParameter,ps:0},{n:"fnEndNameList",dv:null,o:!0,pt:Function,ps:1}],sn:"ParseQueryOperatorParameter$1",rt:$n[3].NamedParameter,p:[$n[4].QueryOperatorParameter,Function]},{a:1,n:"ParseQueryOperatorParameterCommaList",t:8,pi:[{n:"nameToParameterMap",dv:null,o:!0,pt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),ps:0},{n:"fnScanEnd",dv:null,o:!0,pt:Function,ps:1},{n:"knownParametersOnly",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"ParseQueryOperatorParameterCommaList",rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),p:[$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),Function,$n[2].Boolean]},{a:1,n:"ParseQueryOperatorParameterList",t:8,pi:[{n:"nameToParameterMap",dv:null,o:!0,pt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),ps:0},{n:"knownParametersOnly",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],sn:"ParseQueryOperatorParameterList",rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),p:[$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),$n[2].Boolean]},{a:1,n:"ParseQueryOperatorParameterName",t:8,pi:[{n:"knownNamesOnly",dv:!1,o:!0,pt:$n[2].Boolean,ps:0}],sn:"ParseQueryOperatorParameterName",rt:$n[3].SyntaxToken,p:[$n[2].Boolean]},{a:1,n:"ParseQueryOperatorParameterValue",t:8,pi:[{n:"queryParameter",pt:$n[4].QueryOperatorParameter,ps:0},{n:"fnEndNameList",dv:null,o:!0,pt:Function,ps:1}],sn:"ParseQueryOperatorParameterValue",rt:$n[3].Expression,p:[$n[4].QueryOperatorParameter,Function]},{a:1,n:"ParseQueryParametersStatement",t:8,sn:"ParseQueryParametersStatement",rt:$n[3].QueryParametersStatement},{a:1,n:"ParseRangeOperator",t:8,sn:"ParseRangeOperator",rt:$n[3].RangeOperator},{a:1,n:"ParseReduceByOperator",t:8,sn:"ParseReduceByOperator",rt:$n[3].ReduceByOperator},{a:1,n:"ParseReduceByWithClause",t:8,sn:"ParseReduceByWithClause",rt:$n[3].ReduceByWithClause},{a:1,n:"ParseRelationalExpresion",t:8,sn:"ParseRelationalExpresion",rt:$n[3].Expression},{a:1,n:"ParseRenderOperator",t:8,sn:"ParseRenderOperator",rt:$n[3].RenderOperator},{a:1,n:"ParseRenderWithClause",t:8,sn:"ParseRenderWithClause",rt:$n[3].RenderWithClause},{a:1,n:"ParseRequiredExpressionCouple",t:8,sn:"ParseRequiredExpressionCouple",rt:$n[3].ExpressionCouple},{a:1,n:"ParseRequiredInOperatorExpressionList",t:8,sn:"ParseRequiredInOperatorExpressionList",rt:$n[3].ExpressionList},{a:1,n:"ParseRequiredMakeSeriesInRangeClause",t:8,sn:"ParseRequiredMakeSeriesInRangeClause",rt:$n[3].MakeSeriesRangeClause},{a:1,n:"ParseRequiredMakeSeriesStepClause",t:8,sn:"ParseRequiredMakeSeriesStepClause",rt:$n[3].MakeSeriesStepClause},{a:1,n:"ParseRequiredMaterializedViewCombineClause",t:8,pi:[{n:"keywordName",pt:$n[2].String,ps:0}],sn:"ParseRequiredMaterializedViewCombineClause",rt:$n[3].MaterializedViewCombineClause,p:[$n[2].String]},{a:1,n:"ParseRequiredMaterializedViewNameClause",t:8,sn:"ParseRequiredMaterializedViewNameClause",rt:$n[3].MaterializedViewCombineNameClause},{a:1,n:"ParseRequiredOrderingClause",t:8,sn:"ParseRequiredOrderingClause",rt:$n[3].OrderingClause},{a:1,n:"ParseRequiredOrderingNoNullsClause",t:8,sn:"ParseRequiredOrderingNoNullsClause",rt:$n[3].OrderingClause},{a:1,n:"ParseRequiredPatternMatchFunctionBody",t:8,sn:"ParseRequiredPatternMatchFunctionBody",rt:$n[3].FunctionBody},{a:1,n:"ParseRequiredToken",t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"ParseRequiredToken",rt:$n[3].SyntaxToken,p:[$n[3].SyntaxKind]},{a:1,n:"ParseRequiredToken",t:8,pi:[{n:"kinds",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:0}],sn:"ParseRequiredToken$1",rt:$n[3].SyntaxToken,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind)]},{a:1,n:"ParseRequiredToken",t:8,pi:[{n:"texts",pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"ParseRequiredToken$2",rt:$n[3].SyntaxToken,p:[$n[0].IReadOnlyList$1(System.String)]},{a:1,n:"ParseRequiredToken",t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ParseRequiredToken$3",rt:$n[3].SyntaxToken,p:[$n[2].String]},{a:1,n:"ParseRestrictExpression",t:8,sn:"ParseRestrictExpression",rt:$n[3].Expression},{a:1,n:"ParseRestrictStatement",t:8,sn:"ParseRestrictStatement",rt:$n[3].RestrictStatement},{a:1,n:"ParseRootBracketedPathElementSelector",t:8,sn:"ParseRootBracketedPathElementSelector",rt:$n[3].Expression},{a:1,n:"ParseRootPathElementSelector",t:8,sn:"ParseRootPathElementSelector",rt:$n[3].Expression},{a:1,n:"ParseSampleDistinctOperator",t:8,sn:"ParseSampleDistinctOperator",rt:$n[3].SampleDistinctOperator},{a:1,n:"ParseSampleOperator",t:8,sn:"ParseSampleOperator",rt:$n[3].SampleOperator},{a:1,n:"ParseScanAssignment",t:8,sn:"ParseScanAssignment",rt:$n[3].ScanAssignment},{a:1,n:"ParseScanComputationClause",t:8,sn:"ParseScanComputationClause",rt:$n[3].ScanComputationClause},{a:1,n:"ParseScanDeclareClause",t:8,sn:"ParseScanDeclareClause",rt:$n[3].ScanDeclareClause},{a:1,n:"ParseScanOperator",t:8,sn:"ParseScanOperator",rt:$n[3].ScanOperator},{a:1,n:"ParseScanOrderByClause",t:8,sn:"ParseScanOrderByClause",rt:$n[3].ScanOrderByClause},{a:1,n:"ParseScanParitionByClause",t:8,sn:"ParseScanParitionByClause",rt:$n[3].ScanPartitionByClause},{a:1,n:"ParseScanStep",t:8,sn:"ParseScanStep",rt:$n[3].ScanStep},{a:1,n:"ParseSchemaMultipartType",t:8,sn:"ParseSchemaMultipartType",rt:$n[3].SchemaTypeExpression},{a:1,n:"ParseSchemaType",t:8,sn:"ParseSchemaType",rt:$n[3].SchemaTypeExpression},{a:2,n:"ParseSchemaType",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ParseSchemaType$1",rt:$n[3].SchemaTypeExpression,p:[$n[2].String]},{a:2,n:"ParseSchemaType",is:!0,t:8,pi:[{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ParseSchemaType",rt:$n[3].SchemaTypeExpression,p:[System.Array.type(Kusto.Language.Parsing.LexicalToken),$n[2].Int32]},{a:1,n:"ParseSearchOperator",t:8,sn:"ParseSearchOperator",rt:$n[3].SearchOperator},{a:1,n:"ParseSearchPredicate",t:8,sn:"ParseSearchPredicate",rt:$n[3].Expression},{a:1,n:"ParseSerializeOperator",t:8,sn:"ParseSerializeOperator",rt:$n[3].SerializeOperator},{a:1,n:"ParseSetOptionStatement",t:8,sn:"ParseSetOptionStatement",rt:$n[3].SetOptionStatement},{a:1,n:"ParseSignedNumericLiteral",t:8,sn:"ParseSignedNumericLiteral",rt:$n[3].Expression},{a:1,n:"ParseSkippedTokens",t:8,sn:"ParseSkippedTokens",rt:$n[3].SkippedTokens},{a:1,n:"ParseSortOperator",t:8,sn:"ParseSortOperator",rt:$n[3].SortOperator},{a:1,n:"ParseStarExpression",t:8,sn:"ParseStarExpression",rt:$n[3].Expression},{a:1,n:"ParseStringOperation",t:8,sn:"ParseStringOperation",rt:$n[3].Expression},{a:1,n:"ParseStringOrCompoundStringLiteral",t:8,sn:"ParseStringOrCompoundStringLiteral",rt:$n[3].Expression},{a:1,n:"ParseSummarizeByClause",t:8,sn:"ParseSummarizeByClause",rt:$n[3].SummarizeByClause},{a:1,n:"ParseSummarizeOperator",t:8,sn:"ParseSummarizeOperator",rt:$n[3].SummarizeOperator},{a:1,n:"ParseTakeOperator",t:8,sn:"ParseTakeOperator",rt:$n[3].TakeOperator},{a:1,n:"ParseToScalarExpression",t:8,sn:"ParseToScalarExpression",rt:$n[3].Expression},{a:1,n:"ParseToTableExpression",t:8,sn:"ParseToTableExpression",rt:$n[3].Expression},{a:1,n:"ParseToTypeOfClause",t:8,sn:"ParseToTypeOfClause",rt:$n[3].ToTypeOfClause},{a:1,n:"ParseToken",t:8,sn:"ParseToken",rt:$n[3].SyntaxToken},{a:1,n:"ParseToken",t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"ParseToken$1",rt:$n[3].SyntaxToken,p:[$n[3].SyntaxKind]},{a:1,n:"ParseToken",t:8,pi:[{n:"kinds",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:0}],sn:"ParseToken$2",rt:$n[3].SyntaxToken,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind)]},{a:1,n:"ParseToken",t:8,pi:[{n:"texts",pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"ParseToken$3",rt:$n[3].SyntaxToken,p:[$n[0].IReadOnlyList$1(System.String)]},{a:1,n:"ParseToken",t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ParseToken$4",rt:$n[3].SyntaxToken,p:[$n[2].String]},{a:1,n:"ParseTokenLiteral",t:8,pi:[{n:"texts",pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"ParseTokenLiteral",rt:$n[3].Expression,p:[$n[0].IReadOnlyList$1(System.String)]},{a:1,n:"ParseTopHittersByClause",t:8,sn:"ParseTopHittersByClause",rt:$n[3].TopHittersByClause},{a:1,n:"ParseTopHittersOperator",t:8,sn:"ParseTopHittersOperator",rt:$n[3].TopHittersOperator},{a:1,n:"ParseTopNestedClause",t:8,sn:"ParseTopNestedClause",rt:$n[3].TopNestedClause},{a:1,n:"ParseTopNestedOperator",t:8,sn:"ParseTopNestedOperator",rt:$n[3].TopNestedOperator},{a:1,n:"ParseTopNestedWithOthersClause",t:8,sn:"ParseTopNestedWithOthersClause",rt:$n[3].TopNestedWithOthersClause},{a:1,n:"ParseTopOperator",t:8,sn:"ParseTopOperator",rt:$n[3].TopOperator},{a:1,n:"ParseTypeOfElement",t:8,sn:"ParseTypeOfElement",rt:$n[3].Expression},{a:1,n:"ParseTypeOfLiteral",t:8,sn:"ParseTypeOfLiteral",rt:$n[3].Expression},{a:1,n:"ParseTypedColumnNameReference",t:8,sn:"ParseTypedColumnNameReference",rt:$n[3].Expression},{a:1,n:"ParseUnaryPlusOrMinusExpression",t:8,sn:"ParseUnaryPlusOrMinusExpression",rt:$n[3].Expression},{a:1,n:"ParseUnionExpression",t:8,sn:"ParseUnionExpression",rt:$n[3].Expression},{a:1,n:"ParseUnionOperator",t:8,sn:"ParseUnionOperator",rt:$n[3].UnionOperator},{a:1,n:"ParseUnnamedExpression",t:8,sn:"ParseUnnamedExpression",rt:$n[3].Expression},{a:1,n:"ParseWildcardedEntityExpression",t:8,sn:"ParseWildcardedEntityExpression",rt:$n[3].Expression},{a:1,n:"ParseWildcardedEntityPathSelector",t:8,sn:"ParseWildcardedEntityPathSelector",rt:$n[3].Expression},{a:1,n:"ParseWildcardedIdentifier",t:8,sn:"ParseWildcardedIdentifier",rt:$n[3].SyntaxToken},{a:1,n:"ParseWildcardedNameReference",t:8,sn:"ParseWildcardedNameReference",rt:$n[3].NameReference},{a:1,n:"PeekToken",t:8,sn:"PeekToken",rt:$n[6].LexicalToken},{a:1,n:"PeekToken",t:8,pi:[{n:"offset",pt:$n[2].Int32,ps:0}],sn:"PeekToken$1",rt:$n[6].LexicalToken,p:[$n[2].Int32]},{a:1,n:"Reset",t:8,pi:[{n:"resetPoint",pt:$n[2].Int32,ps:0}],sn:"Reset",rt:$n[2].Void,p:[$n[2].Int32]},{a:1,n:"SafeParseUnnamedExpression",t:8,sn:"SafeParseUnnamedExpression",rt:$n[3].Expression},{a:1,n:"ScanAnyQueryOperatorParameterName",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanAnyQueryOperatorParameterName",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanBracketedName",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanBracketedName",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanBracketedWildcardedName",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanBracketedWildcardedName",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanClientParameterName",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanClientParameterName",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanCommonListEnd",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanCommonListEnd",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanCustomListEnd",t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ScanCustomListEnd",rt:$n[2].Boolean,p:[$n[3].SyntaxKind,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanCustomListEnd",t:8,pi:[{n:"kinds",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:0},{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ScanCustomListEnd$1",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanFunctionCallStart",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanFunctionCallStart",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanFunctionDeclarationStart",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanFunctionDeclarationStart",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanIdentifierOrKeywordAsIdentifier",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanIdentifierOrKeywordAsIdentifier",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanKnownQueryOperatorParameterName",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanKnownQueryOperatorParameterName",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanName",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanName",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanNameEqualsClause",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanNameEqualsClause",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanNameList",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanNameList",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanParamType",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanParamType",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanParamTypeExtended",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanParamTypeExtended",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanQueryOperatorParameterNameListEnd",t:8,sn:"ScanQueryOperatorParameterNameListEnd",rt:$n[2].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanSchemaTypeStart",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanSchemaTypeStart",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanSecondaryQueryOperatorParameterNamePart",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanSecondaryQueryOperatorParameterNamePart",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanSignedNumericLiteral",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanSignedNumericLiteral",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanStringOrCompoundStringLiteral",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanStringOrCompoundStringLiteral",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanSummarizeByClauseExpressionListEnd",t:8,sn:"ScanSummarizeByClauseExpressionListEnd",rt:$n[2].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanToken",t:8,pi:[{n:"texts",pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ScanToken",rt:$n[2].Int32,p:[$n[0].IReadOnlyList$1(System.String),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanToken",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ScanToken$1",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanTypeOfScalar",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanTypeOfScalar",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ScanWildcardedName",t:8,pi:[{n:"offset",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"ScanWildcardedName",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"CreateMissingBoolLiteral",is:!0,t:4,rt:Function,sn:"CreateMissingBoolLiteral",ro:!0},{a:1,n:"CreateMissingExpression",is:!0,t:4,rt:Function,sn:"CreateMissingExpression",ro:!0},{a:1,n:"CreateMissingForkExpression",is:!0,t:4,rt:Function,sn:"CreateMissingForkExpression",ro:!0},{a:1,n:"CreateMissingFunctionParameter",is:!0,t:4,rt:Function,sn:"CreateMissingFunctionParameter",ro:!0},{a:1,n:"CreateMissingJsonPair",is:!0,t:4,rt:Function,sn:"CreateMissingJsonPair",ro:!0},{a:1,n:"CreateMissingJsonValue",is:!0,t:4,rt:Function,sn:"CreateMissingJsonValue",ro:!0},{a:1,n:"CreateMissingLongLiteral",is:!0,t:4,rt:Function,sn:"CreateMissingLongLiteral",ro:!0},{a:1,n:"CreateMissingMakeSeriesExpression",is:!0,t:4,rt:Function,sn:"CreateMissingMakeSeriesExpression"},{a:1,n:"CreateMissingMvApplyExpression",is:!0,t:4,rt:Function,sn:"CreateMissingMvApplyExpression",ro:!0},{a:1,n:"CreateMissingMvExpandExpression",is:!0,t:4,rt:Function,sn:"CreateMissingMvExpandExpression",ro:!0},{a:1,n:"CreateMissingNameAndTypeDeclaration",is:!0,t:4,rt:Function,sn:"CreateMissingNameAndTypeDeclaration",ro:!0},{a:1,n:"CreateMissingNameAndTypeDeclarationExpression",is:!0,t:4,rt:Function,sn:"CreateMissingNameAndTypeDeclarationExpression",ro:!0},{a:1,n:"CreateMissingNameDeclaration",is:!0,t:4,rt:Function,sn:"CreateMissingNameDeclaration",ro:!0},{a:1,n:"CreateMissingNameReference",is:!0,t:4,rt:Function,sn:"CreateMissingNameReference",ro:!0},{a:1,n:"CreateMissingNameReferenceExpression",is:!0,t:4,rt:Function,sn:"CreateMissingNameReferenceExpression",ro:!0},{a:1,n:"CreateMissingNamedParameter",is:!0,t:4,rt:Function,sn:"CreateMissingNamedParameter",ro:!0},{a:1,n:"CreateMissingPatternMatch",is:!0,t:4,rt:Function,sn:"CreateMissingPatternMatch",ro:!0},{a:1,n:"CreateMissingQueryOperator",is:!0,t:4,rt:Function,sn:"CreateMissingQueryOperator",ro:!0},{a:1,n:"CreateMissingQueryOperatorExpression",is:!0,t:4,rt:Function,sn:"CreateMissingQueryOperatorExpression",ro:!0},{a:1,n:"CreateMissingScanAssignment",is:!0,t:4,rt:Function,sn:"CreateMissingScanAssignment",ro:!0},{a:1,n:"CreateMissingSchema",is:!0,t:4,rt:Function,sn:"CreateMissingSchema",ro:!0},{a:1,n:"CreateMissingStatement",is:!0,t:4,rt:Function,sn:"CreateMissingStatement",ro:!0},{a:1,n:"CreateMissingStatementElement",is:!0,t:4,rt:Function,sn:"CreateMissingStatementElement",ro:!0},{a:1,n:"CreateMissingStringLiteral",is:!0,t:4,rt:Function,sn:"CreateMissingStringLiteral",ro:!0},{a:1,n:"CreateMissingTopNestedClause",is:!0,t:4,rt:Function,sn:"CreateMissingTopNestedClause",ro:!0},{a:1,n:"CreateMissingType",is:!0,t:4,rt:Function,sn:"CreateMissingType",ro:!0},{a:1,n:"CreateMissingTypeExpression",is:!0,t:4,rt:Function,sn:"CreateMissingTypeExpression",ro:!0},{a:1,n:"CreateMissingValue",is:!0,t:4,rt:Function,sn:"CreateMissingValue",ro:!0},{a:1,n:"FnParseArgument",is:!0,t:4,rt:Function,sn:"FnParseArgument"},{a:1,n:"FnParseDeprecatedRenderProperty",is:!0,t:4,rt:Function,sn:"FnParseDeprecatedRenderProperty",ro:!0},{a:1,n:"FnParseDistinctExpression",is:!0,t:4,rt:Function,sn:"FnParseDistinctExpression",ro:!0},{a:1,n:"FnParseEntityReferenceExpression",is:!0,t:4,rt:Function,sn:"FnParseEntityReferenceExpression",ro:!0},{a:1,n:"FnParseFindOperand",is:!0,t:4,rt:Function,sn:"FnParseFindOperand",ro:!0},{a:1,n:"FnParseFindProjectColumn",is:!0,t:4,rt:Function,sn:"FnParseFindProjectColumn",ro:!0},{a:1,n:"FnParseForkExpression",is:!0,t:4,rt:Function,sn:"FnParseForkExpression",ro:!0},{a:1,n:"FnParseFunctionBodyStatements",is:!0,t:4,rt:Function,sn:"FnParseFunctionBodyStatements",ro:!0},{a:1,n:"FnParseFunctionParameter",is:!0,t:4,rt:Function,sn:"FnParseFunctionParameter",ro:!0},{a:1,n:"FnParseJsonPair",is:!0,t:4,rt:Function,sn:"FnParseJsonPair"},{a:1,n:"FnParseJsonValue",is:!0,t:4,rt:Function,sn:"FnParseJsonValue"},{a:1,n:"FnParseLiteral",is:!0,t:4,rt:Function,sn:"FnParseLiteral"},{a:1,n:"FnParseMakeSeriesExpression",is:!0,t:4,rt:Function,sn:"FnParseMakeSeriesExpression",ro:!0},{a:1,n:"FnParseMvApplyExpression",is:!0,t:4,rt:Function,sn:"FnParseMvApplyExpression",ro:!0},{a:1,n:"FnParseMvExpandExpression",is:!0,t:4,rt:Function,sn:"FnParseMvExpandExpression",ro:!0},{a:1,n:"FnParseNameAndTypeDeclaration",is:!0,t:4,rt:Function,sn:"FnParseNameAndTypeDeclaration"},{a:1,n:"FnParseNameAndTypeDeclarationExpression",is:!0,t:4,rt:Function,sn:"FnParseNameAndTypeDeclarationExpression"},{a:1,n:"FnParseNameDeclaration",is:!0,t:4,rt:Function,sn:"FnParseNameDeclaration"},{a:1,n:"FnParseNameReferenceListName",is:!0,t:4,rt:Function,sn:"FnParseNameReferenceListName"},{a:1,n:"FnParseNamedExpression",is:!0,t:4,rt:Function,sn:"FnParseNamedExpression"},{a:1,n:"FnParseOrderedExpression",is:!0,t:4,rt:Function,sn:"FnParseOrderedExpression",ro:!0},{a:1,n:"FnParseParseWithExpression",is:!0,t:4,rt:Function,sn:"FnParseParseWithExpression",ro:!0},{a:1,n:"FnParsePatternMatch",is:!0,t:4,rt:Function,sn:"FnParsePatternMatch",ro:!0},{a:1,n:"FnParsePatternMatchStatementElement",is:!0,t:4,rt:Function,sn:"FnParsePatternMatchStatementElement",ro:!0},{a:1,n:"FnParseProjectReorderExpression",is:!0,t:4,rt:Function,sn:"FnParseProjectReorderExpression",ro:!0},{a:1,n:"FnParseQueryOperatorParameter",is:!0,t:4,rt:Function,sn:"FnParseQueryOperatorParameter"},{a:1,n:"FnParseRestrictExpression",is:!0,t:4,rt:Function,sn:"FnParseRestrictExpression",ro:!0},{a:1,n:"FnParseScanAssignment",is:!0,t:4,rt:Function,sn:"FnParseScanAssignment",ro:!0},{a:1,n:"FnParseScanStep",is:!0,t:4,rt:Function,sn:"FnParseScanStep",ro:!0},{a:1,n:"FnParseSimpleOrWildcardedNameReferenceExpression",is:!0,t:4,rt:Function,sn:"FnParseSimpleOrWildcardedNameReferenceExpression",ro:!0},{a:1,n:"FnParseTopNestedClause",is:!0,t:4,rt:Function,sn:"FnParseTopNestedClause",ro:!0},{a:1,n:"FnParseTypeColumnNameReference",is:!0,t:4,rt:Function,sn:"FnParseTypeColumnNameReference",ro:!0},{a:1,n:"FnParseTypeOfElement",is:!0,t:4,rt:Function,sn:"FnParseTypeOfElement"},{a:1,n:"FnParseUnionExpression",is:!0,t:4,rt:Function,sn:"FnParseUnionExpression",ro:!0},{a:1,n:"FnParseUnnamedExpression",is:!0,t:4,rt:Function,sn:"FnParseUnnamedExpression"},{a:1,n:"FnRenderDeprecatedParameterNameListEnd",is:!0,t:4,rt:Function,sn:"FnRenderDeprecatedParameterNameListEnd",ro:!0},{a:1,n:"FnScanCommonListEnd",is:!0,t:4,rt:Function,sn:"FnScanCommonListEnd"},{a:1,n:"FnScanFacetExpressionListEnd",is:!0,t:4,rt:Function,sn:"FnScanFacetExpressionListEnd",ro:!0},{a:1,n:"FnScanMakeSeriesExpressionListEnd",is:!0,t:4,rt:Function,sn:"FnScanMakeSeriesExpressionListEnd",ro:!0},{a:1,n:"FnScanMvApplyExpressionListEnd",is:!0,t:4,rt:Function,sn:"FnScanMvApplyExpressionListEnd",ro:!0},{a:1,n:"FnScanMvExpandExpressionListEnd",is:!0,t:4,rt:Function,sn:"FnScanMvExpandExpressionListEnd",ro:!0},{a:1,n:"FnScanQueryOperatorParameterNameListEnd",is:!0,t:4,rt:Function,sn:"FnScanQueryOperatorParameterNameListEnd",ro:!0},{a:1,n:"FnScanScanListEnd",is:!0,t:4,rt:Function,sn:"FnScanScanListEnd",ro:!0},{a:1,n:"FnScanSummarizeByClauseExpressionListEnd",is:!0,t:4,rt:Function,sn:"FnScanSummarizeByClauseExpressionListEnd",ro:!0},{a:1,n:"FnScanSummarizeExpressionListEnd",is:!0,t:4,rt:Function,sn:"FnScanSummarizeExpressionListEnd",ro:!0},{a:1,n:"MaxDepth",is:!0,t:4,rt:$n[2].Int32,sn:"MaxDepth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"NoToken",is:!0,t:4,rt:$n[6].LexicalToken,sn:"NoToken",ro:!0},{a:1,n:"_allowKnownQueryOperatorParametersOnly",t:4,rt:$n[2].Boolean,sn:"_allowKnownQueryOperatorParametersOnly",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_depth",t:4,rt:$n[2].Int32,sn:"_depth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_pos",t:4,rt:$n[2].Int32,sn:"_pos",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_safeGrammar",t:4,rt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),sn:"_safeGrammar"},{a:1,n:"_safeOutput",t:4,rt:$n[0].List$1(System.Object),sn:"_safeOutput"},{a:1,n:"_safeParser",t:4,rt:$n[6].StackSafeParser$1(Kusto.Language.Parsing.LexicalToken),sn:"_safeParser"},{a:1,n:"_source",t:4,rt:$n[6].Source$1(Kusto.Language.Parsing.LexicalToken),sn:"_source",ro:!0},{a:1,n:"_specificNameToQueryOperatorParameterMap",t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"_specificNameToQueryOperatorParameterMap"},{a:1,n:"_tokens",t:4,rt:System.Array.type(Kusto.Language.Parsing.LexicalToken),sn:"_tokens",ro:!0},{a:1,n:"s_asOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_asOperatorParameterMap",ro:!0},{a:1,n:"s_consumeOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_consumeOperatorParameterMap",ro:!0},{a:1,n:"s_dataTableParameters",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_dataTableParameters"},{a:1,n:"s_distinctOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_distinctOperatorParameterMap",ro:!0},{a:1,n:"s_evaluateOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_evaluateOperatorParameterMap",ro:!0},{a:1,n:"s_externalDataKeywords",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),sn:"s_externalDataKeywords",ro:!0},{a:1,n:"s_externalDataWithClauseParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_externalDataWithClauseParameterMap",ro:!0},{a:1,n:"s_filterOperatorKeywords",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),sn:"s_filterOperatorKeywords",ro:!0},{a:1,n:"s_filterOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_filterOperatorParameterMap",ro:!0},{a:1,n:"s_findOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_findOperatorParameterMap",ro:!0},{a:1,n:"s_joinOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_joinOperatorParameterMap",ro:!0},{a:1,n:"s_knownQueryOperaterParameterNames",is:!0,t:4,rt:$n[0].HashSet$1(System.String),sn:"s_knownQueryOperaterParameterNames"},{a:1,n:"s_lookupOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_lookupOperatorParameterMap",ro:!0},{a:1,n:"s_makeSeriesExpressionListEnds",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),sn:"s_makeSeriesExpressionListEnds",ro:!0},{a:1,n:"s_makeSeriesOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_makeSeriesOperatorParameterMap",ro:!0},{a:1,n:"s_multiTokenFunctionNames",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"s_multiTokenFunctionNames",ro:!0},{a:1,n:"s_multiTokenQueryOperatorParameterNames",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"s_multiTokenQueryOperatorParameterNames"},{a:1,n:"s_mvApplyExpressionListEnd",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),sn:"s_mvApplyExpressionListEnd",ro:!0},{a:1,n:"s_mvApplyOperatorParmeterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_mvApplyOperatorParmeterMap",ro:!0},{a:1,n:"s_mvExpandExpressionListEnd",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),sn:"s_mvExpandExpressionListEnd",ro:!0},{a:1,n:"s_mvExpandOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_mvExpandOperatorParameterMap",ro:!0},{a:1,n:"s_nameToDefaultQueryOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_nameToDefaultQueryOperatorParameterMap"},{a:1,n:"s_parseOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_parseOperatorParameterMap",ro:!0},{a:1,n:"s_partitionOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_partitionOperatorParameterMap",ro:!0},{a:1,n:"s_reduceOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_reduceOperatorParameterMap",ro:!0},{a:1,n:"s_reduceOperatorWithParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_reduceOperatorWithParameterMap",ro:!0},{a:1,n:"s_renderDeprecatedParameterNameListEndNames",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"s_renderDeprecatedParameterNameListEndNames",ro:!0},{a:1,n:"s_renderOperatorWithPropertiesMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_renderOperatorWithPropertiesMap",ro:!0},{a:1,n:"s_sampleDistinctOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_sampleDistinctOperatorParameterMap",ro:!0},{a:1,n:"s_sampleOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_sampleOperatorParameterMap",ro:!0},{a:1,n:"s_scanListEnd",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),sn:"s_scanListEnd",ro:!0},{a:1,n:"s_scanOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_scanOperatorParameterMap",ro:!0},{a:1,n:"s_searchOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_searchOperatorParameterMap",ro:!0},{a:1,n:"s_serializeOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_serializeOperatorParameterMap",ro:!0},{a:1,n:"s_sortOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_sortOperatorParameterMap",ro:!0},{a:1,n:"s_summarizeOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_summarizeOperatorParameterMap",ro:!0},{a:1,n:"s_takeOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_takeOperatorParameterMap",ro:!0},{a:1,n:"s_topOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_topOperatorParameterMap",ro:!0},{a:1,n:"s_unionOperatorParameterMap",is:!0,t:4,rt:$n[0].IReadOnlyDictionary$2(System.String,Kusto.Language.QueryOperatorParameter),sn:"s_unionOperatorParameterMap",ro:!0}]}},$n);$m("Kusto.Language.Parsing.ScannerExtensions",function(){return{nested:[$n[6].ScannerExtensions.ReuseableTextSource],att:1048961,a:2,s:!0,m:[{a:2,n:"Matches",is:!0,t:8,pi:[{n:"scanner",pt:$n[6].Parser$1(System.Char),ps:0},{n:"text",pt:$n[2].String,ps:1}],sn:"Matches",rt:$n[2].Boolean,p:[$n[6].Parser$1(System.Char),$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Matches",is:!0,t:8,pi:[{n:"scanner",pt:$n[6].Parser$1(System.Char),ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"offset",pt:$n[2].Int32,ps:2},{n:"length",pt:$n[2].Int32,ps:3}],sn:"Matches$1",rt:$n[2].Boolean,p:[$n[6].Parser$1(System.Char),$n[2].String,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"s_sourcePool",is:!0,t:4,rt:$n[5].ObjectPool$1(Kusto.Language.Parsing.ScannerExtensions.ReuseableTextSource),sn:"s_sourcePool"}]}},$n);$m("Kusto.Language.Parsing.ScannerExtensions.ReuseableTextSource",function(){return{td:$n[6].ScannerExtensions,att:1048835,a:1,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[2].Void},{ov:!0,a:2,n:"Eat",t:8,pi:[{n:"n",pt:$n[2].Int32,ps:0}],sn:"Eat",rt:$n[2].Void,p:[$n[2].Int32]},{a:2,n:"Init",t:8,pi:[{n:"source",pt:$n[2].String,ps:0}],sn:"Init",rt:$n[2].Void,p:[$n[2].String]},{a:2,n:"Init",t:8,pi:[{n:"source",pt:$n[2].String,ps:0},{n:"offset",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"Init$1",rt:$n[2].Void,p:[$n[2].String,$n[2].Int32,$n[2].Int32]},{ov:!0,a:2,n:"IsEnd",t:8,pi:[{n:"n",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"IsEnd",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"Peek",t:8,pi:[{n:"n",dv:0,o:!0,pt:$n[2].Int32,ps:0}],sn:"Peek",rt:$n[2].Char,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Char,String.fromCharCode,System.Char.getHashCode)}},{a:1,n:"end",t:4,rt:$n[2].Int32,sn:"end",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"offset",t:4,rt:$n[2].Int32,sn:"offset",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"source",t:4,rt:$n[2].String,sn:"source"}]}},$n);$m("Kusto.Language.Parsing.SyntaxParsers",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"CommaList",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"missingElement",pt:System.Object,ps:1},{n:"oneOrMore",dv:!1,o:!0,pt:$n[2].Boolean,ps:2},{n:"allowTrailingComma",dv:!1,o:!0,pt:$n[2].Boolean,ps:3},{n:"endKinds",dv:null,o:!0,pt:$n[0].IEnumerable$1(Kusto.Language.Syntax.SyntaxKind),ps:4}],tpc:1,tprm:["TElement"],sn:"CommaList",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(System.Object))),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),System.Object,$n[2].Boolean,$n[2].Boolean,$n[0].IEnumerable$1(Kusto.Language.Syntax.SyntaxKind)]},{a:2,n:"CreateMissingToken",is:!0,t:8,pi:[{n:"kinds",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:0}],sn:"CreateMissingToken$1",rt:$n[3].SyntaxToken,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind)]},{a:2,n:"CreateMissingToken",is:!0,t:8,pi:[{n:"texts",pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"CreateMissingToken$2",rt:$n[3].SyntaxToken,p:[$n[0].IReadOnlyList$1(System.String)]},{a:2,n:"CreateMissingToken",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"diagnostic",dv:null,o:!0,pt:$n[4].Diagnostic,ps:1}],sn:"CreateMissingToken",rt:$n[3].SyntaxToken,p:[$n[3].SyntaxKind,$n[4].Diagnostic]},{a:2,n:"CreateMissingToken",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"diagnostic",dv:null,o:!0,pt:$n[4].Diagnostic,ps:1}],sn:"CreateMissingToken$3",rt:$n[3].SyntaxToken,p:[$n[2].String,$n[4].Diagnostic]},{a:2,n:"Examples",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"values",pt:$n[0].IReadOnlyList$1(System.String),ps:1}],tpc:1,tprm:["TParser"],sn:"Examples",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),$n[0].IReadOnlyList$1(System.String)]},{a:2,n:"Examples",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"values",ip:!0,pt:$n[2].Array.type(System.String),ps:1}],tpc:1,tprm:["TParser"],sn:"Examples$1",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),$n[2].Array.type(System.String)]},{a:1,n:"GetCompletionItems",is:!0,t:8,pi:[{n:"kinds",pt:$n[0].IEnumerable$1(Kusto.Language.Syntax.SyntaxKind),ps:0},{n:"ckind",pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",pt:$n[8].CompletionPriority,ps:2}],sn:"GetCompletionItems",rt:$n[0].IEnumerable$1(Kusto.Language.Editor.CompletionItem),p:[$n[0].IEnumerable$1(Kusto.Language.Syntax.SyntaxKind),$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority]},{a:1,n:"GetCompletionItems",is:!0,t:8,pi:[{n:"texts",pt:$n[0].IEnumerable$1(System.String),ps:0},{n:"ckind",pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",pt:$n[8].CompletionPriority,ps:2}],sn:"GetCompletionItems$1",rt:$n[0].IEnumerable$1(Kusto.Language.Editor.CompletionItem),p:[$n[0].IEnumerable$1(System.String),$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority]},{a:1,n:"GetDefaultCompletionItem",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"ckind",pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",pt:$n[8].CompletionPriority,ps:2},{n:"ctext",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"GetDefaultCompletionItem",rt:$n[8].CompletionItem,p:[$n[3].SyntaxKind,$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority,$n[2].String]},{a:1,n:"GetDefaultCompletionItem",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"ckind",pt:$n[8].CompletionKind,ps:1},{n:"priority",pt:$n[8].CompletionPriority,ps:2},{n:"ctext",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"GetDefaultCompletionItem$1",rt:$n[8].CompletionItem,p:[$n[2].String,$n[8].CompletionKind,$n[8].CompletionPriority,$n[2].String]},{a:1,n:"GetDefaultCompletionItem",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"ckind",pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",pt:$n[8].CompletionPriority,ps:2},{n:"ctext",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"GetDefaultCompletionItem$2",rt:$n[8].CompletionItem,p:[$n[2].String,$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority,$n[2].String]},{a:1,n:"GetDefaultTag",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetDefaultTag",rt:$n[2].String,p:[$n[3].SyntaxKind]},{a:1,n:"GetDefaultTag",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetDefaultTag$1",rt:$n[2].String,p:[$n[2].String]},{a:2,n:"HiddenToken",is:!0,t:8,pi:[{n:"tokenKind",pt:$n[3].SyntaxKind,ps:0}],sn:"HiddenToken",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[3].SyntaxKind]},{a:2,n:"HiddenToken",is:!0,t:8,pi:[{n:"texts",pt:$n[0].IReadOnlyList$1(System.String),ps:0}],sn:"HiddenToken$1",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[0].IReadOnlyList$1(System.String)]},{a:2,n:"HiddenToken",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"HiddenToken$2",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[2].String]},{a:2,n:"List",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"missingElement",dv:null,o:!0,pt:System.Object,ps:1},{n:"oneOrMore",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],tpc:1,tprm:["TElement"],sn:"List",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(System.Object)),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),System.Object,$n[2].Boolean]},{a:2,n:"MakeSeparatedList",is:!0,t:8,pi:[{n:"elements",ip:!0,pt:System.Array.type(Kusto.Language.Syntax.SyntaxElement),ps:0}],tpc:1,tprm:["TElement"],sn:"MakeSeparatedList",rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(System.Object)),p:[System.Array.type(Kusto.Language.Syntax.SyntaxElement)]},{a:2,n:"MakeSeparatedList",is:!0,t:8,pi:[{n:"elements",pt:$n[0].IReadOnlyList$1(System.Object),ps:0}],tpc:1,tprm:["TElement"],sn:"MakeSeparatedList$1",rt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(System.Object)),p:[$n[0].IReadOnlyList$1(System.Object)]},{a:2,n:"MatchText",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"MatchText",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[2].String]},{a:2,n:"MatchesText",is:!0,t:8,pi:[{n:"source",pt:$n[6].Source$1(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"text",pt:$n[2].String,ps:2}],sn:"MatchesText",rt:$n[2].Int32,p:[$n[6].Source$1(Kusto.Language.Parsing.LexicalToken),$n[2].Int32,$n[2].String],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"OneOrMoreCommaList",is:!0,t:8,pi:[{n:"elementParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"missingElement",pt:System.Object,ps:1}],tpc:1,tprm:["TElement"],sn:"OneOrMoreCommaList",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(System.Object))),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),System.Object]},{a:2,n:"ParseAll",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:1}],tpc:1,tprm:["TParser"],sn:"ParseAll",rt:$n[0].IEnumerable$1(System.Object),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),System.Array.type(Kusto.Language.Parsing.LexicalToken)]},{a:2,n:"ParseAll",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"alwaysProduceEndToken",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],tpc:1,tprm:["TParser"],sn:"ParseAll$1",rt:$n[0].IEnumerable$1(System.Object),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),$n[2].String,$n[2].Boolean]},{a:2,n:"ParseFirst",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"tokens",pt:System.Array.type(Kusto.Language.Parsing.LexicalToken),ps:1}],tpc:1,tprm:["TParser"],sn:"ParseFirst$1",rt:System.Object,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),System.Array.type(Kusto.Language.Parsing.LexicalToken)]},{a:2,n:"ParseFirst",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"alwaysProduceEOF",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],tpc:1,tprm:["TParser"],sn:"ParseFirst",rt:System.Object,p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),$n[2].String,$n[2].Boolean]},{a:2,n:"ProduceSyntaxToken",is:!0,t:8,pi:[{n:"source",pt:$n[6].Source$1(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2},{n:"text",pt:$n[2].String,ps:3}],sn:"ProduceSyntaxToken",rt:$n[3].SyntaxToken,p:[$n[6].Source$1(Kusto.Language.Parsing.LexicalToken),$n[2].Int32,$n[2].Int32,$n[2].String]},{a:2,n:"RequiredToken",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"item",pt:$n[8].CompletionItem,ps:1}],sn:"RequiredToken",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[3].SyntaxKind,$n[8].CompletionItem]},{a:2,n:"RequiredToken",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"item",pt:$n[8].CompletionItem,ps:1}],sn:"RequiredToken$4",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[2].String,$n[8].CompletionItem]},{a:2,n:"RequiredToken",is:!0,t:8,pi:[{n:"kinds",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:0},{n:"ckind",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",dv:2,o:!0,pt:$n[8].CompletionPriority,ps:2}],sn:"RequiredToken$2",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority]},{a:2,n:"RequiredToken",is:!0,t:8,pi:[{n:"texts",pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"ckind",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",dv:2,o:!0,pt:$n[8].CompletionPriority,ps:2}],sn:"RequiredToken$3",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[0].IReadOnlyList$1(System.String),$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority]},{a:2,n:"RequiredToken",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"ckind",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",dv:2,o:!0,pt:$n[8].CompletionPriority,ps:2},{n:"ctext",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"RequiredToken$1",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[3].SyntaxKind,$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority,$n[2].String]},{a:2,n:"RequiredToken",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"ckind",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",dv:2,o:!0,pt:$n[8].CompletionPriority,ps:2},{n:"ctext",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"RequiredToken$5",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[2].String,$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority,$n[2].String]},{a:2,n:"ScanFirst",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),ps:0},{n:"text",pt:$n[2].String,ps:1},{n:"alwaysProduceEOF",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"ScanFirst",rt:$n[2].Int32,p:[$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),$n[2].String,$n[2].Boolean],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"SeparatedList",is:!0,t:8,pi:[{n:"primaryElementParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"separatorKind",pt:$n[3].SyntaxKind,ps:1},{n:"missingElement",pt:System.Object,ps:2},{n:"endOfList",dv:null,o:!0,pt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),ps:3},{n:"oneOrMore",dv:!1,o:!0,pt:$n[2].Boolean,ps:4},{n:"allowTrailingSeparator",dv:!1,o:!0,pt:$n[2].Boolean,ps:5}],tpc:1,tprm:["TElement"],sn:"SeparatedList",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(System.Object))),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),$n[3].SyntaxKind,System.Object,$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),$n[2].Boolean,$n[2].Boolean]},{a:2,n:"SeparatedList",is:!0,t:8,pi:[{n:"primaryElementParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"separatorKind",pt:$n[3].SyntaxKind,ps:1},{n:"secondaryElementParser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:2},{n:"missingElement",pt:System.Object,ps:3},{n:"endOfList",dv:null,o:!0,pt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),ps:4},{n:"oneOrMore",dv:!1,o:!0,pt:$n[2].Boolean,ps:5},{n:"allowTrailingSeparator",dv:!1,o:!0,pt:$n[2].Boolean,ps:6}],tpc:1,tprm:["TElement"],sn:"SeparatedList$1",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(System.Object))),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),$n[3].SyntaxKind,$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),System.Object,$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),$n[2].Boolean,$n[2].Boolean]},{a:2,n:"Token",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"item",pt:$n[8].CompletionItem,ps:1}],sn:"Token",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[3].SyntaxKind,$n[8].CompletionItem]},{a:2,n:"Token",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"item",pt:$n[8].CompletionItem,ps:1}],sn:"Token$4",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[2].String,$n[8].CompletionItem]},{a:2,n:"Token",is:!0,t:8,pi:[{n:"kinds",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:0},{n:"ckind",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",dv:2,o:!0,pt:$n[8].CompletionPriority,ps:2}],sn:"Token$2",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority]},{a:2,n:"Token",is:!0,t:8,pi:[{n:"texts",pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"ckind",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",dv:2,o:!0,pt:$n[8].CompletionPriority,ps:2}],sn:"Token$3",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[0].IReadOnlyList$1(System.String),$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority]},{a:2,n:"Token",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0},{n:"ckind",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",dv:2,o:!0,pt:$n[8].CompletionPriority,ps:2},{n:"ctext",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"Token$1",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[3].SyntaxKind,$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority,$n[2].String]},{a:2,n:"Token",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"ckind",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),ps:1},{n:"priority",dv:2,o:!0,pt:$n[8].CompletionPriority,ps:2},{n:"ctext",dv:null,o:!0,pt:$n[2].String,ps:3}],sn:"Token$5",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),p:[$n[2].String,$n[2].Nullable$1(Kusto.Language.Editor.CompletionKind),$n[8].CompletionPriority,$n[2].String]},{a:2,n:"WithCompletion",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"items",ip:!0,pt:System.Array.type(Kusto.Language.Editor.CompletionItem),ps:1}],tpc:1,tprm:["TElement"],sn:"WithCompletion",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),System.Array.type(Kusto.Language.Editor.CompletionItem)]},{a:2,n:"WithCompletionHint",is:!0,t:8,pi:[{n:"parser",pt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),ps:0},{n:"hint",pt:$n[8].CompletionHint,ps:1}],tpc:1,tprm:["TElement"],sn:"WithCompletionHint",rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),p:[$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,System.Object),$n[8].CompletionHint]},{a:2,n:"AnyToken",is:!0,t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),sn:"AnyToken",ro:!0},{a:2,n:"AnyTokenButEnd",is:!0,t:4,rt:$n[6].Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken),sn:"AnyTokenButEnd",ro:!0},{a:2,n:"EndOfCommaList",is:!0,t:4,rt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),sn:"EndOfCommaList"},{a:2,n:"EndOfText",is:!0,t:4,rt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),sn:"EndOfText",ro:!0}]}},$n);$m("Kusto.Language.Parsing.TextFacts",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"GetLineBreakLength",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"GetLineBreakLength",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetLineLength",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"lineStart",pt:$n[2].Int32,ps:1},{n:"includeLineBreak",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"GetLineLength",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32,$n[2].Boolean],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetLineStarts",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"lineStarts",pt:$n[0].List$1(System.Int32),ps:1}],sn:"GetLineStarts",rt:$n[2].Void,p:[$n[2].String,$n[0].List$1(System.Int32)]},{a:2,n:"GetNextLineBreakStart",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"GetNextLineBreakStart",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetNextLineStart",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"GetNextLineStart",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"HasLineBreaks",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"HasLineBreaks",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsBlankLine",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"lineStart",pt:$n[2].Int32,ps:1}],sn:"IsBlankLine",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsDigit",is:!0,t:8,pi:[{n:"ch",pt:$n[2].Char,ps:0}],sn:"IsDigit",rt:$n[2].Boolean,p:[$n[2].Char],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsHexDigit",is:!0,t:8,pi:[{n:"ch",pt:$n[2].Char,ps:0}],sn:"IsHexDigit",rt:$n[2].Boolean,p:[$n[2].Char],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsLetter",is:!0,t:8,pi:[{n:"ch",pt:$n[2].Char,ps:0}],sn:"IsLetter",rt:$n[2].Boolean,p:[$n[2].Char],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsLineBreakStart",is:!0,t:8,pi:[{n:"ch",pt:$n[2].Char,ps:0}],sn:"IsLineBreakStart",rt:$n[2].Boolean,p:[$n[2].Char],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsWhitespace",is:!0,t:8,pi:[{n:"ch",pt:$n[2].Char,ps:0}],sn:"IsWhitespace",rt:$n[2].Boolean,p:[$n[2].Char],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsWhitespaceOnly",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"IsWhitespaceOnly",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsWhitespaceOnly",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"IsWhitespaceOnly$1",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TrimEnd",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"TrimEnd",rt:$n[2].Int32,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"TrimEnd",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"TrimEnd$1",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"TryGetLineAndOffset",is:!0,t:8,pi:[{n:"lineStarts",pt:$n[0].List$1(System.Int32),ps:0},{n:"position",pt:$n[2].Int32,ps:1},{n:"line",out:!0,pt:$n[2].Int32,ps:2},{n:"lineOffset",out:!0,pt:$n[2].Int32,ps:3}],sn:"TryGetLineAndOffset",rt:$n[2].Boolean,p:[$n[0].List$1(System.Int32),$n[2].Int32,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryGetLineAndOffset",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"position",pt:$n[2].Int32,ps:1},{n:"line",out:!0,pt:$n[2].Int32,ps:2},{n:"lineOffset",out:!0,pt:$n[2].Int32,ps:3}],sn:"TryGetLineAndOffset$1",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryGetLineStart",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"line",pt:$n[2].Int32,ps:1},{n:"lineStart",out:!0,pt:$n[2].Int32,ps:2}],sn:"TryGetLineStart",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryGetPosition",is:!0,t:8,pi:[{n:"lineStarts",pt:$n[0].IReadOnlyList$1(System.Int32),ps:0},{n:"line",pt:$n[2].Int32,ps:1},{n:"lineOffset",pt:$n[2].Int32,ps:2},{n:"position",out:!0,pt:$n[2].Int32,ps:3}],sn:"TryGetPosition",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(System.Int32),$n[2].Int32,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryGetPosition",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"line",pt:$n[2].Int32,ps:1},{n:"lineOffset",pt:$n[2].Int32,ps:2},{n:"position",out:!0,pt:$n[2].Int32,ps:3}],sn:"TryGetPosition$1",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"s_lineStarts",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(System.Int32)),sn:"s_lineStarts",ro:!0}]}},$n);$m("Kusto.Language.Parsing.TokenParser",function(){return{nested:[$n[6].TokenParser.TokenInfo],att:1048577,a:2,m:[{a:1,n:".ctor",t:1,sn:"ctor"},{a:1,n:".ctor",t:1,p:[$n[5].StringTable],pi:[{n:"stringTable",pt:$n[5].StringTable,ps:0}],sn:"$ctor1"},{a:1,n:"EndCheckedToken",is:!0,t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"kind",pt:$n[3].SyntaxKind,ps:1},{n:"trivia",pt:$n[2].String,ps:2},{n:"text",pt:$n[2].String,ps:3},{n:"expectedEndChars",pt:$n[2].String,ps:4}],sn:"EndCheckedToken",rt:$n[6].LexicalToken,p:[$n[2].Int32,$n[3].SyntaxKind,$n[2].String,$n[2].String,$n[2].String]},{a:1,n:"GetGooLiteralTokenKind",is:!0,t:8,pi:[{n:"keywordKind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetGooLiteralTokenKind",rt:$n[3].SyntaxKind,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:1,n:"GetNextLineStart",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"GetNextLineStart",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"GetPunctuationTokenInfo",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"GetPunctuationTokenInfo",rt:$n[6].TokenParser.TokenInfo,p:[$n[2].String,$n[2].Int32]},{a:1,n:"GetStringLiteralQuote",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"GetStringLiteralQuote",rt:$n[2].String,p:[$n[2].String,$n[2].Int32]},{a:1,n:"GetSubstring",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"len",pt:$n[2].Int32,ps:2},{n:"intern",dv:!0,o:!0,pt:$n[2].Boolean,ps:3}],sn:"GetSubstring",rt:$n[2].String,p:[$n[2].String,$n[2].Int32,$n[2].Int32,$n[2].Boolean]},{a:1,n:"IsIdentifierChar",is:!0,t:8,pi:[{n:"ch",pt:$n[2].Char,ps:0}],sn:"IsIdentifierChar",rt:$n[2].Boolean,p:[$n[2].Char],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsIdentifierStartChar",is:!0,t:8,pi:[{n:"ch",pt:$n[2].Char,ps:0}],sn:"IsIdentifierStartChar",rt:$n[2].Boolean,p:[$n[2].Char],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Matches",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"match",pt:$n[2].String,ps:2}],sn:"Matches",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Parse",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"alwaysProduceEndToken",pt:$n[2].Boolean,ps:2}],sn:"Parse",rt:$n[6].LexicalToken,p:[$n[2].String,$n[2].Int32,$n[2].Boolean]},{a:1,n:"ParseStringLiteral",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"trivia",pt:$n[2].String,ps:2}],sn:"ParseStringLiteral",rt:$n[6].LexicalToken,p:[$n[2].String,$n[2].Int32,$n[2].String]},{a:2,n:"ParseToken",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1},{n:"alwaysProduceEndToken",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"ParseToken",rt:$n[6].LexicalToken,p:[$n[2].String,$n[2].Int32,$n[2].Boolean]},{a:2,n:"ParseTokens",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"alwaysProduceEndToken",dv:!1,o:!0,pt:$n[2].Boolean,ps:1}],sn:"ParseTokens",rt:System.Array.type(Kusto.Language.Parsing.LexicalToken),p:[$n[2].String,$n[2].Boolean]},{a:2,n:"ParseTokens",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"tokens",pt:$n[0].List$1(Kusto.Language.Parsing.LexicalToken),ps:1},{n:"alwaysProduceEndToken",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"ParseTokens$1",rt:$n[2].Void,p:[$n[2].String,$n[0].List$1(Kusto.Language.Parsing.LexicalToken),$n[2].Boolean]},{a:2,n:"ParseTrivia",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ParseTrivia",rt:$n[2].String,p:[$n[2].String,$n[2].Int32]},{a:1,n:"Peek",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"Peek",rt:$n[2].Char,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Char,String.fromCharCode,System.Char.getHashCode)}},{a:2,n:"ScanClientParameter",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ScanClientParameter",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanDigits",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanDigits",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanEightHexDigits",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanEightHexDigits",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanExponent",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanExponent",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanFourHexDigits",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanFourHexDigits",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanGoo",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanGoo",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanHexIntegerLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanHexIntegerLiteral",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ScanIdentifier",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ScanIdentifier",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanLongLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanLongLiteral",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanOctalCode",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanOctalCode",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanRealLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanRealLiteral",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanSpaces",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanSpaces",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanStringEscape",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanStringEscape",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ScanStringLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ScanStringLiteral",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanStringLiteralContent",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"quote",pt:$n[2].Char,ps:2},{n:"isVerbatim",pt:$n[2].Boolean,ps:3}],sn:"ScanStringLiteralContent",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32,$n[2].Char,$n[2].Boolean],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanTimespanLiteral",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanTimespanLiteral",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanTrivia",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanTrivia",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanTwoHexDigits",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanTwoHexDigits",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ScanWhitespace",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"ScanWhitespace",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"AsteriskTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"AsteriskTokenInfo",ro:!0},{a:1,n:"AtTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"AtTokenInfo",ro:!0},{a:1,n:"BangEqualTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"BangEqualTokenInfo",ro:!0},{a:1,n:"BangTildeTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"BangTildeTokenInfo",ro:!0},{a:1,n:"BarTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"BarTokenInfo",ro:!0},{a:1,n:"CloseBraceTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"CloseBraceTokenInfo",ro:!0},{a:1,n:"CloseBracketTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"CloseBracketTokenInfo",ro:!0},{a:1,n:"CloseParenTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"CloseParenTokenInfo",ro:!0},{a:1,n:"ColonTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"ColonTokenInfo",ro:!0},{a:1,n:"CommaTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"CommaTokenInfo",ro:!0},{a:1,n:"Default",is:!0,t:4,rt:$n[6].TokenParser,sn:"Default",ro:!0},{a:1,n:"DotDotTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"DotDotTokenInfo",ro:!0},{a:1,n:"DotTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"DotTokenInfo",ro:!0},{a:1,n:"EqualEqualTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"EqualEqualTokenInfo",ro:!0},{a:1,n:"EqualTildeTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"EqualTildeTokenInfo",ro:!0},{a:1,n:"EqualTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"EqualTokenInfo",ro:!0},{a:1,n:"FatArrowTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"FatArrowTokenInfo",ro:!0},{a:1,n:"GreaterThanOrEqualTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"GreaterThanOrEqualTokenInfo",ro:!0},{a:1,n:"GreaterThanTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"GreaterThanTokenInfo",ro:!0},{a:1,n:"LessThanBarTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"LessThanBarTokenInfo",ro:!0},{a:1,n:"LessThanGreaterThanTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"LessThanGreaterThanTokenInfo",ro:!0},{a:1,n:"LessThanOrEqualTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"LessThanOrEqualTokenInfo",ro:!0},{a:1,n:"LessThanTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"LessThanTokenInfo",ro:!0},{a:1,n:"MinusTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"MinusTokenInfo",ro:!0},{a:1,n:"OpenBraceTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"OpenBraceTokenInfo",ro:!0},{a:1,n:"OpenBracketTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"OpenBracketTokenInfo",ro:!0},{a:1,n:"OpenParenTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"OpenParenTokenInfo",ro:!0},{a:1,n:"PercentTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"PercentTokenInfo",ro:!0},{a:1,n:"PlusTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"PlusTokenInfo",ro:!0},{a:1,n:"QuestionTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"QuestionTokenInfo",ro:!0},{a:1,n:"SemicolonTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"SemicolonTokenInfo",ro:!0},{a:1,n:"SlashTokenInfo",is:!0,t:4,rt:$n[6].TokenParser.TokenInfo,sn:"SlashTokenInfo",ro:!0},{a:1,n:"TimespanSuffixMap",is:!0,t:4,rt:$n[5].SubstringMap$1(System.Boolean),sn:"TimespanSuffixMap",ro:!0},{a:1,n:"TimespanSuffixes",is:!0,t:4,rt:$n[2].Array.type(System.String),sn:"TimespanSuffixes",ro:!0},{a:1,n:"_stringTable",t:4,rt:$n[5].StringTable,sn:"_stringTable",ro:!0},{a:1,n:"s_booleanValues",is:!0,t:4,rt:$n[2].Array.type(System.String),sn:"s_booleanValues",ro:!0},{a:1,n:"s_kindToTokenInfoMap",is:!0,t:4,rt:$n[0].Dictionary$2(Kusto.Language.Syntax.SyntaxKind,Kusto.Language.Parsing.TokenParser.TokenInfo),sn:"s_kindToTokenInfoMap",ro:!0},{a:1,n:"s_literalValueMap",is:!0,t:4,rt:$n[5].SubstringMap$1(Kusto.Language.Syntax.SyntaxKind),sn:"s_literalValueMap",ro:!0},{a:1,n:"s_spaces",is:!0,t:4,rt:$n[2].Array.type(System.String),sn:"s_spaces",ro:!0},{a:1,n:"s_tokenInfoSubstringMap",is:!0,t:4,rt:$n[5].SubstringMap$1(Kusto.Language.Parsing.TokenParser.TokenInfo),sn:"s_tokenInfoSubstringMap",ro:!0}]}},$n);$m("Kusto.Language.Parsing.TokenParser.TokenInfo",function(){return{td:$n[6].TokenParser,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[3].SyntaxKind],pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"ctor"},{a:2,n:"GetToken",t:8,pi:[{n:"trivia",pt:$n[2].String,ps:0}],sn:"GetToken",rt:$n[6].LexicalToken,p:[$n[2].String]},{a:2,n:"Kind",t:4,rt:$n[3].SyntaxKind,sn:"Kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))}},{a:2,n:"SingleWhitespaceToken",t:4,rt:$n[6].LexicalToken,sn:"SingleWhitespaceToken",ro:!0},{a:2,n:"Text",t:4,rt:$n[2].String,sn:"Text",ro:!0},{a:2,n:"ZeroTriviaToken",t:4,rt:$n[6].LexicalToken,sn:"ZeroTriviaToken",ro:!0}]}},$n);$m("Kusto.Language.Editor.AnalyzerInfo",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"diagnostics",pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:1}],sn:"ctor"},{a:2,n:"Diagnostics",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),g:{a:2,n:"get_Diagnostics",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),fg:"Diagnostics"},fn:"Diagnostics"},{a:2,n:"Name",t:16,rt:$n[2].String,g:{a:2,n:"get_Name",t:8,rt:$n[2].String,fg:"Name"},fn:"Name"},{a:1,backing:!0,n:"<Diagnostics>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"Diagnostics"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[2].String,sn:"Name"}]}},$n);$m("Kusto.Language.Editor.BrackettingStyle",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Diagonal",is:!0,t:4,rt:$n[8].BrackettingStyle,sn:"Diagonal",box:function($v){return Bridge.box($v,Kusto.Language.Editor.BrackettingStyle,System.Enum.toStringFn(Kusto.Language.Editor.BrackettingStyle))}},{a:2,n:"None",is:!0,t:4,rt:$n[8].BrackettingStyle,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Editor.BrackettingStyle,System.Enum.toStringFn(Kusto.Language.Editor.BrackettingStyle))}},{a:2,n:"Vertical",is:!0,t:4,rt:$n[8].BrackettingStyle,sn:"Vertical",box:function($v){return Bridge.box($v,Kusto.Language.Editor.BrackettingStyle,System.Enum.toStringFn(Kusto.Language.Editor.BrackettingStyle))}}]}},$n);$m("Kusto.Language.Editor.ClassificationKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ClientParameter",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"ClientParameter",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Column",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Column",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Command",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Command",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Comment",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Comment",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Database",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Database",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Directive",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Directive",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Function",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Function",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Identifier",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Identifier",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Keyword",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Literal",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Literal",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"MaterializedView",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"MaterializedView",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"MathOperator",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"MathOperator",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Option",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Option",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Parameter",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Parameter",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"PlainText",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"PlainText",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Punctuation",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Punctuation",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"QueryOperator",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"QueryOperator",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"QueryParameter",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"QueryParameter",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"ScalarOperator",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"ScalarOperator",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"SchemaMember",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"SchemaMember",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"SignatureParameter",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"SignatureParameter",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"StringLiteral",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"StringLiteral",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Table",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Table",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Type",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Type",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"Variable",is:!0,t:4,rt:$n[8].ClassificationKind,sn:"Variable",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}}]}},$n);$m("Kusto.Language.Editor.ClassificationInfo",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(Kusto.Language.Editor.ClassifiedRange)],pi:[{n:"classifications",pt:$n[0].IEnumerable$1(Kusto.Language.Editor.ClassifiedRange),ps:0}],sn:"ctor"},{a:2,n:"Classifications",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange),g:{a:2,n:"get_Classifications",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange),fg:"Classifications"},fn:"Classifications"},{a:2,n:"Empty",is:!0,t:4,rt:$n[8].ClassificationInfo,sn:"Empty",ro:!0},{a:1,backing:!0,n:"<Classifications>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange),sn:"Classifications"}]}},$n);$m("Kusto.Language.Editor.ClassifiedRange",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[8].ClassificationKind,$n[2].Int32,$n[2].Int32],pi:[{n:"kind",pt:$n[8].ClassificationKind,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"ctor"},{a:2,n:"End",t:16,rt:$n[2].Int32,g:{a:2,n:"get_End",t:8,rt:$n[2].Int32,fg:"End",box:function($v){return Bridge.box($v,System.Int32)}},fn:"End"},{a:2,n:"Kind",t:16,rt:$n[8].ClassificationKind,g:{a:2,n:"get_Kind",t:8,rt:$n[8].ClassificationKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},fn:"Kind"},{a:2,n:"Length",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Length",t:8,rt:$n[2].Int32,fg:"Length",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Length"},{a:2,n:"Start",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Start",t:8,rt:$n[2].Int32,fg:"Start",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Start"},{a:1,backing:!0,n:"<Kind>k__BackingField",t:4,rt:$n[8].ClassificationKind,sn:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:1,backing:!0,n:"<Length>k__BackingField",t:4,rt:$n[2].Int32,sn:"Length",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Start>k__BackingField",t:4,rt:$n[2].Int32,sn:"Start",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Editor.ClientParameter",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].Int32,$n[2].Int32],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"position",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"ctor"},{a:2,n:"Name",t:16,rt:$n[2].String,g:{a:2,n:"get_Name",t:8,rt:$n[2].String,fg:"Name"},fn:"Name"},{a:1,backing:!0,n:"<Name>k__BackingField",t:4,rt:$n[2].String,sn:"Name"}]}},$n);$m("Kusto.Language.Editor.ClusterReference",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].Int32,$n[2].Int32],pi:[{n:"cluster",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2}],sn:"ctor"},{a:2,n:"Cluster",t:16,rt:$n[2].String,g:{a:2,n:"get_Cluster",t:8,rt:$n[2].String,fg:"Cluster"},fn:"Cluster"},{a:1,backing:!0,n:"<Cluster>k__BackingField",t:4,rt:$n[2].String,sn:"Cluster"}]}},$n);$m("Kusto.Language.Editor.CodeBlock",function(){return{att:1048833,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[2].Int32,$n[8].CodeService],pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"codeService",pt:$n[8].CodeService,ps:1}],sn:"ctor"},{a:4,n:"WithStart",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0}],sn:"WithStart",rt:$n[8].CodeBlock,p:[$n[2].Int32]},{a:2,n:"End",t:16,rt:$n[2].Int32,g:{a:2,n:"get_End",t:8,rt:$n[2].Int32,fg:"End",box:function($v){return Bridge.box($v,System.Int32)}},fn:"End"},{a:2,n:"Kind",t:16,rt:$n[2].String,g:{a:2,n:"get_Kind",t:8,rt:$n[2].String,fg:"Kind"},fn:"Kind"},{a:2,n:"Length",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Length",t:8,rt:$n[2].Int32,fg:"Length",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Length"},{a:2,n:"Service",t:16,rt:$n[8].CodeService,g:{a:2,n:"get_Service",t:8,rt:$n[8].CodeService,fg:"Service"},fn:"Service"},{a:2,n:"Start",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Start",t:8,rt:$n[2].Int32,fg:"Start",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Start"},{a:2,n:"Text",t:16,rt:$n[2].String,g:{a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:1,n:"_codeService",t:4,rt:$n[8].OffsetCodeService,sn:"_codeService",ro:!0},{a:1,backing:!0,n:"<Start>k__BackingField",t:4,rt:$n[2].Int32,sn:"Start",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Editor.CodeKinds",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Command",is:!0,t:4,rt:$n[2].String,sn:"Command"},{a:2,n:"Directive",is:!0,t:4,rt:$n[2].String,sn:"Directive"},{a:2,n:"Query",is:!0,t:4,rt:$n[2].String,sn:"Query"},{a:2,n:"Unknown",is:!0,t:4,rt:$n[2].String,sn:"Unknown"}]}},$n);$m("Kusto.Language.Editor.CodeScript",function(){return{att:1048833,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[2].String,$n[0].List$1(System.Int32),$n[0].List$1(Kusto.Language.Editor.CodeBlock),$n[8].CodeServiceFactory],pi:[{n:"text",pt:$n[2].String,ps:0},{n:"lineStarts",pt:$n[0].List$1(System.Int32),ps:1},{n:"blocks",pt:$n[0].List$1(Kusto.Language.Editor.CodeBlock),ps:2},{n:"factory",pt:$n[8].CodeServiceFactory,ps:3}],sn:"ctor"},{a:1,n:"CreateScript",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"factory",pt:$n[8].CodeServiceFactory,ps:1},{n:"existingBlocks",dv:null,o:!0,pt:$n[0].IEnumerable$1(Kusto.Language.Editor.CodeBlock),ps:2}],sn:"CreateScript",rt:$n[8].CodeScript,p:[$n[2].String,$n[8].CodeServiceFactory,$n[0].IEnumerable$1(Kusto.Language.Editor.CodeBlock)]},{a:2,n:"From",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"factory",pt:$n[8].CodeServiceFactory,ps:1}],sn:"From",rt:$n[8].CodeScript,p:[$n[2].String,$n[8].CodeServiceFactory]},{a:2,n:"From",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"globals",pt:$n[4].GlobalState,ps:1}],sn:"From$1",rt:$n[8].CodeScript,p:[$n[2].String,$n[4].GlobalState]},{a:2,n:"GetBlockAtPosition",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetBlockAtPosition",rt:$n[8].CodeBlock,p:[$n[2].Int32]},{a:1,n:"GetStarts",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"lineStarts",pt:$n[0].List$1(System.Int32),ps:1},{n:"blockStarts",pt:$n[0].List$1(System.Int32),ps:2}],sn:"GetStarts",rt:$n[2].Void,p:[$n[2].String,$n[0].List$1(System.Int32),$n[0].List$1(System.Int32)]},{a:2,n:"TryGetLineAndOffset",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"line",out:!0,pt:$n[2].Int32,ps:1},{n:"lineOffset",out:!0,pt:$n[2].Int32,ps:2}],sn:"TryGetLineAndOffset",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryGetTextPosition",t:8,pi:[{n:"line",pt:$n[2].Int32,ps:0},{n:"lineOffset",pt:$n[2].Int32,ps:1},{n:"position",out:!0,pt:$n[2].Int32,ps:2}],sn:"TryGetTextPosition",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].Int32,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"WithFactory",t:8,pi:[{n:"factory",pt:$n[8].CodeServiceFactory,ps:0}],sn:"WithFactory",rt:$n[8].CodeScript,p:[$n[8].CodeServiceFactory]},{a:2,n:"WithGlobals",t:8,pi:[{n:"newGlobals",pt:$n[4].GlobalState,ps:0}],sn:"WithGlobals",rt:$n[8].CodeScript,p:[$n[4].GlobalState]},{a:2,n:"WithText",t:8,pi:[{n:"newText",pt:$n[2].String,ps:0}],sn:"WithText",rt:$n[8].CodeScript,p:[$n[2].String]},{a:2,n:"WithTextAndFactory",t:8,pi:[{n:"newText",pt:$n[2].String,ps:0},{n:"factory",pt:$n[8].CodeServiceFactory,ps:1}],sn:"WithTextAndFactory",rt:$n[8].CodeScript,p:[$n[2].String,$n[8].CodeServiceFactory]},{a:2,n:"Blocks",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.CodeBlock),g:{a:2,n:"get_Blocks",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.CodeBlock),fg:"Blocks"},fn:"Blocks"},{a:2,n:"Factory",t:16,rt:$n[8].CodeServiceFactory,g:{a:2,n:"get_Factory",t:8,rt:$n[8].CodeServiceFactory,fg:"Factory"},fn:"Factory"},{a:2,n:"Globals",t:16,rt:$n[4].GlobalState,g:{a:2,n:"get_Globals",t:8,rt:$n[4].GlobalState,fg:"Globals"},fn:"Globals"},{a:2,n:"Text",t:16,rt:$n[2].String,g:{a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:1,n:"blocks",t:4,rt:$n[0].List$1(Kusto.Language.Editor.CodeBlock),sn:"blocks",ro:!0},{a:1,n:"lineStarts",t:4,rt:$n[0].List$1(System.Int32),sn:"lineStarts",ro:!0},{a:1,backing:!0,n:"<Factory>k__BackingField",t:4,rt:$n[8].CodeServiceFactory,sn:"Factory"},{a:1,backing:!0,n:"<Text>k__BackingField",t:4,rt:$n[2].String,sn:"Text"}]}},$n);$m("Kusto.Language.Editor.CodeService",function(){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"GetAnalyzerDiagnostics",t:8,pi:[{n:"analyzers",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"waitForAnalysis",dv:!0,o:!0,pt:$n[2].Boolean,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetAnalyzerDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[0].IReadOnlyList$1(System.String),$n[2].Boolean,$n[5].CancellationToken]},{ab:!0,a:2,n:"GetAnalyzers",t:8,sn:"GetAnalyzers",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.AnalyzerInfo)},{ab:!0,a:2,n:"GetClassifications",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1},{n:"clipToRange",dv:!0,o:!0,pt:$n[2].Boolean,ps:2},{n:"waitForAnalysis",dv:!0,o:!0,pt:$n[2].Boolean,ps:3},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:4}],sn:"GetClassifications",rt:$n[8].ClassificationInfo,p:[$n[2].Int32,$n[2].Int32,$n[2].Boolean,$n[2].Boolean,$n[5].CancellationToken]},{ab:!0,a:2,n:"GetClientParameters",t:8,sn:"GetClientParameters",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClientParameter)},{ab:!0,a:2,n:"GetClusterReferences",t:8,pi:[{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:0}],sn:"GetClusterReferences",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClusterReference),p:[$n[5].CancellationToken]},{ab:!0,a:2,n:"GetCompletionItems",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",dv:null,o:!0,pt:$n[8].CompletionOptions,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetCompletionItems",rt:$n[8].CompletionInfo,p:[$n[2].Int32,$n[8].CompletionOptions,$n[5].CancellationToken]},{ab:!0,a:2,n:"GetDatabaseReferences",t:8,pi:[{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:0}],sn:"GetDatabaseReferences",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.DatabaseReference),p:[$n[5].CancellationToken]},{ab:!0,a:2,n:"GetDiagnostics",t:8,pi:[{n:"waitForAnalysis",dv:!0,o:!0,pt:$n[2].Boolean,ps:0},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:1}],sn:"GetDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[2].Boolean,$n[5].CancellationToken]},{ab:!0,a:2,n:"GetElement",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:1}],sn:"GetElement",rt:$n[8].TextRange,p:[$n[2].Int32,$n[5].CancellationToken]},{ab:!0,a:2,n:"GetFormattedText",t:8,pi:[{n:"options",dv:null,o:!0,pt:$n[8].FormattingOptions,ps:0},{n:"cursorPosition",dv:0,o:!0,pt:$n[2].Int32,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetFormattedText",rt:$n[8].FormattedText,p:[$n[8].FormattingOptions,$n[2].Int32,$n[5].CancellationToken]},{ab:!0,a:2,n:"GetMinimalText",t:8,pi:[{n:"kind",pt:$n[8].MinimalTextKind,ps:0},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:1}],sn:"GetMinimalText",rt:$n[2].String,p:[$n[8].MinimalTextKind,$n[5].CancellationToken]},{ab:!0,a:2,n:"GetOutlines",t:8,pi:[{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:0}],sn:"GetOutlines",rt:$n[8].OutlineInfo,p:[$n[5].CancellationToken]},{ab:!0,a:2,n:"GetQuickInfo",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",dv:null,o:!0,pt:$n[8].QuickInfoOptions,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetQuickInfo",rt:$n[8].QuickInfo,p:[$n[2].Int32,$n[8].QuickInfoOptions,$n[5].CancellationToken]},{ab:!0,a:2,n:"GetRelatedElements",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",dv:0,o:!0,pt:$n[8].FindRelatedOptions,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetRelatedElements",rt:$n[8].RelatedInfo,p:[$n[2].Int32,$n[8].FindRelatedOptions,$n[5].CancellationToken]},{ab:!0,a:2,n:"IsFeatureSupported",t:8,pi:[{n:"feature",pt:$n[2].String,ps:0},{n:"position",dv:-1,o:!0,pt:$n[2].Int32,ps:1}],sn:"IsFeatureSupported",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:2,n:"ShouldAutoComplete",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"key",pt:$n[2].Char,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"ShouldAutoComplete",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].Char,$n[5].CancellationToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:2,n:"TryGetCachedAnalyzerDiagnostics",t:8,pi:[{n:"diagnostics",out:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"TryGetCachedAnalyzerDiagnostics",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:2,n:"TryGetCachedDiagnostics",t:8,pi:[{n:"diagnostics",out:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"TryGetCachedDiagnostics",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{v:!0,a:2,n:"Kind",t:16,rt:$n[2].String,g:{v:!0,a:2,n:"get_Kind",t:8,rt:$n[2].String,fg:"Kind"},fn:"Kind"},{v:!0,a:2,n:"Text",t:16,rt:$n[2].String,g:{v:!0,a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"}]}},$n);$m("Kusto.Language.Editor.MinimalTextKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"MinimizeWhitespaceAndRemoveComments",is:!0,t:4,rt:$n[8].MinimalTextKind,sn:"MinimizeWhitespaceAndRemoveComments",box:function($v){return Bridge.box($v,Kusto.Language.Editor.MinimalTextKind,System.Enum.toStringFn(Kusto.Language.Editor.MinimalTextKind))}},{a:2,n:"RemoveLeadingWhitespaceAndComments",is:!0,t:4,rt:$n[8].MinimalTextKind,sn:"RemoveLeadingWhitespaceAndComments",box:function($v){return Bridge.box($v,Kusto.Language.Editor.MinimalTextKind,System.Enum.toStringFn(Kusto.Language.Editor.MinimalTextKind))}},{a:2,n:"SingleLine",is:!0,t:4,rt:$n[8].MinimalTextKind,sn:"SingleLine",box:function($v){return Bridge.box($v,Kusto.Language.Editor.MinimalTextKind,System.Enum.toStringFn(Kusto.Language.Editor.MinimalTextKind))}}]}},$n);$m("Kusto.Language.Editor.CodeServiceFactory",function(){return{nested:[$n[8].CodeServiceFactory.AggregateCodeServiceFactory],att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{v:!0,a:2,n:"GetFactory",t:8,tpc:1,tprm:["TFactory"],sn:"GetFactory",rt:System.Object},{ab:!0,a:2,n:"TryGetCodeService",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"service",out:!0,pt:$n[8].CodeService,ps:1}],sn:"TryGetCodeService",rt:$n[2].Boolean,p:[$n[2].String,$n[8].CodeService],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{v:!0,a:2,n:"WithFactory",t:8,pi:[{n:"factory",pt:$n[8].CodeServiceFactory,ps:0}],sn:"WithFactory",rt:$n[8].CodeServiceFactory,p:[$n[8].CodeServiceFactory]}]}},$n);$m("Kusto.Language.Editor.CodeServiceFactory.AggregateCodeServiceFactory",function(){return{td:$n[8].CodeServiceFactory,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Editor.CodeServiceFactory)],pi:[{n:"factories",pt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.CodeServiceFactory),ps:0}],sn:"ctor"},{ov:!0,a:2,n:"GetFactory",t:8,tpc:1,tprm:["TFactory"],sn:"GetFactory",rt:System.Object},{ov:!0,a:2,n:"TryGetCodeService",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"service",out:!0,pt:$n[8].CodeService,ps:1}],sn:"TryGetCodeService",rt:$n[2].Boolean,p:[$n[2].String,$n[8].CodeService],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"WithFactory",t:8,pi:[{n:"factory",pt:$n[8].CodeServiceFactory,ps:0}],sn:"WithFactory",rt:$n[8].CodeServiceFactory,p:[$n[8].CodeServiceFactory]},{a:1,n:"_factories",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.CodeServiceFactory),sn:"_factories",ro:!0}]}},$n);$m("Kusto.Language.Editor.CodeServiceFeatures",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Classification",is:!0,t:4,rt:$n[2].String,sn:"Classification"},{a:2,n:"ClientParameters",is:!0,t:4,rt:$n[2].String,sn:"ClientParameters"},{a:2,n:"ClusterReferences",is:!0,t:4,rt:$n[2].String,sn:"ClusterReferences"},{a:2,n:"Completion",is:!0,t:4,rt:$n[2].String,sn:"Completion"},{a:2,n:"DatabaseReferences",is:!0,t:4,rt:$n[2].String,sn:"DatabaseReferences"},{a:2,n:"Diagnostics",is:!0,t:4,rt:$n[2].String,sn:"Diagnostics"},{a:2,n:"Formatting",is:!0,t:4,rt:$n[2].String,sn:"Formatting"},{a:2,n:"MinimalText",is:!0,t:4,rt:$n[2].String,sn:"MinimalText"},{a:2,n:"Outlining",is:!0,t:4,rt:$n[2].String,sn:"Outlining"},{a:2,n:"QuickInfo",is:!0,t:4,rt:$n[2].String,sn:"QuickInfo"}]}},$n);$m("Kusto.Language.Editor.CommonCodeService",function(){return{att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ctor"},{a:3,n:"Add",is:!0,t:8,pi:[{n:"classifications1",pt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange),ps:0},{n:"classifications2",pt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange),ps:1}],sn:"Add",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange),p:[$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange),$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange)]},{ov:!0,a:2,n:"GetAnalyzerDiagnostics",t:8,pi:[{n:"analyzers",pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"waitForAnalysis",pt:$n[2].Boolean,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetAnalyzerDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[0].IReadOnlyList$1(System.String),$n[2].Boolean,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetAnalyzers",t:8,sn:"GetAnalyzers",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.AnalyzerInfo)},{ov:!0,a:2,n:"GetClassifications",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1},{n:"clipToRange",pt:$n[2].Boolean,ps:2},{n:"waitForAnalysis",pt:$n[2].Boolean,ps:3},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:4}],sn:"GetClassifications",rt:$n[8].ClassificationInfo,p:[$n[2].Int32,$n[2].Int32,$n[2].Boolean,$n[2].Boolean,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetClientParameters",t:8,sn:"GetClientParameters",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClientParameter)},{a:4,n:"GetClientParameters",t:8,pi:[{n:"blockText",pt:$n[2].String,ps:0},{n:"offsetInScript",pt:$n[2].Int32,ps:1}],sn:"GetClientParameters$1",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClientParameter),p:[$n[2].String,$n[2].Int32]},{a:3,n:"GetClientParametersClassifications",t:8,sn:"GetClientParametersClassifications",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange)},{ov:!0,a:2,n:"GetClusterReferences",t:8,pi:[{n:"cancellationToken",pt:$n[5].CancellationToken,ps:0}],sn:"GetClusterReferences",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClusterReference),p:[$n[5].CancellationToken]},{ov:!0,a:2,n:"GetCompletionItems",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",pt:$n[8].CompletionOptions,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"GetCompletionItems",rt:$n[8].CompletionInfo,p:[$n[2].Int32,$n[8].CompletionOptions,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetDatabaseReferences",t:8,pi:[{n:"cancellationToken",pt:$n[5].CancellationToken,ps:0}],sn:"GetDatabaseReferences",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.DatabaseReference),p:[$n[5].CancellationToken]},{ov:!0,a:2,n:"GetDiagnostics",t:8,pi:[{n:"waitForAnalysis",pt:$n[2].Boolean,ps:0},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:1}],sn:"GetDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[2].Boolean,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetElement",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:1}],sn:"GetElement",rt:$n[8].TextRange,p:[$n[2].Int32,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetFormattedText",t:8,pi:[{n:"options",pt:$n[8].FormattingOptions,ps:0},{n:"cursorPosition",pt:$n[2].Int32,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"GetFormattedText",rt:$n[8].FormattedText,p:[$n[8].FormattingOptions,$n[2].Int32,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetMinimalText",t:8,pi:[{n:"kind",pt:$n[8].MinimalTextKind,ps:0},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:1}],sn:"GetMinimalText",rt:$n[2].String,p:[$n[8].MinimalTextKind,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetOutlines",t:8,pi:[{n:"cancellationToken",pt:$n[5].CancellationToken,ps:0}],sn:"GetOutlines",rt:$n[8].OutlineInfo,p:[$n[5].CancellationToken]},{ov:!0,a:2,n:"GetQuickInfo",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",pt:$n[8].QuickInfoOptions,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"GetQuickInfo",rt:$n[8].QuickInfo,p:[$n[2].Int32,$n[8].QuickInfoOptions,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetRelatedElements",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",pt:$n[8].FindRelatedOptions,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"GetRelatedElements",rt:$n[8].RelatedInfo,p:[$n[2].Int32,$n[8].FindRelatedOptions,$n[5].CancellationToken]},{ov:!0,a:2,n:"IsFeatureSupported",t:8,pi:[{n:"feature",pt:$n[2].String,ps:0},{n:"position",dv:-1,o:!0,pt:$n[2].Int32,ps:1}],sn:"IsFeatureSupported",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ShouldAutoComplete",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"key",pt:$n[2].Char,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"ShouldAutoComplete",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].Char,$n[5].CancellationToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TryGetCachedAnalyzerDiagnostics",t:8,pi:[{n:"diagnostics",out:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"TryGetCachedAnalyzerDiagnostics",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TryGetCachedDiagnostics",t:8,pi:[{n:"diagnostics",out:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"TryGetCachedDiagnostics",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"Text",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:1,n:"_clientParameters",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClientParameter),sn:"_clientParameters"},{a:1,n:"_text",t:4,rt:$n[2].String,sn:"_text",ro:!0}]}},$n);$m("Kusto.Language.Editor.CompletionHint",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Aggregate",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Aggregate",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Boolean",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Boolean",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Clause",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Clause",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Cluster",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Cluster",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Column",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Column",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Command",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Command",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Database",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Database",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"DatabaseFunction",is:!0,t:4,rt:$n[8].CompletionHint,sn:"DatabaseFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Declaration",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Declaration",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Expression",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Expression",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"ExternalTable",is:!0,t:4,rt:$n[8].CompletionHint,sn:"ExternalTable",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Function",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Function",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Inherit",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Inherit",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Keyword",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Literal",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Literal",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"MaterializedView",is:!0,t:4,rt:$n[8].CompletionHint,sn:"MaterializedView",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"None",is:!0,t:4,rt:$n[8].CompletionHint,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Number",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Number",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Option",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Option",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Query",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Query",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Scalar",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Scalar",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"ScalarFunction",is:!0,t:4,rt:$n[8].CompletionHint,sn:"ScalarFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Syntax",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Syntax",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Table",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Table",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"Tabular",is:!0,t:4,rt:$n[8].CompletionHint,sn:"Tabular",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"TabularFunction",is:!0,t:4,rt:$n[8].CompletionHint,sn:"TabularFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}}]}},$n);$m("Kusto.Language.Editor.CompletionInfo",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(Kusto.Language.Editor.CompletionItem),$n[2].Int32,$n[2].Int32],pi:[{n:"items",pt:$n[0].IEnumerable$1(Kusto.Language.Editor.CompletionItem),ps:0},{n:"editStart",pt:$n[2].Int32,ps:1},{n:"editLength",pt:$n[2].Int32,ps:2}],sn:"ctor"},{a:2,n:"EditLength",t:16,rt:$n[2].Int32,g:{a:2,n:"get_EditLength",t:8,rt:$n[2].Int32,fg:"EditLength",box:function($v){return Bridge.box($v,System.Int32)}},fn:"EditLength"},{a:2,n:"EditStart",t:16,rt:$n[2].Int32,g:{a:2,n:"get_EditStart",t:8,rt:$n[2].Int32,fg:"EditStart",box:function($v){return Bridge.box($v,System.Int32)}},fn:"EditStart"},{a:2,n:"Items",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.CompletionItem),g:{a:2,n:"get_Items",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.CompletionItem),fg:"Items"},fn:"Items"},{a:2,n:"Empty",is:!0,t:4,rt:$n[8].CompletionInfo,sn:"Empty",ro:!0},{a:1,backing:!0,n:"<EditLength>k__BackingField",t:4,rt:$n[2].Int32,sn:"EditLength",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<EditStart>k__BackingField",t:4,rt:$n[2].Int32,sn:"EditStart",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Items>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.CompletionItem),sn:"Items"}]}},$n);$m("Kusto.Language.Editor.CompletionItem",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[8].CompletionKind,$n[2].String,$n[2].String,$n[2].String,$n[2].String,$n[8].CompletionPriority],pi:[{n:"kind",pt:$n[8].CompletionKind,ps:0},{n:"displayText",pt:$n[2].String,ps:1},{n:"editText",dv:null,o:!0,pt:$n[2].String,ps:2},{n:"afterText",dv:null,o:!0,pt:$n[2].String,ps:3},{n:"matchText",dv:null,o:!0,pt:$n[2].String,ps:4},{n:"priority",dv:2,o:!0,pt:$n[8].CompletionPriority,ps:5}],sn:"ctor"},{a:2,n:"WithAfterText",t:8,pi:[{n:"afterText",pt:$n[2].String,ps:0}],sn:"WithAfterText",rt:$n[8].CompletionItem,p:[$n[2].String]},{a:2,n:"WithDisplayText",t:8,pi:[{n:"displayText",pt:$n[2].String,ps:0}],sn:"WithDisplayText",rt:$n[8].CompletionItem,p:[$n[2].String]},{a:2,n:"WithEditText",t:8,pi:[{n:"editText",pt:$n[2].String,ps:0}],sn:"WithEditText",rt:$n[8].CompletionItem,p:[$n[2].String]},{a:2,n:"WithKind",t:8,pi:[{n:"kind",pt:$n[8].CompletionKind,ps:0}],sn:"WithKind",rt:$n[8].CompletionItem,p:[$n[8].CompletionKind]},{a:2,n:"WithMatchText",t:8,pi:[{n:"matchText",pt:$n[2].String,ps:0}],sn:"WithMatchText",rt:$n[8].CompletionItem,p:[$n[2].String]},{a:2,n:"WithPriority",t:8,pi:[{n:"priority",pt:$n[8].CompletionPriority,ps:0}],sn:"WithPriority",rt:$n[8].CompletionItem,p:[$n[8].CompletionPriority]},{a:2,n:"AfterText",t:16,rt:$n[2].String,g:{a:2,n:"get_AfterText",t:8,rt:$n[2].String,fg:"AfterText"},fn:"AfterText"},{a:2,n:"DisplayText",t:16,rt:$n[2].String,g:{a:2,n:"get_DisplayText",t:8,rt:$n[2].String,fg:"DisplayText"},fn:"DisplayText"},{a:2,n:"EditText",t:16,rt:$n[2].String,g:{a:2,n:"get_EditText",t:8,rt:$n[2].String,fg:"EditText"},fn:"EditText"},{a:2,n:"Kind",t:16,rt:$n[8].CompletionKind,g:{a:2,n:"get_Kind",t:8,rt:$n[8].CompletionKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},fn:"Kind"},{a:2,n:"MatchText",t:16,rt:$n[2].String,g:{a:2,n:"get_MatchText",t:8,rt:$n[2].String,fg:"MatchText"},fn:"MatchText"},{a:2,n:"Priority",t:16,rt:$n[8].CompletionPriority,g:{a:2,n:"get_Priority",t:8,rt:$n[8].CompletionPriority,fg:"Priority",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionPriority,System.Enum.toStringFn(Kusto.Language.Editor.CompletionPriority))}},fn:"Priority"},{a:1,backing:!0,n:"<AfterText>k__BackingField",t:4,rt:$n[2].String,sn:"AfterText"},{a:1,backing:!0,n:"<DisplayText>k__BackingField",t:4,rt:$n[2].String,sn:"DisplayText"},{a:1,backing:!0,n:"<EditText>k__BackingField",t:4,rt:$n[2].String,sn:"EditText"},{a:1,backing:!0,n:"<Kind>k__BackingField",t:4,rt:$n[8].CompletionKind,sn:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:1,backing:!0,n:"<MatchText>k__BackingField",t:4,rt:$n[2].String,sn:"MatchText"},{a:1,backing:!0,n:"<Priority>k__BackingField",t:4,rt:$n[8].CompletionPriority,sn:"Priority",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionPriority,System.Enum.toStringFn(Kusto.Language.Editor.CompletionPriority))}}]}},$n);$m("Kusto.Language.Editor.CompletionKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AggregateFunction",is:!0,t:4,rt:$n[8].CompletionKind,sn:"AggregateFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"BuiltInFunction",is:!0,t:4,rt:$n[8].CompletionKind,sn:"BuiltInFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Cluster",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Cluster",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Column",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Column",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"CommandPrefix",is:!0,t:4,rt:$n[8].CompletionKind,sn:"CommandPrefix",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Database",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Database",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"DatabaseFunction",is:!0,t:4,rt:$n[8].CompletionKind,sn:"DatabaseFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Example",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Example",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Identifier",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Identifier",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Keyword",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"LocalFunction",is:!0,t:4,rt:$n[8].CompletionKind,sn:"LocalFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"MaterialiedView",is:!0,t:4,rt:$n[8].CompletionKind,sn:"MaterialiedView",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Option",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Option",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Parameter",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Parameter",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Punctuation",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Punctuation",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"QueryPrefix",is:!0,t:4,rt:$n[8].CompletionKind,sn:"QueryPrefix",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"RenderChart",is:!0,t:4,rt:$n[8].CompletionKind,sn:"RenderChart",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"ScalarInfix",is:!0,t:4,rt:$n[8].CompletionKind,sn:"ScalarInfix",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"ScalarPrefix",is:!0,t:4,rt:$n[8].CompletionKind,sn:"ScalarPrefix",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"ScalarType",is:!0,t:4,rt:$n[8].CompletionKind,sn:"ScalarType",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Syntax",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Syntax",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Table",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Table",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"TabularPrefix",is:!0,t:4,rt:$n[8].CompletionKind,sn:"TabularPrefix",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"TabularSuffix",is:!0,t:4,rt:$n[8].CompletionKind,sn:"TabularSuffix",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Unknown",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Unknown",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:2,n:"Variable",is:!0,t:4,rt:$n[8].CompletionKind,sn:"Variable",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}}]}},$n);$m("Kusto.Language.Editor.CompletionOptions",function(){return{nested:[$n[8].CompletionOptions.OptionFlags],att:1048577,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[8].CompletionOptions.OptionFlags,$n[4].IncludeFunctionKind],pi:[{n:"flags",pt:$n[8].CompletionOptions.OptionFlags,ps:0},{n:"includeFunctionKind",pt:$n[4].IncludeFunctionKind,ps:1}],sn:"ctor"},{a:1,n:"SetOption",is:!0,t:8,pi:[{n:"flags",pt:$n[8].CompletionOptions.OptionFlags,ps:0},{n:"option",pt:$n[8].CompletionOptions.OptionFlags,ps:1},{n:"value",pt:$n[2].Boolean,ps:2}],sn:"SetOption",rt:$n[8].CompletionOptions.OptionFlags,p:[$n[8].CompletionOptions.OptionFlags,$n[8].CompletionOptions.OptionFlags,$n[2].Boolean],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionOptions.OptionFlags,System.Enum.toStringFn(Kusto.Language.Editor.CompletionOptions.OptionFlags))}},{a:2,n:"WithAutoAppendWhitespace",t:8,pi:[{n:"enable",pt:$n[2].Boolean,ps:0}],sn:"WithAutoAppendWhitespace",rt:$n[8].CompletionOptions,p:[$n[2].Boolean]},{a:2,n:"WithEnableParameterInjection",t:8,pi:[{n:"enable",pt:$n[2].Boolean,ps:0}],sn:"WithEnableParameterInjection",rt:$n[8].CompletionOptions,p:[$n[2].Boolean]},{a:2,n:"WithIncludeFunctions",t:8,pi:[{n:"kind",pt:$n[4].IncludeFunctionKind,ps:0}],sn:"WithIncludeFunctions",rt:$n[8].CompletionOptions,p:[$n[4].IncludeFunctionKind]},{a:2,n:"WithIncludeFunctions",t:8,pi:[{n:"include",pt:$n[2].Boolean,ps:0}],sn:"WithIncludeFunctions$1",rt:$n[8].CompletionOptions,p:[$n[2].Boolean]},{a:2,n:"WithIncludePunctuationOnlySyntax",t:8,pi:[{n:"include",pt:$n[2].Boolean,ps:0}],sn:"WithIncludePunctuationOnlySyntax",rt:$n[8].CompletionOptions,p:[$n[2].Boolean]},{a:2,n:"WithIncludeSymbols",t:8,pi:[{n:"include",pt:$n[2].Boolean,ps:0}],sn:"WithIncludeSymbols",rt:$n[8].CompletionOptions,p:[$n[2].Boolean]},{a:2,n:"WithIncludeSyntax",t:8,pi:[{n:"include",pt:$n[2].Boolean,ps:0}],sn:"WithIncludeSyntax",rt:$n[8].CompletionOptions,p:[$n[2].Boolean]},{a:2,n:"AutoAppendWhitespace",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_AutoAppendWhitespace",t:8,rt:$n[2].Boolean,fg:"AutoAppendWhitespace",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"AutoAppendWhitespace"},{a:2,n:"EnableParameterInjection",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_EnableParameterInjection",t:8,rt:$n[2].Boolean,fg:"EnableParameterInjection",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"EnableParameterInjection"},{a:2,n:"IncludeFunctions",t:16,rt:$n[4].IncludeFunctionKind,g:{a:2,n:"get_IncludeFunctions",t:8,rt:$n[4].IncludeFunctionKind,fg:"IncludeFunctions",box:function($v){return Bridge.box($v,Kusto.Language.IncludeFunctionKind,System.Enum.toStringFn(Kusto.Language.IncludeFunctionKind))}},fn:"IncludeFunctions"},{a:2,n:"IncludePunctuationOnlySyntax",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IncludePunctuationOnlySyntax",t:8,rt:$n[2].Boolean,fg:"IncludePunctuationOnlySyntax",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IncludePunctuationOnlySyntax"},{a:2,n:"IncludeSymbols",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IncludeSymbols",t:8,rt:$n[2].Boolean,fg:"IncludeSymbols",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IncludeSymbols"},{a:2,n:"IncludeSyntax",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_IncludeSyntax",t:8,rt:$n[2].Boolean,fg:"IncludeSyntax",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IncludeSyntax"},{a:2,n:"Default",is:!0,t:4,rt:$n[8].CompletionOptions,sn:"Default"},{a:1,n:"flags",t:4,rt:$n[8].CompletionOptions.OptionFlags,sn:"flags",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionOptions.OptionFlags,System.Enum.toStringFn(Kusto.Language.Editor.CompletionOptions.OptionFlags))}},{a:1,backing:!0,n:"<IncludeFunctions>k__BackingField",t:4,rt:$n[4].IncludeFunctionKind,sn:"IncludeFunctions",box:function($v){return Bridge.box($v,Kusto.Language.IncludeFunctionKind,System.Enum.toStringFn(Kusto.Language.IncludeFunctionKind))}}]}},$n);$m("Kusto.Language.Editor.CompletionOptions.OptionFlags",function(){return{td:$n[8].CompletionOptions,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AutoAppendWhitespace",is:!0,t:4,rt:$n[8].CompletionOptions.OptionFlags,sn:"AutoAppendWhitespace",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionOptions.OptionFlags,System.Enum.toStringFn(Kusto.Language.Editor.CompletionOptions.OptionFlags))}},{a:2,n:"Default",is:!0,t:4,rt:$n[8].CompletionOptions.OptionFlags,sn:"Default",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionOptions.OptionFlags,System.Enum.toStringFn(Kusto.Language.Editor.CompletionOptions.OptionFlags))}},{a:2,n:"EnableParameterInjection",is:!0,t:4,rt:$n[8].CompletionOptions.OptionFlags,sn:"EnableParameterInjection",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionOptions.OptionFlags,System.Enum.toStringFn(Kusto.Language.Editor.CompletionOptions.OptionFlags))}},{a:2,n:"IncludePunctuation",is:!0,t:4,rt:$n[8].CompletionOptions.OptionFlags,sn:"IncludePunctuation",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionOptions.OptionFlags,System.Enum.toStringFn(Kusto.Language.Editor.CompletionOptions.OptionFlags))}},{a:2,n:"IncludeSymbols",is:!0,t:4,rt:$n[8].CompletionOptions.OptionFlags,sn:"IncludeSymbols",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionOptions.OptionFlags,System.Enum.toStringFn(Kusto.Language.Editor.CompletionOptions.OptionFlags))}},{a:2,n:"IncludeSyntax",is:!0,t:4,rt:$n[8].CompletionOptions.OptionFlags,sn:"IncludeSyntax",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionOptions.OptionFlags,System.Enum.toStringFn(Kusto.Language.Editor.CompletionOptions.OptionFlags))}}]}},$n);$m("Kusto.Language.Editor.CompletionPriority",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"High",is:!0,t:4,rt:$n[8].CompletionPriority,sn:"High",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionPriority,System.Enum.toStringFn(Kusto.Language.Editor.CompletionPriority))}},{a:2,n:"Low",is:!0,t:4,rt:$n[8].CompletionPriority,sn:"Low",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionPriority,System.Enum.toStringFn(Kusto.Language.Editor.CompletionPriority))}},{a:2,n:"Normal",is:!0,t:4,rt:$n[8].CompletionPriority,sn:"Normal",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionPriority,System.Enum.toStringFn(Kusto.Language.Editor.CompletionPriority))}},{a:2,n:"Top",is:!0,t:4,rt:$n[8].CompletionPriority,sn:"Top",box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionPriority,System.Enum.toStringFn(Kusto.Language.Editor.CompletionPriority))}}]}},$n);$m("Kusto.Language.Editor.DatabaseReference",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].String,$n[2].Int32,$n[2].Int32],pi:[{n:"database",pt:$n[2].String,ps:0},{n:"cluster",pt:$n[2].String,ps:1},{n:"start",pt:$n[2].Int32,ps:2},{n:"length",pt:$n[2].Int32,ps:3}],sn:"ctor"},{a:2,n:"Cluster",t:16,rt:$n[2].String,g:{a:2,n:"get_Cluster",t:8,rt:$n[2].String,fg:"Cluster"},fn:"Cluster"},{a:2,n:"Database",t:16,rt:$n[2].String,g:{a:2,n:"get_Database",t:8,rt:$n[2].String,fg:"Database"},fn:"Database"},{a:1,backing:!0,n:"<Cluster>k__BackingField",t:4,rt:$n[2].String,sn:"Cluster"},{a:1,backing:!0,n:"<Database>k__BackingField",t:4,rt:$n[2].String,sn:"Database"}]}},$n);$m("Kusto.Language.Editor.DisabledDiagnostics",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"$ctor1"},{a:2,n:"CanDisableCode",is:!0,t:8,pi:[{n:"code",pt:$n[2].String,ps:0}],sn:"CanDisableCode",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"CanDisableSeverity",is:!0,t:8,pi:[{n:"severity",pt:$n[2].String,ps:0}],sn:"CanDisableSeverity",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsCodeDisabled",t:8,pi:[{n:"code",pt:$n[2].String,ps:0}],sn:"IsCodeDisabled",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsCodeEnabled",t:8,pi:[{n:"code",pt:$n[2].String,ps:0}],sn:"IsCodeEnabled",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsDiagnosticDisabled",t:8,pi:[{n:"diagnostic",pt:$n[4].Diagnostic,ps:0}],sn:"IsDiagnosticDisabled",rt:$n[2].Boolean,p:[$n[4].Diagnostic],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsDiagnosticEnabled",t:8,pi:[{n:"diagnostic",pt:$n[4].Diagnostic,ps:0}],sn:"IsDiagnosticEnabled",rt:$n[2].Boolean,p:[$n[4].Diagnostic],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsServerityDisabled",t:8,pi:[{n:"severity",pt:$n[2].String,ps:0}],sn:"IsServerityDisabled",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsSeverityEnabled",t:8,pi:[{n:"severity",pt:$n[2].String,ps:0}],sn:"IsSeverityEnabled",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Parse",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"Parse",rt:$n[8].DisabledDiagnostics,p:[$n[2].String]},{a:2,n:"SetCodeEnabled",t:8,pi:[{n:"code",pt:$n[2].String,ps:0},{n:"enabled",pt:$n[2].Boolean,ps:1}],sn:"SetCodeEnabled",rt:$n[2].Void,p:[$n[2].String,$n[2].Boolean]},{a:2,n:"SetSeverityEnabled",t:8,pi:[{n:"severity",pt:$n[2].String,ps:0},{n:"enabled",pt:$n[2].Boolean,ps:1}],sn:"SetSeverityEnabled",rt:$n[2].Void,p:[$n[2].String,$n[2].Boolean]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[2].String},{a:1,n:"SeverityPrefix",is:!0,t:4,rt:$n[2].String,sn:"SeverityPrefix",ro:!0},{a:1,n:"_codes",t:4,rt:$n[0].HashSet$1(System.String),sn:"_codes",ro:!0},{a:1,n:"_codesThatCanBeDisabled",is:!0,t:4,rt:$n[0].HashSet$1(System.String),sn:"_codesThatCanBeDisabled"},{a:1,n:"_severities",t:4,rt:$n[0].HashSet$1(System.String),sn:"_severities",ro:!0}]}},$n);$m("Kusto.Language.Editor.FindRelatedOptions",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"None",is:!0,t:4,rt:$n[8].FindRelatedOptions,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Editor.FindRelatedOptions,System.Enum.toStringFn(Kusto.Language.Editor.FindRelatedOptions))}},{a:2,n:"SeeThroughVariables",is:!0,t:4,rt:$n[8].FindRelatedOptions,sn:"SeeThroughVariables",box:function($v){return Bridge.box($v,Kusto.Language.Editor.FindRelatedOptions,System.Enum.toStringFn(Kusto.Language.Editor.FindRelatedOptions))}}]}},$n);$m("Kusto.Language.Editor.FormattedText",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[2].Int32],pi:[{n:"newText",pt:$n[2].String,ps:0},{n:"newPosition",pt:$n[2].Int32,ps:1}],sn:"ctor"},{a:2,n:"Position",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Position",t:8,rt:$n[2].Int32,fg:"Position",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Position"},{a:2,n:"Text",t:16,rt:$n[2].String,g:{a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:1,backing:!0,n:"<Position>k__BackingField",t:4,rt:$n[2].Int32,sn:"Position",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Text>k__BackingField",t:4,rt:$n[2].String,sn:"Text"}]}},$n);$m("Kusto.Language.Editor.FormattingOptions",function(){return{att:1048577,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[2].Int32,$n[2].Boolean,$n[8].BrackettingStyle,$n[8].PlacementStyle,$n[8].PlacementStyle,$n[8].PlacementStyle],pi:[{n:"indentationSize",pt:$n[2].Int32,ps:0},{n:"insertMissingTokens",pt:$n[2].Boolean,ps:1},{n:"brackettingStyle",pt:$n[8].BrackettingStyle,ps:2},{n:"pipeOperatorStyle",pt:$n[8].PlacementStyle,ps:3},{n:"statementStyle",pt:$n[8].PlacementStyle,ps:4},{n:"semicolonStyle",pt:$n[8].PlacementStyle,ps:5}],sn:"ctor"},{a:1,n:"With",t:8,pi:[{n:"indentationSize",dv:null,o:!0,pt:$n[2].Nullable$1(System.Int32),ps:0},{n:"insertMissingTokens",dv:null,o:!0,pt:$n[2].Nullable$1(System.Boolean),ps:1},{n:"brackettingStyle",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.BrackettingStyle),ps:2},{n:"pipeOperatorStyle",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.PlacementStyle),ps:3},{n:"statementStyle",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.PlacementStyle),ps:4},{n:"semicolonStyle",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.PlacementStyle),ps:5}],sn:"With",rt:$n[8].FormattingOptions,p:[$n[2].Nullable$1(System.Int32),$n[2].Nullable$1(System.Boolean),$n[2].Nullable$1(Kusto.Language.Editor.BrackettingStyle),$n[2].Nullable$1(Kusto.Language.Editor.PlacementStyle),$n[2].Nullable$1(Kusto.Language.Editor.PlacementStyle),$n[2].Nullable$1(Kusto.Language.Editor.PlacementStyle)]},{a:2,n:"WithBrackettingStyle",t:8,pi:[{n:"style",pt:$n[8].BrackettingStyle,ps:0}],sn:"WithBrackettingStyle",rt:$n[8].FormattingOptions,p:[$n[8].BrackettingStyle]},{a:2,n:"WithIndentationSize",t:8,pi:[{n:"size",pt:$n[2].Int32,ps:0}],sn:"WithIndentationSize",rt:$n[8].FormattingOptions,p:[$n[2].Int32]},{a:2,n:"WithInsertMissingTokens",t:8,pi:[{n:"enable",pt:$n[2].Boolean,ps:0}],sn:"WithInsertMissingTokens",rt:$n[8].FormattingOptions,p:[$n[2].Boolean]},{a:2,n:"WithPipeOperatorStyle",t:8,pi:[{n:"style",pt:$n[8].PlacementStyle,ps:0}],sn:"WithPipeOperatorStyle",rt:$n[8].FormattingOptions,p:[$n[8].PlacementStyle]},{a:2,n:"WithSemicolonStyle",t:8,pi:[{n:"style",pt:$n[8].PlacementStyle,ps:0}],sn:"WithSemicolonStyle",rt:$n[8].FormattingOptions,p:[$n[8].PlacementStyle]},{a:2,n:"WithStatementStyle",t:8,pi:[{n:"style",pt:$n[8].PlacementStyle,ps:0}],sn:"WithStatementStyle",rt:$n[8].FormattingOptions,p:[$n[8].PlacementStyle]},{a:2,n:"BrackettingStyle",t:16,rt:$n[8].BrackettingStyle,g:{a:2,n:"get_BrackettingStyle",t:8,rt:$n[8].BrackettingStyle,fg:"BrackettingStyle",box:function($v){return Bridge.box($v,Kusto.Language.Editor.BrackettingStyle,System.Enum.toStringFn(Kusto.Language.Editor.BrackettingStyle))}},fn:"BrackettingStyle"},{a:2,n:"IndentationSize",t:16,rt:$n[2].Int32,g:{a:2,n:"get_IndentationSize",t:8,rt:$n[2].Int32,fg:"IndentationSize",box:function($v){return Bridge.box($v,System.Int32)}},fn:"IndentationSize"},{a:2,n:"InsertMissingTokens",t:16,rt:$n[2].Boolean,g:{a:2,n:"get_InsertMissingTokens",t:8,rt:$n[2].Boolean,fg:"InsertMissingTokens",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"InsertMissingTokens"},{a:2,n:"PipeOperatorStyle",t:16,rt:$n[8].PlacementStyle,g:{a:2,n:"get_PipeOperatorStyle",t:8,rt:$n[8].PlacementStyle,fg:"PipeOperatorStyle",box:function($v){return Bridge.box($v,Kusto.Language.Editor.PlacementStyle,System.Enum.toStringFn(Kusto.Language.Editor.PlacementStyle))}},fn:"PipeOperatorStyle"},{a:2,n:"SemicolonStyle",t:16,rt:$n[8].PlacementStyle,g:{a:2,n:"get_SemicolonStyle",t:8,rt:$n[8].PlacementStyle,fg:"SemicolonStyle",box:function($v){return Bridge.box($v,Kusto.Language.Editor.PlacementStyle,System.Enum.toStringFn(Kusto.Language.Editor.PlacementStyle))}},fn:"SemicolonStyle"},{a:2,n:"StatementStyle",t:16,rt:$n[8].PlacementStyle,g:{a:2,n:"get_StatementStyle",t:8,rt:$n[8].PlacementStyle,fg:"StatementStyle",box:function($v){return Bridge.box($v,Kusto.Language.Editor.PlacementStyle,System.Enum.toStringFn(Kusto.Language.Editor.PlacementStyle))}},fn:"StatementStyle"},{a:2,n:"Default",is:!0,t:4,rt:$n[8].FormattingOptions,sn:"Default",ro:!0},{a:1,backing:!0,n:"<BrackettingStyle>k__BackingField",t:4,rt:$n[8].BrackettingStyle,sn:"BrackettingStyle",box:function($v){return Bridge.box($v,Kusto.Language.Editor.BrackettingStyle,System.Enum.toStringFn(Kusto.Language.Editor.BrackettingStyle))}},{a:1,backing:!0,n:"<IndentationSize>k__BackingField",t:4,rt:$n[2].Int32,sn:"IndentationSize",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<InsertMissingTokens>k__BackingField",t:4,rt:$n[2].Boolean,sn:"InsertMissingTokens",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<PipeOperatorStyle>k__BackingField",t:4,rt:$n[8].PlacementStyle,sn:"PipeOperatorStyle",box:function($v){return Bridge.box($v,Kusto.Language.Editor.PlacementStyle,System.Enum.toStringFn(Kusto.Language.Editor.PlacementStyle))}},{a:1,backing:!0,n:"<SemicolonStyle>k__BackingField",t:4,rt:$n[8].PlacementStyle,sn:"SemicolonStyle",box:function($v){return Bridge.box($v,Kusto.Language.Editor.PlacementStyle,System.Enum.toStringFn(Kusto.Language.Editor.PlacementStyle))}},{a:1,backing:!0,n:"<StatementStyle>k__BackingField",t:4,rt:$n[8].PlacementStyle,sn:"StatementStyle",box:function($v){return Bridge.box($v,Kusto.Language.Editor.PlacementStyle,System.Enum.toStringFn(Kusto.Language.Editor.PlacementStyle))}}]}},$n);$m("Kusto.Language.Editor.KustoAnalyzer",function(){return{nested:[$n[8].KustoAnalyzer.SimpleAnalyzer],att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ab:!0,a:2,n:"Analyze",t:8,pi:[{n:"code",pt:$n[4].KustoCode,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"Analyze",rt:$n[2].Void,p:[$n[4].KustoCode,$n[0].List$1(Kusto.Language.Diagnostic),$n[5].CancellationToken]},{a:2,n:"Create",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"diagnostic",pt:$n[4].Diagnostic,ps:1},{n:"analyzer",pt:Function,ps:2}],sn:"Create$1",rt:$n[8].KustoAnalyzer,p:[$n[2].String,$n[4].Diagnostic,Function]},{a:2,n:"Create",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"diagnostic",pt:$n[4].Diagnostic,ps:1},{n:"analyzer",pt:Function,ps:2}],sn:"Create",rt:$n[8].KustoAnalyzer,p:[$n[2].String,$n[4].Diagnostic,Function]},{ab:!0,a:3,n:"GetDiagnostics",t:8,sn:"GetDiagnostics",rt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic)},{a:2,n:"Diagnostics",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),g:{a:2,n:"get_Diagnostics",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),fg:"Diagnostics"},fn:"Diagnostics"},{v:!0,a:2,n:"Name",t:16,rt:$n[2].String,g:{v:!0,a:2,n:"get_Name",t:8,rt:$n[2].String,fg:"Name"},fn:"Name"},{a:1,n:"_diagnostics",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"_diagnostics"}]}},$n);$m("Kusto.Language.Editor.KustoAnalyzer.SimpleAnalyzer",function(){return{td:$n[8].KustoAnalyzer,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].String,$n[4].Diagnostic,Function],pi:[{n:"name",pt:$n[2].String,ps:0},{n:"diagnostic",pt:$n[4].Diagnostic,ps:1},{n:"analyzer",pt:Function,ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Analyze",t:8,pi:[{n:"code",pt:$n[4].KustoCode,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"Analyze",rt:$n[2].Void,p:[$n[4].KustoCode,$n[0].List$1(Kusto.Language.Diagnostic),$n[5].CancellationToken]},{ov:!0,a:3,n:"GetDiagnostics",t:8,sn:"GetDiagnostics",rt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic)},{ov:!0,a:2,n:"Name",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Name",t:8,rt:$n[2].String,fg:"Name"},fn:"Name"},{a:1,n:"_analyzer",t:4,rt:Function,sn:"_analyzer",ro:!0},{a:1,n:"_diagnostic",t:4,rt:$n[4].Diagnostic,sn:"_diagnostic",ro:!0},{a:1,n:"_name",t:4,rt:$n[2].String,sn:"_name",ro:!0}]}},$n);$m("Kusto.Language.Editor.KustoAnalyzers",function(){return{att:1048961,a:2,s:!0,m:[{a:1,n:"IsArgumentOfFunction",is:!0,t:8,pi:[{n:"argument",pt:$n[3].Expression,ps:0},{n:"symbol",pt:$n[1].FunctionSymbol,ps:1}],sn:"IsArgumentOfFunction",rt:$n[2].Boolean,p:[$n[3].Expression,$n[1].FunctionSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsComparisonOperator",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"IsComparisonOperator",rt:$n[2].Boolean,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsDbColumn",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0},{n:"globals",pt:$n[4].GlobalState,ps:1}],sn:"IsDbColumn",rt:$n[2].Boolean,p:[$n[3].Expression,$n[4].GlobalState],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInFilter",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"IsInFilter",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInPredicate",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"IsInPredicate",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"All",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.KustoAnalyzer),sn:"All"},{a:2,n:"AvoidJoinWithoutKind",is:!0,t:4,rt:$n[8].KustoAnalyzer,sn:"AvoidJoinWithoutKind",ro:!0},{a:2,n:"AvoidUsingContains",is:!0,t:4,rt:$n[8].KustoAnalyzer,sn:"AvoidUsingContains",ro:!0},{a:2,n:"AvoidUsingFormatDatetimeInPredicate",is:!0,t:4,rt:$n[8].KustoAnalyzer,sn:"AvoidUsingFormatDatetimeInPredicate",ro:!0},{a:2,n:"AvoidUsingIsNullStringComparison",is:!0,t:4,rt:$n[8].KustoAnalyzer,sn:"AvoidUsingIsNullStringComparison",ro:!0},{a:2,n:"AvoidUsingObsoleteFunctions",is:!0,t:4,rt:$n[8].KustoAnalyzer,sn:"AvoidUsingObsoleteFunctions",ro:!0},{a:2,n:"AvoidUsingShortStringComparision",is:!0,t:4,rt:$n[8].KustoAnalyzer,sn:"AvoidUsingShortStringComparision",ro:!0},{a:2,n:"AvoidUsingToBoolOnNumerics",is:!0,t:4,rt:$n[8].KustoAnalyzer,sn:"AvoidUsingToBoolOnNumerics",ro:!0},{a:2,n:"NullAggregation",is:!0,t:4,rt:$n[8].KustoAnalyzer,sn:"NullAggregation",ro:!0},{a:2,n:"StdevTimespanConversion",is:!0,t:4,rt:$n[8].KustoAnalyzer,sn:"StdevTimespanConversion",ro:!0}]}},$n);$m("Kusto.Language.Editor.AvoidUsingIsNullStringComparisonAnalyzer",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"Analyze",t:8,pi:[{n:"code",pt:$n[4].KustoCode,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"Analyze",rt:$n[2].Void,p:[$n[4].KustoCode,$n[0].List$1(Kusto.Language.Diagnostic),$n[5].CancellationToken]},{ov:!0,a:3,n:"GetDiagnostics",t:8,sn:"GetDiagnostics",rt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic)},{a:1,n:"_diagnostic_equals",is:!0,t:4,rt:$n[4].Diagnostic,sn:"_diagnostic_equals",ro:!0},{a:1,n:"_diagnostic_not_equals",is:!0,t:4,rt:$n[4].Diagnostic,sn:"_diagnostic_not_equals",ro:!0}]}},$n);$m("Kusto.Language.Editor.KustoClassifier",function(){return{att:1048960,a:4,s:!0,m:[{a:2,n:"GetClassifications",is:!0,t:8,pi:[{n:"root",pt:$n[3].SyntaxNode,ps:0},{n:"start",pt:$n[2].Int32,ps:1},{n:"length",pt:$n[2].Int32,ps:2},{n:"clipToRange",pt:$n[2].Boolean,ps:3},{n:"list",pt:$n[0].List$1(Kusto.Language.Editor.ClassifiedRange),ps:4},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:5}],sn:"GetClassifications",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[2].Int32,$n[2].Int32,$n[2].Boolean,$n[0].List$1(Kusto.Language.Editor.ClassifiedRange),$n[5].CancellationToken]},{a:1,n:"GetIdentifierKind",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"GetIdentifierKind",rt:$n[8].ClassificationKind,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:1,n:"GetKind",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"GetKind",rt:$n[8].ClassificationKind,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:1,n:"GetTriviaClassifications",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"action",pt:Function,ps:1}],sn:"GetTriviaClassifications",rt:$n[2].Void,p:[$n[3].SyntaxToken,Function]},{a:1,n:"IsCommandVerbToken",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsCommandVerbToken",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsIdentifierKeyword",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsIdentifierKeyword",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsName",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsName",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsQueryOperatorToken",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsQueryOperatorToken",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsQueryParameter",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsQueryParameter",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsScalarOperatorToken",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsScalarOperatorToken",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsSkipped",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsSkipped",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsTypeToken",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsTypeToken",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Kusto.Language.Editor.KustoCodeService",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[4].KustoCode],pi:[{n:"code",pt:$n[4].KustoCode,ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].String,$n[4].GlobalState],pi:[{n:"text",pt:$n[2].String,ps:0},{n:"globals",dv:null,o:!0,pt:$n[4].GlobalState,ps:1}],sn:"$ctor1"},{a:1,n:".ctor",t:1,p:[$n[2].String,$n[4].GlobalState,$n[4].KustoCode],pi:[{n:"text",pt:$n[2].String,ps:0},{n:"globals",pt:$n[4].GlobalState,ps:1},{n:"code",pt:$n[4].KustoCode,ps:2}],sn:"$ctor2"},{a:1,n:"CanBeAnalyzed",is:!0,t:8,pi:[{n:"code",pt:$n[4].KustoCode,ps:0}],sn:"CanBeAnalyzed",rt:$n[2].Boolean,p:[$n[4].KustoCode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CanBeParsed",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"CanBeParsed",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"GetAnalyzerDiagnostics",t:8,pi:[{n:"analyzers",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"waitForAnalysis",dv:!0,o:!0,pt:$n[2].Boolean,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetAnalyzerDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[0].IReadOnlyList$1(System.String),$n[2].Boolean,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetAnalyzers",t:8,sn:"GetAnalyzers",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.AnalyzerInfo)},{ov:!0,a:2,n:"GetClassifications",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1},{n:"clipToRange",dv:!0,o:!0,pt:$n[2].Boolean,ps:2},{n:"waitForAnalysis",dv:!0,o:!0,pt:$n[2].Boolean,ps:3},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:4}],sn:"GetClassifications",rt:$n[8].ClassificationInfo,p:[$n[2].Int32,$n[2].Int32,$n[2].Boolean,$n[2].Boolean,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetClientParameters",t:8,sn:"GetClientParameters",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClientParameter)},{a:1,n:"GetClusterReference",is:!0,t:8,pi:[{n:"fc",pt:$n[3].FunctionCallExpression,ps:0},{n:"location",pt:$n[3].SyntaxNode,ps:1}],sn:"GetClusterReference",rt:$n[8].ClusterReference,p:[$n[3].FunctionCallExpression,$n[3].SyntaxNode]},{ov:!0,a:2,n:"GetClusterReferences",t:8,pi:[{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:0}],sn:"GetClusterReferences",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClusterReference),p:[$n[5].CancellationToken]},{a:1,n:"GetClusterReferences",t:8,pi:[{n:"root",pt:$n[3].SyntaxNode,ps:0},{n:"location",pt:$n[3].SyntaxNode,ps:1},{n:"clusters",pt:$n[0].List$1(Kusto.Language.Editor.ClusterReference),ps:2},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:3}],sn:"GetClusterReferences$1",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[3].SyntaxNode,$n[0].List$1(Kusto.Language.Editor.ClusterReference),$n[5].CancellationToken]},{ov:!0,a:2,n:"GetCompletionItems",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",dv:null,o:!0,pt:$n[8].CompletionOptions,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetCompletionItems",rt:$n[8].CompletionInfo,p:[$n[2].Int32,$n[8].CompletionOptions,$n[5].CancellationToken]},{a:1,n:"GetDatabaseReference",t:8,pi:[{n:"fc",pt:$n[3].FunctionCallExpression,ps:0},{n:"location",pt:$n[3].SyntaxNode,ps:1},{n:"defaultCluster",pt:$n[1].ClusterSymbol,ps:2}],sn:"GetDatabaseReference",rt:$n[8].DatabaseReference,p:[$n[3].FunctionCallExpression,$n[3].SyntaxNode,$n[1].ClusterSymbol]},{ov:!0,a:2,n:"GetDatabaseReferences",t:8,pi:[{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:0}],sn:"GetDatabaseReferences",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.DatabaseReference),p:[$n[5].CancellationToken]},{a:1,n:"GetDatabaseReferences",t:8,pi:[{n:"root",pt:$n[3].SyntaxNode,ps:0},{n:"location",pt:$n[3].SyntaxNode,ps:1},{n:"defaultCluster",pt:$n[1].ClusterSymbol,ps:2},{n:"defaultDatabase",pt:$n[1].DatabaseSymbol,ps:3},{n:"refs",pt:$n[0].List$1(Kusto.Language.Editor.DatabaseReference),ps:4},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:5}],sn:"GetDatabaseReferences$1",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[3].SyntaxNode,$n[1].ClusterSymbol,$n[1].DatabaseSymbol,$n[0].List$1(Kusto.Language.Editor.DatabaseReference),$n[5].CancellationToken]},{ov:!0,a:2,n:"GetDiagnostics",t:8,pi:[{n:"waitForAnalysis",dv:!0,o:!0,pt:$n[2].Boolean,ps:0},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:1}],sn:"GetDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[2].Boolean,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetElement",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:1}],sn:"GetElement",rt:$n[8].TextRange,p:[$n[2].Int32,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetFormattedText",t:8,pi:[{n:"options",dv:null,o:!0,pt:$n[8].FormattingOptions,ps:0},{n:"cursorPosition",dv:0,o:!0,pt:$n[2].Int32,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetFormattedText",rt:$n[8].FormattedText,p:[$n[8].FormattingOptions,$n[2].Int32,$n[5].CancellationToken]},{a:2,n:"GetIncludeTrivia",is:!0,t:8,pi:[{n:"kind",pt:$n[8].MinimalTextKind,ps:0}],sn:"GetIncludeTrivia",rt:$n[3].IncludeTrivia,p:[$n[8].MinimalTextKind],box:function($v){return Bridge.box($v,Kusto.Language.Syntax.IncludeTrivia,System.Enum.toStringFn(Kusto.Language.Syntax.IncludeTrivia))}},{ov:!0,a:2,n:"GetMinimalText",t:8,pi:[{n:"kind",pt:$n[8].MinimalTextKind,ps:0},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:1}],sn:"GetMinimalText",rt:$n[2].String,p:[$n[8].MinimalTextKind,$n[5].CancellationToken]},{a:1,n:"GetOutlineCollapsedText",is:!0,t:8,pi:[{n:"code",pt:$n[4].KustoCode,ps:0}],sn:"GetOutlineCollapsedText",rt:$n[2].String,p:[$n[4].KustoCode]},{ov:!0,a:2,n:"GetOutlines",t:8,pi:[{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:0}],sn:"GetOutlines",rt:$n[8].OutlineInfo,p:[$n[5].CancellationToken]},{ov:!0,a:2,n:"GetQuickInfo",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",dv:null,o:!0,pt:$n[8].QuickInfoOptions,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetQuickInfo",rt:$n[8].QuickInfo,p:[$n[2].Int32,$n[8].QuickInfoOptions,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetRelatedElements",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",dv:0,o:!0,pt:$n[8].FindRelatedOptions,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"GetRelatedElements",rt:$n[8].RelatedInfo,p:[$n[2].Int32,$n[8].FindRelatedOptions,$n[5].CancellationToken]},{ov:!0,a:2,n:"IsFeatureSupported",t:8,pi:[{n:"feature",pt:$n[2].String,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"IsFeatureSupported",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ShouldAutoComplete",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"key",pt:$n[2].Char,ps:1},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:2}],sn:"ShouldAutoComplete",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].Char,$n[5].CancellationToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryGetBoundCode",t:8,pi:[{n:"cancellationToken",pt:$n[5].CancellationToken,ps:0},{n:"waitForAnalysis",pt:$n[2].Boolean,ps:1},{n:"code",out:!0,pt:$n[4].KustoCode,ps:2}],sn:"TryGetBoundCode",rt:$n[2].Boolean,p:[$n[5].CancellationToken,$n[2].Boolean,$n[4].KustoCode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryGetBoundOrUnboundCode",t:8,pi:[{n:"cancellationToken",pt:$n[5].CancellationToken,ps:0},{n:"waitForAnalysis",pt:$n[2].Boolean,ps:1},{n:"code",out:!0,pt:$n[4].KustoCode,ps:2}],sn:"TryGetBoundOrUnboundCode",rt:$n[2].Boolean,p:[$n[5].CancellationToken,$n[2].Boolean,$n[4].KustoCode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TryGetCachedAnalyzerDiagnostics",t:8,pi:[{n:"diagnostics",out:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"TryGetCachedAnalyzerDiagnostics",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TryGetCachedDiagnostics",t:8,pi:[{n:"diagnostics",out:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"TryGetCachedDiagnostics",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryGetConstantStringArgumentValue",is:!0,t:8,pi:[{n:"fc",pt:$n[3].FunctionCallExpression,ps:0},{n:"index",pt:$n[2].Int32,ps:1},{n:"constant",out:!0,pt:$n[2].String,ps:2}],sn:"TryGetConstantStringArgumentValue",rt:$n[2].Boolean,p:[$n[3].FunctionCallExpression,$n[2].Int32,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"AnalyzerDiagnostics",is:!0,t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),g:{a:2,n:"get_AnalyzerDiagnostics",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),fg:"AnalyzerDiagnostics",is:!0},fn:"AnalyzerDiagnostics"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[2].String,fg:"Kind"},fn:"Kind"},{a:1,n:"_analyzerDiagnostics",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"_analyzerDiagnostics"},{a:1,n:"_analyzers",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.AnalyzerInfo),sn:"_analyzers"},{a:1,n:"codeException",t:4,rt:$n[2].Exception,sn:"codeException"},{a:1,n:"globals",t:4,rt:$n[4].GlobalState,sn:"globals",ro:!0},{a:1,n:"kind",t:4,rt:$n[2].String,sn:"kind",ro:!0},{a:1,n:"lazyBoundCode",t:4,rt:$n[4].KustoCode,sn:"lazyBoundCode"},{a:1,n:"lazyDiagnostics",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"lazyDiagnostics"},{a:1,n:"lazyExtendedDiagnostics",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),sn:"lazyExtendedDiagnostics"},{a:1,n:"lazyUnboundCode",t:4,rt:$n[4].KustoCode,sn:"lazyUnboundCode"}]}},$n);$m("Kusto.Language.Editor.KustoCodeServiceFactory",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[4].GlobalState],pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"ctor"},{a:1,n:"GetFirstKustoToken",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"GetFirstKustoToken",rt:$n[2].String,p:[$n[2].String]},{a:1,n:"IsKusto",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"IsKusto",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsSql",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"IsSql",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TryGetCodeService",t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"service",out:!0,pt:$n[8].CodeService,ps:1}],sn:"TryGetCodeService",rt:$n[2].Boolean,p:[$n[2].String,$n[8].CodeService],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"WithGlobals",t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"WithGlobals",rt:$n[8].KustoCodeServiceFactory,p:[$n[4].GlobalState]},{a:2,n:"Globals",t:16,rt:$n[4].GlobalState,g:{a:2,n:"get_Globals",t:8,rt:$n[4].GlobalState,fg:"Globals"},fn:"Globals"},{a:1,backing:!0,n:"<Globals>k__BackingField",t:4,rt:$n[4].GlobalState,sn:"Globals"}]}},$n);$m("Kusto.Language.Editor.KustoCompleter",function(){return{nested:[$n[8].KustoCompleter.OrderingRank,$n[8].KustoCompleter.CompletionMode,$n[8].KustoCompleter.CompletionBuilder],att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[4].KustoCode,$n[8].CompletionOptions,$n[5].CancellationToken],pi:[{n:"code",pt:$n[4].KustoCode,ps:0},{n:"options",pt:$n[8].CompletionOptions,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"ctor"},{a:1,n:"AnyInfixMatches",t:8,pi:[{n:"left",pt:$n[3].Expression,ps:0},{n:"op",pt:$n[2].String,ps:1},{n:"position",pt:$n[2].Int32,ps:2}],sn:"AnyInfixMatches",rt:$n[2].Boolean,p:[$n[3].Expression,$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ContainsOnlyOneToken",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"ContainsOnlyOneToken",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"GetAnnotatedParsers",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"annotatedParsers",pt:$n[0].List$1(Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),ps:1}],sn:"GetAnnotatedParsers",rt:$n[2].Void,p:[$n[2].Int32,$n[0].List$1(Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken))]},{a:1,n:"GetArgumentNameSuggestions",t:8,pi:[{n:"signatures",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentIndex",pt:$n[2].Int32,ps:2}],sn:"GetArgumentNameSuggestions",rt:$n[0].HashSet$1(System.String),p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[2].Int32]},{a:1,n:"GetArgumentParameterHints",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"iArgument",pt:$n[2].Int32,ps:2}],sn:"GetArgumentParameterHints",rt:$n[8].CompletionHint,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:1,n:"GetAugmentedCompletionItem",t:8,pi:[{n:"item",pt:$n[8].CompletionItem,ps:0}],sn:"GetAugmentedCompletionItem",rt:$n[8].CompletionItem,p:[$n[8].CompletionItem]},{a:1,n:"GetChildHint",t:8,pi:[{n:"contextNode",pt:$n[3].SyntaxNode,ps:0},{n:"childIndex",pt:$n[2].Int32,ps:1},{n:"default",dv:0,o:!0,pt:$n[8].CompletionHint,ps:2}],sn:"GetChildHint",rt:$n[8].CompletionHint,p:[$n[3].SyntaxNode,$n[2].Int32,$n[8].CompletionHint],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:1,n:"GetChildIndex",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"GetChildIndex",rt:$n[2].Int32,p:[$n[3].SyntaxNode,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"GetCompleteExpressionLeftOfPosition",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetCompleteExpressionLeftOfPosition",rt:$n[3].Expression,p:[$n[2].Int32]},{a:1,n:"GetCompletionHint",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetCompletionHint$1",rt:$n[8].CompletionHint,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:1,n:"GetCompletionHint",t:8,pi:[{n:"contextNode",pt:$n[3].SyntaxNode,ps:0},{n:"childIndex",pt:$n[2].Int32,ps:1},{n:"defaultHint",dv:0,o:!0,pt:$n[8].CompletionHint,ps:2}],sn:"GetCompletionHint",rt:$n[8].CompletionHint,p:[$n[3].SyntaxNode,$n[2].Int32,$n[8].CompletionHint],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"GetCompletionItems",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetCompletionItems",rt:$n[8].CompletionInfo,p:[$n[2].Int32]},{a:1,n:"GetCompletionKind",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"GetCompletionKind",rt:$n[8].CompletionKind,p:[$n[1].Symbol],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:1,n:"GetFunctionArgumentCompletions",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"contextNode",pt:$n[3].SyntaxNode,ps:1},{n:"childIndex",pt:$n[2].Int32,ps:2},{n:"builder",pt:$n[8].KustoCompleter.CompletionBuilder,ps:3}],sn:"GetFunctionArgumentCompletions",rt:$n[8].KustoCompleter.CompletionMode,p:[$n[2].Int32,$n[3].SyntaxNode,$n[2].Int32,$n[8].KustoCompleter.CompletionBuilder],box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.CompletionMode,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.CompletionMode))}},{a:1,n:"GetGrammarAnnotations",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetGrammarAnnotations",rt:$n[0].IReadOnlyList$1(System.Object),p:[$n[2].Int32]},{a:1,n:"GetGrammarSearchContext",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"searchStart",out:!0,pt:$n[2].Int32,ps:1},{n:"grammar",out:!0,pt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),ps:2}],sn:"GetGrammarSearchContext",rt:$n[2].Void,p:[$n[2].Int32,$n[2].Int32,$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken)]},{a:1,n:"GetLeftOfFunctionCall",is:!0,t:8,pi:[{n:"expression",pt:$n[3].SyntaxNode,ps:0}],sn:"GetLeftOfFunctionCall",rt:$n[3].SyntaxNode,p:[$n[3].SyntaxNode]},{a:1,n:"GetMatchingSymbolCompletions",t:8,pi:[{n:"match",pt:$n[1].SymbolMatch,ps:0},{n:"type",pt:$n[1].ScalarSymbol,ps:1},{n:"position",pt:$n[2].Int32,ps:2},{n:"contextNode",pt:$n[3].SyntaxNode,ps:3},{n:"builder",pt:$n[8].KustoCompleter.CompletionBuilder,ps:4}],sn:"GetMatchingSymbolCompletions",rt:$n[2].Void,p:[$n[1].SymbolMatch,$n[1].ScalarSymbol,$n[2].Int32,$n[3].SyntaxNode,$n[8].KustoCompleter.CompletionBuilder]},{a:1,n:"GetMemberNameExamples",t:8,pi:[{n:"symbols",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol),ps:0}],sn:"GetMemberNameExamples",rt:$n[0].IEnumerable$1(Kusto.Language.Editor.CompletionItem),p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"GetNearestAncestorWithEmptyChild",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"GetNearestAncestorWithEmptyChild",rt:$n[3].SyntaxNode,p:[$n[3].SyntaxToken,$n[2].Int32]},{a:1,n:"GetNextPossibleParameterHints",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1}],sn:"GetNextPossibleParameterHints",rt:$n[8].CompletionHint,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression)],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:1,n:"GetOperatorExamples",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].OperatorSymbol,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"possibleParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2},{n:"examples",pt:$n[0].HashSet$1(System.String),ps:3}],sn:"GetOperatorExamples",rt:$n[2].Void,p:[$n[1].OperatorSymbol,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[0].HashSet$1(System.String)]},{a:1,n:"GetOperatorKind",is:!0,t:8,pi:[{n:"opText",pt:$n[2].String,ps:0}],sn:"GetOperatorKind",rt:$n[1].OperatorKind,p:[$n[2].String],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:1,n:"GetOrderingRank",t:8,pi:[{n:"item",pt:$n[8].CompletionItem,ps:0}],sn:"GetOrderingRank",rt:$n[8].KustoCompleter.OrderingRank,p:[$n[8].CompletionItem],box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:1,n:"GetParameterExamples",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"possibleParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:2},{n:"examples",pt:$n[0].HashSet$1(System.String),ps:3}],sn:"GetParameterExamples",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[0].HashSet$1(System.String)]},{a:1,n:"GetParameterHint",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"parameter",pt:$n[1].Parameter,ps:1}],sn:"GetParameterHint",rt:$n[8].CompletionHint,p:[$n[1].Signature,$n[1].Parameter],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:2,n:"GetParameterHint",t:8,pi:[{n:"signatures",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"parameterName",pt:$n[2].String,ps:2},{n:"iArgument",pt:$n[2].Int32,ps:3}],sn:"GetParameterHint",rt:$n[8].CompletionHint,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))}},{a:1,n:"GetPossibleParameters",is:!0,t:8,pi:[{n:"sig",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"parameterName",pt:$n[2].String,ps:2},{n:"argumentIndex",pt:$n[2].Int32,ps:3},{n:"possibleParameters",pt:$n[0].List$1(Kusto.Language.Symbols.Parameter),ps:4}],sn:"GetPossibleParameters",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[2].String,$n[2].Int32,$n[0].List$1(Kusto.Language.Symbols.Parameter)]},{a:1,n:"GetScalarType",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"GetScalarType",rt:$n[1].ScalarSymbol,p:[$n[1].Symbol]},{a:1,n:"GetSetOptionCompletions",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"contextNode",pt:$n[3].SyntaxNode,ps:1},{n:"childIndex",pt:$n[2].Int32,ps:2},{n:"builder",pt:$n[8].KustoCompleter.CompletionBuilder,ps:3}],sn:"GetSetOptionCompletions",rt:$n[8].KustoCompleter.CompletionMode,p:[$n[2].Int32,$n[3].SyntaxNode,$n[2].Int32,$n[8].KustoCompleter.CompletionBuilder],box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.CompletionMode,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.CompletionMode))}},{a:1,n:"GetSpecialCaseCompletions",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"contextNode",pt:$n[3].SyntaxNode,ps:1},{n:"childIndex",pt:$n[2].Int32,ps:2},{n:"builder",pt:$n[8].KustoCompleter.CompletionBuilder,ps:3}],sn:"GetSpecialCaseCompletions",rt:$n[8].KustoCompleter.CompletionMode,p:[$n[2].Int32,$n[3].SyntaxNode,$n[2].Int32,$n[8].KustoCompleter.CompletionBuilder],box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.CompletionMode,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.CompletionMode))}},{a:1,n:"GetSpecifiedArgumentNames",t:8,pi:[{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0}],sn:"GetSpecifiedArgumentNames",rt:$n[0].HashSet$1(System.String),p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression)]},{a:1,n:"GetSymbolCompletionItem",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0},{n:"contextNode",pt:$n[3].SyntaxNode,ps:1},{n:"nameOnly",pt:$n[2].Boolean,ps:2}],sn:"GetSymbolCompletionItem",rt:$n[8].CompletionItem,p:[$n[1].Symbol,$n[3].SyntaxNode,$n[2].Boolean]},{a:1,n:"GetSymbolCompletions",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"builder",pt:$n[8].KustoCompleter.CompletionBuilder,ps:1}],sn:"GetSymbolCompletions",rt:$n[8].KustoCompleter.CompletionMode,p:[$n[2].Int32,$n[8].KustoCompleter.CompletionBuilder],box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.CompletionMode,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.CompletionMode))}},{a:1,n:"GetSymbolMatch",is:!0,t:8,pi:[{n:"hint",pt:$n[8].CompletionHint,ps:0}],sn:"GetSymbolMatch",rt:$n[1].SymbolMatch,p:[$n[8].CompletionHint],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:1,n:"GetSymbolMatch",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetSymbolMatch",rt:$n[1].SymbolMatch,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:1,n:"GetSymbolMatchFromGrammar",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetSymbolMatchFromGrammar",rt:$n[1].SymbolMatch,p:[$n[2].Int32],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.SymbolMatch,System.Enum.toStringFn(Kusto.Language.Symbols.SymbolMatch))}},{a:1,n:"GetSyntaxCompletions",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"builder",pt:$n[8].KustoCompleter.CompletionBuilder,ps:1}],sn:"GetSyntaxCompletions",rt:$n[2].Void,p:[$n[2].Int32,$n[8].KustoCompleter.CompletionBuilder]},{a:1,n:"GetTokenLeftOfPosition",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetTokenLeftOfPosition",rt:$n[3].SyntaxToken,p:[$n[2].Int32]},{a:1,n:"GetTokenWithAffinity",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetTokenWithAffinity",rt:$n[3].SyntaxToken,p:[$n[2].Int32]},{a:1,n:"GetTypeExamples",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0},{n:"examples",pt:$n[0].HashSet$1(System.String),ps:1}],sn:"GetTypeExamples",rt:$n[2].Void,p:[$n[1].TypeSymbol,$n[0].HashSet$1(System.String)]},{a:1,n:"GetUnnamedArguments",is:!0,t:8,pi:[{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0},{n:"unnamedArguments",pt:$n[0].List$1(Kusto.Language.Syntax.Expression),ps:1}],sn:"GetUnnamedArguments",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Syntax.Expression)]},{a:1,n:"GetVariableCompletionKind",t:8,pi:[{n:"vs",pt:$n[1].VariableSymbol,ps:0}],sn:"GetVariableCompletionKind",rt:$n[8].CompletionKind,p:[$n[1].VariableSymbol],box:function($v){return Bridge.box($v,Kusto.Language.Editor.CompletionKind,System.Enum.toStringFn(Kusto.Language.Editor.CompletionKind))}},{a:4,n:"HasAffinity",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"HasAffinity",rt:$n[2].Boolean,p:[$n[3].SyntaxToken,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"HasEmptyChild",is:!0,t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"HasEmptyChild",rt:$n[2].Boolean,p:[$n[3].SyntaxElement,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"HasLetters",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"HasLetters",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"HasMatchingInfixOperator",t:8,pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"arg0Type",pt:$n[1].TypeSymbol,ps:1},{n:"returnTypeHint",pt:$n[8].CompletionHint,ps:2}],sn:"HasMatchingInfixOperator",rt:$n[2].Boolean,p:[$n[1].OperatorKind,$n[1].TypeSymbol,$n[8].CompletionHint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IncludeSyntax",t:8,pi:[{n:"item",pt:$n[8].CompletionItem,ps:0},{n:"position",pt:$n[2].Int32,ps:1},{n:"hints",pt:$n[8].CompletionHint,ps:2},{n:"match",pt:$n[1].SymbolMatch,ps:3},{n:"left",pt:$n[3].Expression,ps:4}],sn:"IncludeSyntax",rt:$n[2].Boolean,p:[$n[8].CompletionItem,$n[2].Int32,$n[8].CompletionHint,$n[1].SymbolMatch,$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsApplicable",t:8,pi:[{n:"function",pt:$n[1].FunctionSymbol,ps:0},{n:"implicitFirstArgumentType",pt:$n[1].Symbol,ps:1}],sn:"IsApplicable",rt:$n[2].Boolean,p:[$n[1].FunctionSymbol,$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsArgumentNameRequired",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentIndex",pt:$n[2].Int32,ps:2}],sn:"IsArgumentNameRequired",rt:$n[2].Boolean,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsArgumentNameRequired",t:8,pi:[{n:"signatures",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentIndex",pt:$n[2].Int32,ps:2}],sn:"IsArgumentNameRequired$1",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsBooleanReturnType",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arg0Type",pt:$n[1].TypeSymbol,ps:1}],sn:"IsBooleanReturnType",rt:$n[2].Boolean,p:[$n[1].Signature,$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsChildEmpty",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"index",pt:$n[2].Int32,ps:1}],sn:"IsChildEmpty",rt:$n[2].Boolean,p:[$n[3].SyntaxNode,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsChildMissing",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"index",pt:$n[2].Int32,ps:1}],sn:"IsChildMissing",rt:$n[2].Boolean,p:[$n[3].SyntaxNode,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsChildMissingOrEmpty",is:!0,t:8,pi:[{n:"contextNode",pt:$n[3].SyntaxNode,ps:0},{n:"childIndex",pt:$n[2].Int32,ps:1}],sn:"IsChildMissingOrEmpty",rt:$n[2].Boolean,p:[$n[3].SyntaxNode,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsChildOnNewLine",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"index",pt:$n[2].Int32,ps:1}],sn:"IsChildOnNewLine",rt:$n[2].Boolean,p:[$n[3].SyntaxNode,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInCommand",t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"contextChildIndex",pt:$n[2].Int32,ps:1}],sn:"IsInCommand",rt:$n[2].Boolean,p:[$n[3].SyntaxElement,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInsideComment",is:!0,t:8,pi:[{n:"trivia",pt:$n[2].String,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"IsInsideComment",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInsideLiteral",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"IsInsideLiteral",rt:$n[2].Boolean,p:[$n[3].SyntaxToken,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInvokeFunctionContext",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"IsInvokeFunctionContext",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsNameToken",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"IsNameToken",rt:$n[2].Boolean,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsNonBooleanScalarReturnType",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arg0Type",pt:$n[1].TypeSymbol,ps:1}],sn:"IsNonBooleanScalarReturnType",rt:$n[2].Boolean,p:[$n[1].Signature,$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsNumericReturnType",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arg0Type",pt:$n[1].TypeSymbol,ps:1}],sn:"IsNumericReturnType",rt:$n[2].Boolean,p:[$n[1].Signature,$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsQueryPart",t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"contextChildIndex",pt:$n[2].Int32,ps:1}],sn:"IsQueryPart",rt:$n[2].Boolean,p:[$n[3].SyntaxElement,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsStartOfQuery",is:!0,t:8,pi:[{n:"context",pt:$n[3].SyntaxNode,ps:0}],sn:"IsStartOfQuery",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ParameterMatches",is:!0,t:8,pi:[{n:"parameter",pt:$n[1].Parameter,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1}],sn:"ParameterMatches",rt:$n[2].Boolean,p:[$n[1].Parameter,$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ReturnTypeMatchesContext",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arg0Type",pt:$n[1].TypeSymbol,ps:1},{n:"returnTypeHint",pt:$n[8].CompletionHint,ps:2}],sn:"ReturnTypeMatchesContext",rt:$n[2].Boolean,p:[$n[1].Signature,$n[1].TypeSymbol,$n[8].CompletionHint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ShouldAugmentSymbolCompletionItem",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0},{n:"hint",pt:$n[8].CompletionHint,ps:1}],sn:"ShouldAugmentSymbolCompletionItem",rt:$n[2].Boolean,p:[$n[1].Symbol,$n[8].CompletionHint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ShouldAugmentSyntaxCompletionItem",t:8,pi:[{n:"item",pt:$n[8].CompletionItem,ps:0}],sn:"ShouldAugmentSyntaxCompletionItem",rt:$n[2].Boolean,p:[$n[8].CompletionItem],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"ShouldAutoComplete",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"key",pt:$n[2].Char,ps:1}],sn:"ShouldAutoComplete",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].Char],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ShouldComplete",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"ShouldComplete",rt:$n[2].Boolean,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ShowParameterNames",t:8,pi:[{n:"function",pt:$n[1].FunctionSymbol,ps:0}],sn:"ShowParameterNames",rt:$n[2].Boolean,p:[$n[1].FunctionSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryGetCompletionContext",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"contextNode",out:!0,pt:$n[3].SyntaxNode,ps:1},{n:"contextChildIndex",out:!0,pt:$n[2].Int32,ps:2}],sn:"TryGetCompletionContext",rt:$n[2].Boolean,p:[$n[2].Int32,$n[3].SyntaxNode,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryGetFunctionOrOperatorArgument",t:8,pi:[{n:"contextNode",pt:$n[3].SyntaxNode,ps:0},{n:"childIndex",pt:$n[2].Int32,ps:1},{n:"signatures",out:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),ps:2},{n:"arguments",out:!0,pt:$n[0].List$1(Kusto.Language.Syntax.Expression),ps:3},{n:"argumentIndex",out:!0,pt:$n[2].Int32,ps:4},{n:"argumentCount",out:!0,pt:$n[2].Int32,ps:5},{n:"parameterName",out:!0,pt:$n[2].String,ps:6}],sn:"TryGetFunctionOrOperatorArgument",rt:$n[2].Boolean,p:[$n[3].SyntaxNode,$n[2].Int32,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),$n[0].List$1(Kusto.Language.Syntax.Expression),$n[2].Int32,$n[2].Int32,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryGetReturnTypeKindCompletions",t:8,pi:[{n:"kind",pt:$n[1].ReturnTypeKind,ps:0},{n:"position",pt:$n[2].Int32,ps:1},{n:"contextNode",pt:$n[3].SyntaxNode,ps:2},{n:"builder",pt:$n[8].KustoCompleter.CompletionBuilder,ps:3}],sn:"TryGetReturnTypeKindCompletions",rt:$n[2].Boolean,p:[$n[1].ReturnTypeKind,$n[2].Int32,$n[3].SyntaxNode,$n[8].KustoCompleter.CompletionBuilder],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"AfterQueryStart",is:!0,t:4,rt:$n[2].String,sn:"AfterQueryStart",ro:!0},{a:1,n:"_annotationPosition",t:4,rt:$n[2].Int32,sn:"_annotationPosition",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_annotations",t:4,rt:$n[0].IReadOnlyList$1(System.Object),sn:"_annotations"},{a:1,n:"cancellationToken",t:4,rt:$n[5].CancellationToken,sn:"cancellationToken",ro:!0},{a:1,n:"code",t:4,rt:$n[4].KustoCode,sn:"code",ro:!0},{a:1,n:"options",t:4,rt:$n[8].CompletionOptions,sn:"options",ro:!0},{a:1,n:"punctuationWithoutSpace",is:!0,t:4,rt:$n[0].IReadOnlyList$1(System.String),sn:"punctuationWithoutSpace"},{a:1,n:"s_expressionListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression)),sn:"s_expressionListPool",ro:!0},{a:1,n:"s_parameterListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)),sn:"s_parameterListPool"}]}},$n);$m("Kusto.Language.Editor.KustoCompleter.OrderingRank",function(){return{td:$n[8].KustoCompleter,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Aggregate",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"Aggregate",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"Column",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"Column",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"Function",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"Function",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"Keyword",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"Keyword",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"Literal",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"Literal",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"MaterializedView",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"MaterializedView",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"MathOperator",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"MathOperator",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"Other",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"Other",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"StringOperator",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"StringOperator",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"Table",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"Table",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}},{a:2,n:"Variable",is:!0,t:4,rt:$n[8].KustoCompleter.OrderingRank,sn:"Variable",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.OrderingRank,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.OrderingRank))}}]}},$n);$m("Kusto.Language.Editor.KustoCompleter.CompletionMode",function(){return{td:$n[8].KustoCompleter,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Combined",is:!0,t:4,rt:$n[8].KustoCompleter.CompletionMode,sn:"Combined",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.CompletionMode,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.CompletionMode))}},{a:2,n:"Isolated",is:!0,t:4,rt:$n[8].KustoCompleter.CompletionMode,sn:"Isolated",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoCompleter.CompletionMode,System.Enum.toStringFn(Kusto.Language.Editor.KustoCompleter.CompletionMode))}}]}},$n);$m("Kusto.Language.Editor.KustoCompleter.CompletionBuilder",function(){return{td:$n[8].KustoCompleter,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Add",t:8,pi:[{n:"item",pt:$n[8].CompletionItem,ps:0}],sn:"Add",rt:$n[2].Void,p:[$n[8].CompletionItem]},{a:2,n:"AddRange",t:8,pi:[{n:"items",pt:$n[0].IEnumerable$1(Kusto.Language.Editor.CompletionItem),ps:0}],sn:"AddRange",rt:$n[2].Void,p:[$n[0].IEnumerable$1(Kusto.Language.Editor.CompletionItem)]},{a:1,n:"GetBetterItem",is:!0,t:8,pi:[{n:"existing",pt:$n[8].CompletionItem,ps:0},{n:"other",pt:$n[8].CompletionItem,ps:1}],sn:"GetBetterItem",rt:$n[8].CompletionItem,p:[$n[8].CompletionItem,$n[8].CompletionItem]},{a:2,n:"ToList",t:8,sn:"ToList",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.CompletionItem)},{a:1,n:"indexMap",t:4,rt:$n[0].Dictionary$2(System.String,System.Int32),sn:"indexMap",ro:!0},{a:1,n:"list",t:4,rt:$n[0].List$1(Kusto.Language.Editor.CompletionItem),sn:"list",ro:!0}]}},$n);$m("Kusto.Language.Editor.KustoFormatter",function(){return{nested:[$n[8].KustoFormatter.SpacingKind,$n[8].KustoFormatter.ComputationState,$n[8].KustoFormatter.SpacingRule,$n[8].KustoFormatter.AlignmentRule],att:1048576,a:4,m:[{a:4,n:".ctor",t:1,p:[$n[2].Int32,$n[8].FormattingOptions],pi:[{n:"cursorPosition",pt:$n[2].Int32,ps:0},{n:"options",pt:$n[8].FormattingOptions,ps:1}],sn:"ctor"},{a:1,n:"AddBracketExpressionRules",t:8,pi:[{n:"be",pt:$n[3].BracketedExpression,ps:0}],sn:"AddBracketExpressionRules",rt:$n[2].Void,p:[$n[3].BracketedExpression]},{a:1,n:"AddBrackettingStyleRules",t:8,pi:[{n:"open",pt:$n[3].SyntaxToken,ps:0},{n:"close",pt:$n[3].SyntaxToken,ps:1},{n:"alignedTo",pt:$n[3].SyntaxNode,ps:2}],sn:"AddBrackettingStyleRules",rt:$n[2].Void,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[3].SyntaxNode]},{a:1,n:"AddDataTableExpressionRules",t:8,pi:[{n:"dt",pt:$n[3].DataTableExpression,ps:0}],sn:"AddDataTableExpressionRules",rt:$n[2].Void,p:[$n[3].DataTableExpression]},{a:1,n:"AddFunctionDeclarationRules",t:8,pi:[{n:"fd",pt:$n[3].FunctionDeclaration,ps:0}],sn:"AddFunctionDeclarationRules",rt:$n[2].Void,p:[$n[3].FunctionDeclaration]},{a:1,n:"AddNodeRules",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"AddNodeRules",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{a:1,n:"AddPipeExpressionRules",t:8,pi:[{n:"pe",pt:$n[3].PipeExpression,ps:0}],sn:"AddPipeExpressionRules",rt:$n[2].Void,p:[$n[3].PipeExpression]},{a:1,n:"AddRule",t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"rule",pt:$n[8].KustoFormatter.AlignmentRule,ps:1}],sn:"AddRule",rt:$n[2].Void,p:[$n[3].SyntaxElement,$n[8].KustoFormatter.AlignmentRule]},{a:1,n:"AddRule",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"rule",pt:$n[8].KustoFormatter.SpacingRule,ps:1}],sn:"AddRule$1",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[8].KustoFormatter.SpacingRule]},{a:1,n:"AddRule",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"rule",pt:$n[8].KustoFormatter.SpacingRule,ps:1}],sn:"AddRule$2",rt:$n[2].Void,p:[$n[3].SyntaxToken,$n[8].KustoFormatter.SpacingRule]},{a:1,n:"AddSemicolonRules",t:8,pi:[{n:"se",pt:$n[3].SeparatedElement,ps:0}],sn:"AddSemicolonRules",rt:$n[2].Void,p:[$n[3].SeparatedElement]},{a:1,n:"AddStatementRules",t:8,pi:[{n:"st",pt:$n[3].Statement,ps:0}],sn:"AddStatementRules",rt:$n[2].Void,p:[$n[3].Statement]},{a:1,n:"AddSubElementRules",t:8,pi:[{n:"n",pt:$n[3].SyntaxNode,ps:0}],sn:"AddSubElementRules",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{a:1,n:"AddTokenRules",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"AddTokenRules",rt:$n[2].Void,p:[$n[3].SyntaxToken]},{a:1,n:"Format",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"Format",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{a:1,n:"GetBalancedColumnCount",is:!0,t:8,pi:[{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:0}],sn:"GetBalancedColumnCount",rt:$n[2].Int32,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetFormattedText",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"options",pt:$n[8].FormattingOptions,ps:1},{n:"cursorPosition",pt:$n[2].Int32,ps:2}],sn:"GetFormattedText",rt:$n[8].FormattedText,p:[$n[3].SyntaxNode,$n[8].FormattingOptions,$n[2].Int32]},{a:1,n:"GetMaximumRowWidth",is:!0,t:8,pi:[{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:0},{n:"columns",pt:$n[2].Int32,ps:1}],sn:"GetMaximumRowWidth",rt:$n[2].Int32,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"GetMaximumValueWidth",is:!0,t:8,pi:[{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:0}],sn:"GetMaximumValueWidth",rt:$n[2].Int32,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"IdentifyFormattingRules",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"IdentifyFormattingRules",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{a:1,n:"IndentRule",t:8,pi:[{n:"relativeTo",dv:null,o:!0,pt:$n[3].SyntaxElement,ps:0}],sn:"IndentRule",rt:$n[8].KustoFormatter.AlignmentRule,p:[$n[3].SyntaxElement]},{a:1,n:"IsIdentifierOrKeyword",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsIdentifierOrKeyword",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SkipWhitespace",is:!0,t:8,pi:[{n:"text",pt:$n[2].String,ps:0},{n:"start",pt:$n[2].Int32,ps:1}],sn:"SkipWhitespace",rt:$n[2].Int32,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"SpansMultipleLines",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"inclusive",dv:!1,o:!0,pt:$n[2].Boolean,ps:1},{n:"excluded",dv:null,o:!0,pt:$n[3].SyntaxToken,ps:2}],sn:"SpansMultipleLines",rt:$n[2].Boolean,p:[$n[3].SyntaxNode,$n[2].Boolean,$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SpansMultipleLines",is:!0,t:8,pi:[{n:"first",pt:$n[3].SyntaxToken,ps:0},{n:"last",pt:$n[3].SyntaxToken,ps:1},{n:"inclusive",dv:!1,o:!0,pt:$n[2].Boolean,ps:2},{n:"excluded",dv:null,o:!0,pt:$n[3].SyntaxToken,ps:3}],sn:"SpansMultipleLines$1",rt:$n[2].Boolean,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[2].Boolean,$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SpansOrWillSpanMultipleLines",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"inclusive",dv:!1,o:!0,pt:$n[2].Boolean,ps:1},{n:"excluded",dv:null,o:!0,pt:$n[3].SyntaxToken,ps:2}],sn:"SpansOrWillSpanMultipleLines",rt:$n[2].Boolean,p:[$n[3].SyntaxNode,$n[2].Boolean,$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SpansOrWillSpanMultipleLines",t:8,pi:[{n:"first",pt:$n[3].SyntaxToken,ps:0},{n:"last",pt:$n[3].SyntaxToken,ps:1},{n:"inclusive",dv:!1,o:!0,pt:$n[2].Boolean,ps:2},{n:"excluded",dv:null,o:!0,pt:$n[3].SyntaxToken,ps:3}],sn:"SpansOrWillSpanMultipleLines$1",rt:$n[2].Boolean,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[2].Boolean,$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryGetAlignmentRule",t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"rule",out:!0,pt:$n[8].KustoFormatter.AlignmentRule,ps:1}],sn:"TryGetAlignmentRule",rt:$n[2].Boolean,p:[$n[3].SyntaxElement,$n[8].KustoFormatter.AlignmentRule],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryGetIndentation",t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"indentation",out:!0,pt:$n[2].Int32,ps:1}],sn:"TryGetIndentation",rt:$n[2].Boolean,p:[$n[3].SyntaxElement,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TryGetSpacingRule",t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0},{n:"rule",out:!0,pt:$n[8].KustoFormatter.SpacingRule,ps:1}],sn:"TryGetSpacingRule",rt:$n[2].Boolean,p:[$n[3].SyntaxElement,$n[8].KustoFormatter.SpacingRule],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"WillHaveLineBreak",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"WillHaveLineBreak",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"WillHaveLineBreakAdded",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"WillHaveLineBreakAdded",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"WillHaveLineBreakRemoved",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"WillHaveLineBreakRemoved",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"WillSpanMultipleLines",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"inclusive",dv:!1,o:!0,pt:$n[2].Boolean,ps:1},{n:"excluded",dv:null,o:!0,pt:$n[3].SyntaxToken,ps:2}],sn:"WillSpanMultipleLines",rt:$n[2].Boolean,p:[$n[3].SyntaxNode,$n[2].Boolean,$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"WillSpanMultipleLines",t:8,pi:[{n:"first",pt:$n[3].SyntaxToken,ps:0},{n:"last",pt:$n[3].SyntaxToken,ps:1},{n:"inclusive",dv:!1,o:!0,pt:$n[2].Boolean,ps:2},{n:"excluded",dv:null,o:!0,pt:$n[3].SyntaxToken,ps:3}],sn:"WillSpanMultipleLines$1",rt:$n[2].Boolean,p:[$n[3].SyntaxToken,$n[3].SyntaxToken,$n[2].Boolean,$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"WriteFormattedText",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"indentation",pt:$n[2].Int32,ps:1}],sn:"WriteFormattedText",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[2].Int32]},{a:1,n:"WriteIndentation",t:8,pi:[{n:"indentation",pt:$n[2].Int32,ps:0}],sn:"WriteIndentation",rt:$n[2].Void,p:[$n[2].Int32]},{a:1,n:"WriteToken",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"indentation",pt:$n[2].Int32,ps:1},{n:"spacingKind",dv:2,o:!0,pt:$n[8].KustoFormatter.SpacingKind,ps:2}],sn:"WriteToken",rt:$n[2].Void,p:[$n[3].SyntaxToken,$n[2].Int32,$n[8].KustoFormatter.SpacingKind]},{a:1,n:"WriteTrivia",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"indentation",pt:$n[2].Int32,ps:1},{n:"spacingKind",pt:$n[8].KustoFormatter.SpacingKind,ps:2},{n:"hasFollowingToken",pt:$n[2].Boolean,ps:3}],sn:"WriteTrivia",rt:$n[2].Void,p:[$n[3].SyntaxToken,$n[2].Int32,$n[8].KustoFormatter.SpacingKind,$n[2].Boolean]},{a:1,n:"ArbitraryMaxSingleLineDataTableWidth",is:!0,t:4,rt:$n[2].Int32,sn:"ArbitraryMaxSingleLineDataTableWidth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ArbitraryMaxSingleLineQueryWidth",is:!0,t:4,rt:$n[2].Int32,sn:"ArbitraryMaxSingleLineQueryWidth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ArbitraryMaxSingleLineRowWidth",is:!0,t:4,rt:$n[2].Int32,sn:"ArbitraryMaxSingleLineRowWidth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ArbitraryMaxSingleLineSchemaWidth",is:!0,t:4,rt:$n[2].Int32,sn:"ArbitraryMaxSingleLineSchemaWidth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ArbitraryMaxValueWidth",is:!0,t:4,rt:$n[2].Int32,sn:"ArbitraryMaxValueWidth",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_alignmentRules",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Editor.KustoFormatter.AlignmentRule),sn:"_alignmentRules",ro:!0},{a:1,n:"_builder",t:4,rt:$n[9].StringBuilder,sn:"_builder",ro:!0},{a:1,n:"_cursorPosition",t:4,rt:$n[2].Int32,sn:"_cursorPosition",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_elementIndentations",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Syntax.SyntaxElement,System.Int32),sn:"_elementIndentations",ro:!0},{a:1,n:"_newCursorPosition",t:4,rt:$n[2].Int32,sn:"_newCursorPosition",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_options",t:4,rt:$n[8].FormattingOptions,sn:"_options",ro:!0},{a:1,n:"_spacingRules",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Editor.KustoFormatter.SpacingRule),sn:"_spacingRules",ro:!0},{a:1,n:"s_Spaces",is:!0,t:4,rt:$n[2].String,sn:"s_Spaces"}]}},$n);$m("Kusto.Language.Editor.KustoFormatter.SpacingKind",function(){return{td:$n[8].KustoFormatter,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AlignOnly",is:!0,t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"AlignOnly",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:2,n:"AsIs",is:!0,t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"AsIs",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:2,n:"NewLine",is:!0,t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"NewLine",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:2,n:"NoSpace",is:!0,t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"NoSpace",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:2,n:"NoSpaceIfOnSameLine",is:!0,t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"NoSpaceIfOnSameLine",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:2,n:"SingleSpace",is:!0,t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"SingleSpace",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:2,n:"SingleSpaceIfOnSameLine",is:!0,t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"SingleSpaceIfOnSameLine",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:2,n:"Unknown",is:!0,t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"Unknown",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}}]}},$n);$m("Kusto.Language.Editor.KustoFormatter.ComputationState",function(){return{td:$n[8].KustoFormatter,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Computed",is:!0,t:4,rt:$n[8].KustoFormatter.ComputationState,sn:"Computed",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.ComputationState,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.ComputationState))}},{a:2,n:"Computing",is:!0,t:4,rt:$n[8].KustoFormatter.ComputationState,sn:"Computing",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.ComputationState,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.ComputationState))}},{a:2,n:"Uncomputed",is:!0,t:4,rt:$n[8].KustoFormatter.ComputationState,sn:"Uncomputed",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.ComputationState,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.ComputationState))}}]}},$n);$m("Kusto.Language.Editor.KustoFormatter.SpacingRule",function(){return{td:$n[8].KustoFormatter,att:3,a:1,m:[{n:".cctor",t:1,sn:"ctor",sm:!0},{a:2,n:".ctor",t:1,p:[$n[8].KustoFormatter.SpacingKind,Function,$n[8].KustoFormatter.SpacingRule],pi:[{n:"kind",pt:$n[8].KustoFormatter.SpacingKind,ps:0},{n:"condition",pt:Function,ps:1},{n:"otherwise",dv:null,o:!0,pt:$n[8].KustoFormatter.SpacingRule,ps:2}],sn:"ctor"},{a:2,n:"From",is:!0,t:8,pi:[{n:"kind",pt:$n[8].KustoFormatter.SpacingKind,ps:0}],sn:"From",rt:$n[8].KustoFormatter.SpacingRule,p:[$n[8].KustoFormatter.SpacingKind]},{a:2,n:"GetKind",t:8,sn:"GetKind",rt:$n[8].KustoFormatter.SpacingKind,box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:1,n:"GetPossibleKinds",t:8,sn:"GetPossibleKinds",rt:$n[8].KustoFormatter.SpacingKind,box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:2,n:"Otherwise",t:8,pi:[{n:"rule",pt:$n[8].KustoFormatter.SpacingRule,ps:0}],sn:"Otherwise",rt:$n[8].KustoFormatter.SpacingRule,p:[$n[8].KustoFormatter.SpacingRule]},{a:1,n:"_computeState",t:4,rt:$n[8].KustoFormatter.ComputationState,sn:"_computeState",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.ComputationState,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.ComputationState))}},{a:1,n:"_computedKind",t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"_computedKind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:1,n:"_condition",t:4,rt:Function,sn:"_condition",ro:!0},{a:1,n:"_kind",t:4,rt:$n[8].KustoFormatter.SpacingKind,sn:"_kind",ro:!0,box:function($v){return Bridge.box($v,Kusto.Language.Editor.KustoFormatter.SpacingKind,System.Enum.toStringFn(Kusto.Language.Editor.KustoFormatter.SpacingKind))}},{a:1,n:"_otherwise",t:4,rt:$n[8].KustoFormatter.SpacingRule,sn:"_otherwise",ro:!0},{a:1,n:"s_spacings",is:!0,t:4,rt:System.Array.type(Kusto.Language.Editor.KustoFormatter.SpacingRule),sn:"s_spacings",ro:!0}]}},$n);$m("Kusto.Language.Editor.KustoFormatter.AlignmentRule",function(){return{td:$n[8].KustoFormatter,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].Int32],pi:[{n:"indentationDelta",pt:$n[2].Int32,ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[3].SyntaxElement,$n[2].Int32],pi:[{n:"relativeTo",pt:$n[3].SyntaxElement,ps:0},{n:"indentationDelta",dv:0,o:!0,pt:$n[2].Int32,ps:1}],sn:"ctor"},{a:2,n:"IndentationDelta",t:16,rt:$n[2].Int32,g:{a:2,n:"get_IndentationDelta",t:8,rt:$n[2].Int32,fg:"IndentationDelta",box:function($v){return Bridge.box($v,System.Int32)}},fn:"IndentationDelta"},{a:2,n:"RelativeToElement",t:16,rt:$n[3].SyntaxElement,g:{a:2,n:"get_RelativeToElement",t:8,rt:$n[3].SyntaxElement,fg:"RelativeToElement"},fn:"RelativeToElement"},{a:1,backing:!0,n:"<IndentationDelta>k__BackingField",t:4,rt:$n[2].Int32,sn:"IndentationDelta",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<RelativeToElement>k__BackingField",t:4,rt:$n[3].SyntaxElement,sn:"RelativeToElement"}]}},$n);$m("Kusto.Language.Editor.KustoQuickInfoBuilder",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[8].KustoCodeService,$n[4].KustoCode,$n[8].QuickInfoOptions],pi:[{n:"service",pt:$n[8].KustoCodeService,ps:0},{n:"code",pt:$n[4].KustoCode,ps:1},{n:"options",pt:$n[8].QuickInfoOptions,ps:2}],sn:"ctor"},{a:1,n:"GetBestGrammarAtPosition",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetBestGrammarAtPosition",rt:$n[6].Parser$1(Kusto.Language.Parsing.LexicalToken),p:[$n[2].Int32]},{a:1,n:"GetDiagnosticInfo",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:1}],sn:"GetDiagnosticInfo",rt:$n[8].QuickInfoItem,p:[$n[2].Int32,$n[5].CancellationToken]},{a:1,n:"GetItemKind",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"GetItemKind",rt:$n[8].QuickInfoKind,p:[$n[1].Symbol],box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"GetQuickInfo",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:1}],sn:"GetQuickInfo",rt:$n[8].QuickInfo,p:[$n[2].Int32,$n[5].CancellationToken]},{a:1,n:"GetQuickInfoKind",is:!0,t:8,pi:[{n:"severity",pt:$n[2].String,ps:0}],sn:"GetQuickInfoKind",rt:$n[8].QuickInfoKind,p:[$n[2].String],box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:1,n:"GetSymbolInfo",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetSymbolInfo$1",rt:$n[8].QuickInfoItem,p:[$n[2].Int32]},{a:1,n:"GetSymbolInfo",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"itemKind",dv:null,o:!0,pt:$n[2].Nullable$1(Kusto.Language.Editor.QuickInfoKind),ps:2}],sn:"GetSymbolInfo",rt:$n[8].QuickInfoItem,p:[$n[1].Symbol,$n[1].TypeSymbol,$n[2].Nullable$1(Kusto.Language.Editor.QuickInfoKind)]},{a:1,n:"GetSyntaxInfo",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0}],sn:"GetSyntaxInfo",rt:$n[8].QuickInfoItem,p:[$n[2].Int32]},{a:1,n:"_code",t:4,rt:$n[4].KustoCode,sn:"_code",ro:!0},{a:1,n:"_disabled",t:4,rt:$n[8].DisabledDiagnostics,sn:"_disabled",ro:!0},{a:1,n:"_options",t:4,rt:$n[8].QuickInfoOptions,sn:"_options",ro:!0},{a:1,n:"_service",t:4,rt:$n[8].KustoCodeService,sn:"_service",ro:!0}]}},$n);$m("Kusto.Language.Editor.SymbolDisplay",function(){return{att:1048961,a:2,s:!0,m:[{a:1,n:"GetDescription",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"GetDescription",rt:$n[2].String,p:[$n[1].Symbol]},{a:1,n:"GetNameClassificationKind",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"GetNameClassificationKind",rt:$n[8].ClassificationKind,p:[$n[1].Symbol],box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:2,n:"GetSignatureDisplay",is:!0,t:8,pi:[{n:"sig",pt:$n[1].Signature,ps:0},{n:"texts",pt:$n[0].List$1(Kusto.Language.Editor.ClassifiedText),ps:1}],sn:"GetSignatureDisplay",rt:$n[2].Void,p:[$n[1].Signature,$n[0].List$1(Kusto.Language.Editor.ClassifiedText)]},{a:2,n:"GetSymbolDisplay",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"texts",pt:$n[0].List$1(Kusto.Language.Editor.ClassifiedText),ps:2},{n:"showDescription",dv:!0,o:!0,pt:$n[2].Boolean,ps:3}],sn:"GetSymbolDisplay",rt:$n[2].Void,p:[$n[1].Symbol,$n[1].TypeSymbol,$n[0].List$1(Kusto.Language.Editor.ClassifiedText),$n[2].Boolean]},{a:2,n:"GetTypeDisplay",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0},{n:"texts",pt:$n[0].List$1(Kusto.Language.Editor.ClassifiedText),ps:1},{n:"useName",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"GetTypeDisplay",rt:$n[2].Void,p:[$n[1].TypeSymbol,$n[0].List$1(Kusto.Language.Editor.ClassifiedText),$n[2].Boolean]},{a:1,n:"MaxColumns",is:!0,t:4,rt:$n[2].Int32,sn:"MaxColumns",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Editor.KustoRelatedElementFinder",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[4].KustoCode],pi:[{n:"code",pt:$n[4].KustoCode,ps:0}],sn:"ctor"},{a:1,n:"AreSymbolsEqual",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0},{n:"element",pt:$n[3].SyntaxElement,ps:1},{n:"options",pt:$n[8].FindRelatedOptions,ps:2}],sn:"AreSymbolsEqual",rt:$n[2].Boolean,p:[$n[1].Symbol,$n[3].SyntaxElement,$n[8].FindRelatedOptions],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"FindRelatedElements",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",dv:0,o:!0,pt:$n[8].FindRelatedOptions,ps:1}],sn:"FindRelatedElements",rt:$n[8].RelatedInfo,p:[$n[2].Int32,$n[8].FindRelatedOptions]},{a:1,n:"GetNextTokenReference",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"matchingText",pt:$n[2].String,ps:1},{n:"elements",pt:$n[0].List$1(Kusto.Language.Editor.RelatedElement),ps:2}],sn:"GetNextTokenReference",rt:$n[2].Void,p:[$n[3].SyntaxToken,$n[2].String,$n[0].List$1(Kusto.Language.Editor.RelatedElement)]},{a:1,n:"GetPreviousTokenReference",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"matchingText",pt:$n[2].String,ps:1},{n:"elements",pt:$n[0].List$1(Kusto.Language.Editor.RelatedElement),ps:2}],sn:"GetPreviousTokenReference",rt:$n[2].Void,p:[$n[3].SyntaxToken,$n[2].String,$n[0].List$1(Kusto.Language.Editor.RelatedElement)]},{a:1,n:"GetRelatedBrackets",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"elements",pt:$n[0].List$1(Kusto.Language.Editor.RelatedElement),ps:1}],sn:"GetRelatedBrackets",rt:$n[2].Void,p:[$n[3].SyntaxToken,$n[0].List$1(Kusto.Language.Editor.RelatedElement)]},{a:2,n:"GetRelatedNameReferencesAndDeclarations",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"elements",pt:$n[0].List$1(Kusto.Language.Editor.RelatedElement),ps:1},{n:"options",pt:$n[8].FindRelatedOptions,ps:2}],sn:"GetRelatedNameReferencesAndDeclarations",rt:$n[2].Void,p:[$n[3].SyntaxToken,$n[0].List$1(Kusto.Language.Editor.RelatedElement),$n[8].FindRelatedOptions]},{a:1,n:"IsBracket",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsBracket",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsPartOfNameReferenceOrDeclaration",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsPartOfNameReferenceOrDeclaration",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsRelatable",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0}],sn:"IsRelatable",rt:$n[2].Boolean,p:[$n[3].SyntaxToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_code",t:4,rt:$n[4].KustoCode,sn:"_code",ro:!0}]}},$n);$m("Kusto.Language.Editor.OffsetCodeService",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[8].CodeService,$n[2].Int32],pi:[{n:"service",pt:$n[8].CodeService,ps:0},{n:"offset",pt:$n[2].Int32,ps:1}],sn:"ctor"},{ov:!0,a:2,n:"GetAnalyzerDiagnostics",t:8,pi:[{n:"analyzers",pt:$n[0].IReadOnlyList$1(System.String),ps:0},{n:"waitForAnalysis",pt:$n[2].Boolean,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"GetAnalyzerDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[0].IReadOnlyList$1(System.String),$n[2].Boolean,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetAnalyzers",t:8,sn:"GetAnalyzers",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.AnalyzerInfo)},{ov:!0,a:2,n:"GetClassifications",t:8,pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1},{n:"clipToRange",pt:$n[2].Boolean,ps:2},{n:"waitForAnalysis",pt:$n[2].Boolean,ps:3},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:4}],sn:"GetClassifications",rt:$n[8].ClassificationInfo,p:[$n[2].Int32,$n[2].Int32,$n[2].Boolean,$n[2].Boolean,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetClientParameters",t:8,sn:"GetClientParameters",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClientParameter)},{ov:!0,a:2,n:"GetClusterReferences",t:8,pi:[{n:"cancellationToken",pt:$n[5].CancellationToken,ps:0}],sn:"GetClusterReferences",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.ClusterReference),p:[$n[5].CancellationToken]},{ov:!0,a:2,n:"GetCompletionItems",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",pt:$n[8].CompletionOptions,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"GetCompletionItems",rt:$n[8].CompletionInfo,p:[$n[2].Int32,$n[8].CompletionOptions,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetDatabaseReferences",t:8,pi:[{n:"cancellationToken",pt:$n[5].CancellationToken,ps:0}],sn:"GetDatabaseReferences",rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.DatabaseReference),p:[$n[5].CancellationToken]},{ov:!0,a:2,n:"GetDiagnostics",t:8,pi:[{n:"waitForAnalysis",pt:$n[2].Boolean,ps:0},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:1}],sn:"GetDiagnostics",rt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),p:[$n[2].Boolean,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetElement",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:1}],sn:"GetElement",rt:$n[8].TextRange,p:[$n[2].Int32,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetFormattedText",t:8,pi:[{n:"options",pt:$n[8].FormattingOptions,ps:0},{n:"cursorPosition",pt:$n[2].Int32,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"GetFormattedText",rt:$n[8].FormattedText,p:[$n[8].FormattingOptions,$n[2].Int32,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetMinimalText",t:8,pi:[{n:"kind",pt:$n[8].MinimalTextKind,ps:0},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:1}],sn:"GetMinimalText",rt:$n[2].String,p:[$n[8].MinimalTextKind,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetOutlines",t:8,pi:[{n:"cancellationToken",pt:$n[5].CancellationToken,ps:0}],sn:"GetOutlines",rt:$n[8].OutlineInfo,p:[$n[5].CancellationToken]},{ov:!0,a:2,n:"GetQuickInfo",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",pt:$n[8].QuickInfoOptions,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"GetQuickInfo",rt:$n[8].QuickInfo,p:[$n[2].Int32,$n[8].QuickInfoOptions,$n[5].CancellationToken]},{ov:!0,a:2,n:"GetRelatedElements",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"options",pt:$n[8].FindRelatedOptions,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"GetRelatedElements",rt:$n[8].RelatedInfo,p:[$n[2].Int32,$n[8].FindRelatedOptions,$n[5].CancellationToken]},{ov:!0,a:2,n:"IsFeatureSupported",t:8,pi:[{n:"feature",pt:$n[2].String,ps:0},{n:"position",dv:-1,o:!0,pt:$n[2].Int32,ps:1}],sn:"IsFeatureSupported",rt:$n[2].Boolean,p:[$n[2].String,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ShouldAutoComplete",t:8,pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"key",pt:$n[2].Char,ps:1},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:2}],sn:"ShouldAutoComplete",rt:$n[2].Boolean,p:[$n[2].Int32,$n[2].Char,$n[5].CancellationToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TryGetCachedAnalyzerDiagnostics",t:8,pi:[{n:"diagnostics",out:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"TryGetCachedAnalyzerDiagnostics",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TryGetCachedDiagnostics",t:8,pi:[{n:"diagnostics",out:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic),ps:0}],sn:"TryGetCachedDiagnostics",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"WithOffset",t:8,pi:[{n:"offset",pt:$n[2].Int32,ps:0}],sn:"WithOffset",rt:$n[8].OffsetCodeService,p:[$n[2].Int32]},{ov:!0,a:2,n:"Kind",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[2].String,fg:"Kind"},fn:"Kind"},{ov:!0,a:2,n:"Text",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:1,n:"_offset",t:4,rt:$n[2].Int32,sn:"_offset",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_service",t:4,rt:$n[8].CodeService,sn:"_service",ro:!0}]}},$n);$m("Kusto.Language.Editor.OutlineInfo",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Editor.OutlineRange)],pi:[{n:"ranges",pt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.OutlineRange),ps:0}],sn:"ctor"},{a:2,n:"Ranges",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.OutlineRange),g:{a:2,n:"get_Ranges",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.OutlineRange),fg:"Ranges"},fn:"Ranges"},{a:2,n:"Empty",is:!0,t:4,rt:$n[8].OutlineInfo,sn:"Empty",ro:!0},{a:1,backing:!0,n:"<Ranges>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.OutlineRange),sn:"Ranges"}]}},$n);$m("Kusto.Language.Editor.OutlineRange",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].Int32,$n[2].Int32,$n[2].String],pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1},{n:"collapsedText",pt:$n[2].String,ps:2}],sn:"ctor"},{a:2,n:"CollapsedText",t:16,rt:$n[2].String,g:{a:2,n:"get_CollapsedText",t:8,rt:$n[2].String,fg:"CollapsedText"},fn:"CollapsedText"},{a:2,n:"Length",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Length",t:8,rt:$n[2].Int32,fg:"Length",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Length"},{a:2,n:"Start",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Start",t:8,rt:$n[2].Int32,fg:"Start",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Start"},{a:1,backing:!0,n:"<CollapsedText>k__BackingField",t:4,rt:$n[2].String,sn:"CollapsedText"},{a:1,backing:!0,n:"<Length>k__BackingField",t:4,rt:$n[2].Int32,sn:"Length",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Start>k__BackingField",t:4,rt:$n[2].Int32,sn:"Start",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Editor.PlacementStyle",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"NewLine",is:!0,t:4,rt:$n[8].PlacementStyle,sn:"NewLine",box:function($v){return Bridge.box($v,Kusto.Language.Editor.PlacementStyle,System.Enum.toStringFn(Kusto.Language.Editor.PlacementStyle))}},{a:2,n:"None",is:!0,t:4,rt:$n[8].PlacementStyle,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Editor.PlacementStyle,System.Enum.toStringFn(Kusto.Language.Editor.PlacementStyle))}},{a:2,n:"Smart",is:!0,t:4,rt:$n[8].PlacementStyle,sn:"Smart",box:function($v){return Bridge.box($v,Kusto.Language.Editor.PlacementStyle,System.Enum.toStringFn(Kusto.Language.Editor.PlacementStyle))}}]}},$n);$m("Kusto.Language.Editor.QuickInfo",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[System.Array.type(Kusto.Language.Editor.QuickInfoItem)],pi:[{n:"items",ip:!0,pt:System.Array.type(Kusto.Language.Editor.QuickInfoItem),ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].IEnumerable$1(Kusto.Language.Editor.QuickInfoItem)],pi:[{n:"items",pt:$n[0].IEnumerable$1(Kusto.Language.Editor.QuickInfoItem),ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"$ctor2"},{a:1,n:"BuildText",t:8,sn:"BuildText",rt:$n[2].String},{a:1,n:"GetKindText",is:!0,t:8,pi:[{n:"kind",pt:$n[8].QuickInfoKind,ps:0}],sn:"GetKindText",rt:$n[2].String,p:[$n[8].QuickInfoKind]},{a:2,n:"Items",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.QuickInfoItem),g:{a:2,n:"get_Items",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.QuickInfoItem),fg:"Items"},fn:"Items"},{a:2,n:"Text",t:16,rt:$n[2].String,g:{a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:2,n:"Empty",is:!0,t:4,rt:$n[8].QuickInfo,sn:"Empty"},{a:1,n:"_text",t:4,rt:$n[2].String,sn:"_text"},{a:1,backing:!0,n:"<Items>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.QuickInfoItem),sn:"Items"}]}},$n);$m("Kusto.Language.Editor.QuickInfoItem",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[8].QuickInfoKind,System.Array.type(Kusto.Language.Editor.ClassifiedText)],pi:[{n:"kind",pt:$n[8].QuickInfoKind,ps:0},{n:"parts",ip:!0,pt:System.Array.type(Kusto.Language.Editor.ClassifiedText),ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[8].QuickInfoKind,$n[0].IEnumerable$1(Kusto.Language.Editor.ClassifiedText)],pi:[{n:"kind",pt:$n[8].QuickInfoKind,ps:0},{n:"parts",pt:$n[0].IEnumerable$1(Kusto.Language.Editor.ClassifiedText),ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[8].QuickInfoKind,$n[2].String],pi:[{n:"kind",pt:$n[8].QuickInfoKind,ps:0},{n:"text",pt:$n[2].String,ps:1}],sn:"$ctor2"},{a:2,n:"Kind",t:16,rt:$n[8].QuickInfoKind,g:{a:2,n:"get_Kind",t:8,rt:$n[8].QuickInfoKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},fn:"Kind"},{a:2,n:"Parts",t:16,rt:$n[0].IReadOnlyCollection$1(Kusto.Language.Editor.ClassifiedText),g:{a:2,n:"get_Parts",t:8,rt:$n[0].IReadOnlyCollection$1(Kusto.Language.Editor.ClassifiedText),fg:"Parts"},fn:"Parts"},{a:2,n:"Text",t:16,rt:$n[2].String,g:{a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:1,n:"_text",t:4,rt:$n[2].String,sn:"_text"},{a:1,backing:!0,n:"<Kind>k__BackingField",t:4,rt:$n[8].QuickInfoKind,sn:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:1,backing:!0,n:"<Parts>k__BackingField",t:4,rt:$n[0].IReadOnlyCollection$1(Kusto.Language.Editor.ClassifiedText),sn:"Parts"}]}},$n);$m("Kusto.Language.Editor.QuickInfoKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"BuiltInFunction",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"BuiltInFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Cluster",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Cluster",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Column",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Column",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Command",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Command",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Database",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Database",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"DatabaseFunction",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"DatabaseFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Error",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Error",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Literal",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Literal",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"LocalFunction",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"LocalFunction",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Operator",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Operator",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Option",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Option",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Parameter",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Parameter",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Pattern",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Pattern",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Scalar",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Scalar",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Suggestion",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Suggestion",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Table",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Table",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Text",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Text",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Type",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Type",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Variable",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Variable",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}},{a:2,n:"Warning",is:!0,t:4,rt:$n[8].QuickInfoKind,sn:"Warning",box:function($v){return Bridge.box($v,Kusto.Language.Editor.QuickInfoKind,System.Enum.toStringFn(Kusto.Language.Editor.QuickInfoKind))}}]}},$n);$m("Kusto.Language.Editor.ClassifiedText",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[8].ClassificationKind,$n[2].String],pi:[{n:"kind",pt:$n[8].ClassificationKind,ps:0},{n:"text",pt:$n[2].String,ps:1}],sn:"ctor"},{a:2,n:"Kind",t:16,rt:$n[8].ClassificationKind,g:{a:2,n:"get_Kind",t:8,rt:$n[8].ClassificationKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},fn:"Kind"},{a:2,n:"Text",t:16,rt:$n[2].String,g:{a:2,n:"get_Text",t:8,rt:$n[2].String,fg:"Text"},fn:"Text"},{a:1,backing:!0,n:"<Kind>k__BackingField",t:4,rt:$n[8].ClassificationKind,sn:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.ClassificationKind,System.Enum.toStringFn(Kusto.Language.Editor.ClassificationKind))}},{a:1,backing:!0,n:"<Text>k__BackingField",t:4,rt:$n[2].String,sn:"Text"}]}},$n);$m("Kusto.Language.Editor.QuickInfoOptions",function(){return{att:1048577,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"disabledDiagnostics",pt:$n[2].String,ps:0}],sn:"ctor"},{a:1,n:"With",t:8,pi:[{n:"disabledDiagnostics",dv:null,o:!0,pt:$n[2].String,ps:0}],sn:"With",rt:$n[8].QuickInfoOptions,p:[$n[2].String]},{a:2,n:"WithDisabledDiagnostics",t:8,pi:[{n:"disabledDiagnostics",pt:$n[2].String,ps:0}],sn:"WithDisabledDiagnostics",rt:$n[8].QuickInfoOptions,p:[$n[2].String]},{a:2,n:"DisabledDiagnostics",t:16,rt:$n[2].String,g:{a:2,n:"get_DisabledDiagnostics",t:8,rt:$n[2].String,fg:"DisabledDiagnostics"},fn:"DisabledDiagnostics"},{a:2,n:"Default",is:!0,t:4,rt:$n[8].QuickInfoOptions,sn:"Default",ro:!0},{a:1,backing:!0,n:"<DisabledDiagnostics>k__BackingField",t:4,rt:$n[2].String,sn:"DisabledDiagnostics"}]}},$n);$m("Kusto.Language.Editor.RelatedInfo",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].IReadOnlyList$1(Kusto.Language.Editor.RelatedElement),$n[2].Int32],pi:[{n:"elements",pt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.RelatedElement),ps:0},{n:"currentIndex",pt:$n[2].Int32,ps:1}],sn:"ctor"},{a:2,n:"GetNextIndex",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetNextIndex",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetPreviousIndex",t:8,pi:[{n:"index",pt:$n[2].Int32,ps:0}],sn:"GetPreviousIndex",rt:$n[2].Int32,p:[$n[2].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"CurrentIndex",t:16,rt:$n[2].Int32,g:{a:2,n:"get_CurrentIndex",t:8,rt:$n[2].Int32,fg:"CurrentIndex",box:function($v){return Bridge.box($v,System.Int32)}},fn:"CurrentIndex"},{a:2,n:"Elements",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.RelatedElement),g:{a:2,n:"get_Elements",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.RelatedElement),fg:"Elements"},fn:"Elements"},{a:2,n:"Empty",is:!0,t:4,rt:$n[8].RelatedInfo,sn:"Empty",ro:!0},{a:1,backing:!0,n:"<CurrentIndex>k__BackingField",t:4,rt:$n[2].Int32,sn:"CurrentIndex",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Elements>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Editor.RelatedElement),sn:"Elements"}]}},$n);$m("Kusto.Language.Editor.RelatedElementKind",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Declaration",is:!0,t:4,rt:$n[8].RelatedElementKind,sn:"Declaration",box:function($v){return Bridge.box($v,Kusto.Language.Editor.RelatedElementKind,System.Enum.toStringFn(Kusto.Language.Editor.RelatedElementKind))}},{a:2,n:"Other",is:!0,t:4,rt:$n[8].RelatedElementKind,sn:"Other",box:function($v){return Bridge.box($v,Kusto.Language.Editor.RelatedElementKind,System.Enum.toStringFn(Kusto.Language.Editor.RelatedElementKind))}},{a:2,n:"Reference",is:!0,t:4,rt:$n[8].RelatedElementKind,sn:"Reference",box:function($v){return Bridge.box($v,Kusto.Language.Editor.RelatedElementKind,System.Enum.toStringFn(Kusto.Language.Editor.RelatedElementKind))}},{a:2,n:"Syntax",is:!0,t:4,rt:$n[8].RelatedElementKind,sn:"Syntax",box:function($v){return Bridge.box($v,Kusto.Language.Editor.RelatedElementKind,System.Enum.toStringFn(Kusto.Language.Editor.RelatedElementKind))}}]}},$n);$m("Kusto.Language.Editor.RelatedElement",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].Int32,$n[2].Int32,$n[8].RelatedElementKind],pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1},{n:"kind",pt:$n[8].RelatedElementKind,ps:2}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].Int32,$n[2].Int32,$n[8].RelatedElementKind,$n[2].Int32,$n[2].Int32],pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1},{n:"kind",pt:$n[8].RelatedElementKind,ps:2},{n:"cursorLeft",pt:$n[2].Int32,ps:3},{n:"cursorRight",pt:$n[2].Int32,ps:4}],sn:"$ctor1"},{a:2,n:"CursorLeft",t:16,rt:$n[2].Int32,g:{a:2,n:"get_CursorLeft",t:8,rt:$n[2].Int32,fg:"CursorLeft",box:function($v){return Bridge.box($v,System.Int32)}},fn:"CursorLeft"},{a:2,n:"CursorRight",t:16,rt:$n[2].Int32,g:{a:2,n:"get_CursorRight",t:8,rt:$n[2].Int32,fg:"CursorRight",box:function($v){return Bridge.box($v,System.Int32)}},fn:"CursorRight"},{a:2,n:"Kind",t:16,rt:$n[8].RelatedElementKind,g:{a:2,n:"get_Kind",t:8,rt:$n[8].RelatedElementKind,fg:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.RelatedElementKind,System.Enum.toStringFn(Kusto.Language.Editor.RelatedElementKind))}},fn:"Kind"},{a:1,backing:!0,n:"<CursorLeft>k__BackingField",t:4,rt:$n[2].Int32,sn:"CursorLeft",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<CursorRight>k__BackingField",t:4,rt:$n[2].Int32,sn:"CursorRight",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Kind>k__BackingField",t:4,rt:$n[8].RelatedElementKind,sn:"Kind",box:function($v){return Bridge.box($v,Kusto.Language.Editor.RelatedElementKind,System.Enum.toStringFn(Kusto.Language.Editor.RelatedElementKind))}}]}},$n);$m("Kusto.Language.Editor.SyntaxReference",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].Int32,$n[2].Int32],pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"ctor"}]}},$n);$m("Kusto.Language.Editor.TextRange",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].Int32,$n[2].Int32],pi:[{n:"start",pt:$n[2].Int32,ps:0},{n:"length",pt:$n[2].Int32,ps:1}],sn:"ctor"},{a:2,n:"End",t:16,rt:$n[2].Int32,g:{a:2,n:"get_End",t:8,rt:$n[2].Int32,fg:"End",box:function($v){return Bridge.box($v,System.Int32)}},fn:"End"},{a:2,n:"Length",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Length",t:8,rt:$n[2].Int32,fg:"Length",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Length"},{a:2,n:"Start",t:16,rt:$n[2].Int32,g:{a:2,n:"get_Start",t:8,rt:$n[2].Int32,fg:"Start",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Start"},{a:1,backing:!0,n:"<Length>k__BackingField",t:4,rt:$n[2].Int32,sn:"Length",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,backing:!0,n:"<Start>k__BackingField",t:4,rt:$n[2].Int32,sn:"Start",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Editor.UnknownCodeService",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[2].String],pi:[{n:"text",pt:$n[2].String,ps:0}],sn:"ctor"},{ov:!0,a:2,n:"Kind",t:16,rt:$n[2].String,g:{ov:!0,a:2,n:"get_Kind",t:8,rt:$n[2].String,fg:"Kind"},fn:"Kind"}]}},$n);$m("Kusto.Language.Binding.Conversion",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Any",is:!0,t:4,rt:$n[7].Conversion,sn:"Any",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Conversion,System.Enum.toStringFn(Kusto.Language.Binding.Conversion))}},{a:2,n:"Compatible",is:!0,t:4,rt:$n[7].Conversion,sn:"Compatible",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Conversion,System.Enum.toStringFn(Kusto.Language.Binding.Conversion))}},{a:2,n:"None",is:!0,t:4,rt:$n[7].Conversion,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Conversion,System.Enum.toStringFn(Kusto.Language.Binding.Conversion))}},{a:2,n:"Promotable",is:!0,t:4,rt:$n[7].Conversion,sn:"Promotable",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Conversion,System.Enum.toStringFn(Kusto.Language.Binding.Conversion))}}]}},$n);$m("Kusto.Language.Binding.ParameterMatchKind",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Cluster",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Cluster",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Compatible",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Compatible",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Database",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Database",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Exact",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Exact",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"None",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"None",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"NotType",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"NotType",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Number",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Number",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"OneOfTwo",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"OneOfTwo",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Orderable",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Orderable",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Promoted",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Promoted",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Scalar",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Scalar",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Summable",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Summable",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Table",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Table",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Tabular",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Tabular",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"Unknown",is:!0,t:4,rt:$n[7].ParameterMatchKind,sn:"Unknown",box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}}]}},$n);$m("Kusto.Language.Binding.Expansion",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[3].FunctionBody],pi:[{n:"body",pt:$n[3].FunctionBody,ps:0}],sn:"ctor"},{a:2,n:"Body",t:16,rt:$n[3].FunctionBody,g:{a:2,n:"get_Body",t:8,rt:$n[3].FunctionBody,fg:"Body"},fn:"Body"}]}},$n);$m("Kusto.Language.Binding.GlobalBindingCache",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:4,n:"CallSiteToExpansionMap",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Binding.CallSiteInfo,Kusto.Language.Binding.Expansion),sn:"CallSiteToExpansionMap"},{a:4,n:"CommonColumnsMap",t:4,rt:$n[0].Dictionary$2(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.TableSymbol),sn:"CommonColumnsMap",ro:!0},{a:4,n:"UnifiedNameAndTypeColumnsMap",t:4,rt:$n[0].Dictionary$2(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.TableSymbol),sn:"UnifiedNameAndTypeColumnsMap",ro:!0},{a:4,n:"UnifiedNameColumnsMap",t:4,rt:$n[0].Dictionary$2(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.TableSymbol),sn:"UnifiedNameColumnsMap",ro:!0}]}},$n);$m("Kusto.Language.Binding.LocalBindingCache",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:4,n:"CallSiteToExpansionMap",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Binding.CallSiteInfo,Kusto.Language.Binding.Expansion),sn:"CallSiteToExpansionMap"},{a:4,n:"SignaturesComputingExpansion",t:4,rt:$n[0].HashSet$1(Kusto.Language.Symbols.Signature),sn:"SignaturesComputingExpansion",ro:!0}]}},$n);$m("Kusto.Language.Binding.CallSiteInfo",function(){return{nested:[$n[7].CallSiteInfo.Comparer],att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.VariableSymbol)],pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"locals",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.VariableSymbol),ps:1}],sn:"ctor"},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[2].String},{a:2,n:"Locals",t:16,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.VariableSymbol),g:{a:2,n:"get_Locals",t:8,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.VariableSymbol),fg:"Locals"},fn:"Locals"},{a:2,n:"Signature",t:16,rt:$n[1].Signature,g:{a:2,n:"get_Signature",t:8,rt:$n[1].Signature,fg:"Signature"},fn:"Signature"},{a:1,backing:!0,n:"<Locals>k__BackingField",t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.VariableSymbol),sn:"Locals"},{a:1,backing:!0,n:"<Signature>k__BackingField",t:4,rt:$n[1].Signature,sn:"Signature"}]}},$n);$m("Kusto.Language.Binding.CallSiteInfo.Comparer",function(){return{td:$n[7].CallSiteInfo,att:1048581,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Equals",t:8,pi:[{n:"x",pt:$n[7].CallSiteInfo,ps:0},{n:"y",pt:$n[7].CallSiteInfo,ps:1}],sn:"equals2",rt:$n[2].Boolean,p:[$n[7].CallSiteInfo,$n[7].CallSiteInfo],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetHashCode",t:8,pi:[{n:"obj",pt:$n[7].CallSiteInfo,ps:0}],sn:"getHashCode2",rt:$n[2].Int32,p:[$n[7].CallSiteInfo],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Instance",is:!0,t:4,rt:$n[7].CallSiteInfo.Comparer,sn:"Instance",ro:!0}]}},$n);$m("Kusto.Language.Binding.Binder",function(){return{nested:[$n[7].Binder.ScopeKind,$n[7].Binder.SignatureResult,$n[7].Binder.ProjectionStyle,$n[7].Binder.ContextBuilder,$n[7].Binder.AsContextBuilder,$n[7].Binder.NodeBinder,$n[7].Binder.SearchPredicateBinder,$n[7].Binder.TreeBinder],att:1048832,a:4,m:[{a:1,n:".ctor",t:1,p:[$n[4].GlobalState,$n[1].ClusterSymbol,$n[1].DatabaseSymbol,$n[1].FunctionSymbol,$n[7].LocalScope,$n[7].GlobalBindingCache,$n[7].LocalBindingCache,Function,$n[5].CancellationToken],pi:[{n:"globals",pt:$n[4].GlobalState,ps:0},{n:"currentCluster",pt:$n[1].ClusterSymbol,ps:1},{n:"currentDatabase",pt:$n[1].DatabaseSymbol,ps:2},{n:"currentFunction",pt:$n[1].FunctionSymbol,ps:3},{n:"outerScope",pt:$n[7].LocalScope,ps:4},{n:"globalBindingCache",pt:$n[7].GlobalBindingCache,ps:5},{n:"localBindingCache",pt:$n[7].LocalBindingCache,ps:6},{n:"semanticInfoSetter",pt:Function,ps:7},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:8}],sn:"ctor"},{a:1,n:"AddDeclarationToLocalScope",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"AddDeclarationToLocalScope",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{a:1,n:"AddDeclarationsToLocalScope",t:8,pi:[{n:"declarations",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),ps:0}],sn:"AddDeclarationsToLocalScope",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter))]},{a:1,n:"AddDeclarationsToLocalScope",t:8,pi:[{n:"declarations",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),ps:0}],sn:"AddDeclarationsToLocalScope$1",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration))]},{a:1,n:"AddFunctionTupleResultColumn",t:8,pi:[{n:"function",pt:$n[1].FunctionSymbol,ps:0},{n:"column",pt:$n[1].ColumnSymbol,ps:1},{n:"builder",pt:$n[7].ProjectionBuilder,ps:2},{n:"doNotRepeat",pt:$n[2].Boolean,ps:3},{n:"isAggregate",pt:$n[2].Boolean,ps:4}],sn:"AddFunctionTupleResultColumn",rt:$n[2].Void,p:[$n[1].FunctionSymbol,$n[1].ColumnSymbol,$n[7].ProjectionBuilder,$n[2].Boolean,$n[2].Boolean]},{a:1,n:"AddLetDeclarationToScope",t:8,pi:[{n:"scope",pt:$n[7].LocalScope,ps:0},{n:"statement",pt:$n[3].LetStatement,ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"AddLetDeclarationToScope",rt:$n[2].Void,p:[$n[7].LocalScope,$n[3].LetStatement,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"AddStepDeclarationsToLocalScope",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"AddStepDeclarationsToLocalScope",rt:$n[2].Void,p:[$n[3].ScanOperator]},{a:1,n:"AddTableColumns",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0},{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:1}],sn:"AddTableColumns",rt:$n[2].Void,p:[$n[1].Symbol,$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:1,n:"AddTables",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0},{n:"tables",pt:$n[0].List$1(Kusto.Language.Symbols.TableSymbol),ps:1}],sn:"AddTables",rt:$n[2].Void,p:[$n[1].Symbol,$n[0].List$1(Kusto.Language.Symbols.TableSymbol)]},{a:1,n:"AllAreConstant",t:8,pi:[{n:"expressions",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:0}],sn:"AllAreConstant",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"AllowLooseParameterMatching",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0}],sn:"AllowLooseParameterMatching",rt:$n[2].Boolean,p:[$n[1].Signature],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ArgumentsHaveErrorsOrUnknown",is:!0,t:8,pi:[{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:0}],sn:"ArgumentsHaveErrorsOrUnknown",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"BindColumnDeclaration",t:8,pi:[{n:"node",pt:$n[3].FunctionParameter,ps:0}],sn:"BindColumnDeclaration",rt:$n[2].Void,p:[$n[3].FunctionParameter]},{a:1,n:"BindColumnDeclarations",t:8,pi:[{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),ps:0}],sn:"BindColumnDeclarations",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter))]},{a:1,n:"BindFunctionCall",t:8,pi:[{n:"functionCall",pt:$n[3].FunctionCallExpression,ps:0},{n:"fn",pt:$n[1].FunctionSymbol,ps:1}],sn:"BindFunctionCall",rt:$n[3].SemanticInfo,p:[$n[3].FunctionCallExpression,$n[1].FunctionSymbol]},{a:1,n:"BindFunctionCallOrPattern",t:8,pi:[{n:"functionCall",pt:$n[3].FunctionCallExpression,ps:0}],sn:"BindFunctionCallOrPattern",rt:$n[3].SemanticInfo,p:[$n[3].FunctionCallExpression]},{a:1,n:"BindName",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"match",pt:$n[1].SymbolMatch,ps:1},{n:"location",pt:$n[3].Expression,ps:2}],sn:"BindName",rt:$n[3].SemanticInfo,p:[$n[2].String,$n[1].SymbolMatch,$n[3].Expression]},{a:1,n:"BindParameterDeclaration",t:8,pi:[{n:"node",pt:$n[3].FunctionParameter,ps:0}],sn:"BindParameterDeclaration",rt:$n[2].Void,p:[$n[3].FunctionParameter]},{a:1,n:"BindParameterDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameAndTypeDeclaration,ps:0}],sn:"BindParameterDeclaration$1",rt:$n[2].Void,p:[$n[3].NameAndTypeDeclaration]},{a:1,n:"BindParameterDeclarations",t:8,pi:[{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),ps:0}],sn:"BindParameterDeclarations",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter))]},{a:1,n:"BindParameterDeclarations",t:8,pi:[{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),ps:0}],sn:"BindParameterDeclarations$1",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration))]},{a:1,n:"BindPattern",t:8,pi:[{n:"functionCall",pt:$n[3].FunctionCallExpression,ps:0},{n:"pattern",pt:$n[1].PatternSymbol,ps:1}],sn:"BindPattern",rt:$n[3].SemanticInfo,p:[$n[3].FunctionCallExpression,$n[1].PatternSymbol]},{a:1,n:"BindStepDeclarations",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"BindStepDeclarations",rt:$n[2].Void,p:[$n[3].ScanOperator]},{a:1,n:"BuildColumnNameMap",is:!0,t:8,pi:[{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"BuildColumnNameMap",rt:$n[0].Dictionary$2(System.String,System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol)),p:[$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:1,n:"CanCache",t:8,pi:[{n:"tables",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),ps:0}],sn:"CanCache",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckArgument",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:1},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:2},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:3},{n:"argumentIndex",pt:$n[2].Int32,ps:4},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:5}],sn:"CheckArgument",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[2].Int32,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CheckArgumentCount",is:!0,t:8,pi:[{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:0},{n:"expectedCount",pt:$n[2].Int32,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"CheckArgumentCount",rt:$n[2].Boolean,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[2].Int32,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckDataValueTypes",t:8,pi:[{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:0},{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"CheckDataValueTypes",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CheckIsAnyType",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"types",pt:$n[0].IReadOnlyList$1(System.Object),ps:1},{n:"conversionKind",pt:$n[7].Conversion,ps:2},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],tpc:1,tprm:["T"],sn:"CheckIsAnyType",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].IReadOnlyList$1(System.Object),$n[7].Conversion,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsCluster",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsCluster",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsColumn",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsColumn",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsConstant",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsConstant",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsDatabase",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsDatabase",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsExactType",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"CheckIsExactType",rt:$n[2].Boolean,p:[$n[3].Expression,$n[1].TypeSymbol,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsIdentifierNameDeclaration",t:8,pi:[{n:"name",pt:$n[3].NameDeclaration,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsIdentifierNameDeclaration",rt:$n[2].Boolean,p:[$n[3].NameDeclaration,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsInteger",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsInteger",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsIntegerOrDynamic",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsIntegerOrDynamic",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsIntervalType",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"rangeType",pt:$n[1].TypeSymbol,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"CheckIsIntervalType",rt:$n[2].Boolean,p:[$n[3].Expression,$n[1].TypeSymbol,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsLiteral",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsLiteral",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsLiteralOrName",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsLiteralOrName",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsLiteralValue",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsLiteralValue",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsNotType",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"type",pt:$n[1].Symbol,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"CheckIsNotType",rt:$n[2].Boolean,p:[$n[3].Expression,$n[1].Symbol,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsNumber",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsNumber",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsOrderable",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsOrderable",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsRealOrDecimal",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsRealOrDecimal",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsScalar",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"resultType",dv:null,o:!0,pt:$n[1].Symbol,ps:2}],sn:"CheckIsScalar",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic),$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsSingleColumnTable",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"resultType",dv:null,o:!0,pt:$n[1].Symbol,ps:2}],sn:"CheckIsSingleColumnTable",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic),$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsStringOrDynamic",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsStringOrDynamic",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsSummable",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckIsSummable",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsTabular",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"resultType",dv:null,o:!0,pt:$n[1].Symbol,ps:2}],sn:"CheckIsTabular",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic),$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsToken",t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"values",pt:$n[0].IReadOnlyList$1(System.Object),ps:1},{n:"caseSensitive",pt:$n[2].Boolean,ps:2},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],sn:"CheckIsToken",rt:$n[2].Boolean,p:[$n[3].SyntaxToken,$n[0].IReadOnlyList$1(System.Object),$n[2].Boolean,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsTokenLiteral",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"values",pt:$n[0].IReadOnlyList$1(System.Object),ps:1},{n:"caseSensitive",pt:$n[2].Boolean,ps:2},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],sn:"CheckIsTokenLiteral",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].IReadOnlyList$1(System.Object),$n[2].Boolean,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsType",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"conversionKind",pt:$n[7].Conversion,ps:2},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],sn:"CheckIsType",rt:$n[2].Boolean,p:[$n[3].Expression,$n[1].TypeSymbol,$n[7].Conversion,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckIsTypeOrDynamic",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"canPromote",pt:$n[2].Boolean,ps:2},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],sn:"CheckIsTypeOrDynamic",rt:$n[2].Boolean,p:[$n[3].Expression,$n[1].TypeSymbol,$n[2].Boolean,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckLiteralStringNotEmpty",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckLiteralStringNotEmpty",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckLiteralValue",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"values",pt:$n[0].IReadOnlyList$1(System.Object),ps:1},{n:"caseSensitive",pt:$n[2].Boolean,ps:2},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],sn:"CheckLiteralValue",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].IReadOnlyList$1(System.Object),$n[2].Boolean,$n[0].List$1(Kusto.Language.Diagnostic)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckQueryOperatorParameter",t:8,pi:[{n:"parameter",pt:$n[3].NamedParameter,ps:0},{n:"qop",pt:$n[4].QueryOperatorParameter,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"CheckQueryOperatorParameter",rt:$n[2].Void,p:[$n[3].NamedParameter,$n[4].QueryOperatorParameter,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CheckQueryOperatorParameter",t:8,pi:[{n:"parameter",pt:$n[3].NamedParameter,ps:0},{n:"queryOperatorParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),ps:1},{n:"namesAlreadySpecified",pt:$n[0].HashSet$1(System.String),ps:2},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],sn:"CheckQueryOperatorParameter$1",rt:$n[2].Void,p:[$n[3].NamedParameter,$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),$n[0].HashSet$1(System.String),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CheckQueryOperatorParameters",t:8,pi:[{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:0},{n:"queryParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"CheckQueryOperatorParameters",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CheckQueryOperatorParameters",t:8,pi:[{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),ps:0},{n:"queryParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"CheckQueryOperatorParameters$1",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CheckSignature",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"location",pt:$n[3].SyntaxElement,ps:3},{n:"dx",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:4}],sn:"CheckSignature",rt:$n[2].Void,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[3].SyntaxElement,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"ComputeFunctionBodyFacts",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"body",pt:$n[3].FunctionBody,ps:1}],sn:"ComputeFunctionBodyFacts",rt:$n[1].FunctionBodyFacts,p:[$n[1].Signature,$n[3].FunctionBody],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}},{a:1,n:"Contains",is:!0,t:8,pi:[{n:"values",pt:$n[0].IReadOnlyList$1(System.Object),ps:0},{n:"value",pt:$n[2].Object,ps:1},{n:"caseSensitive",pt:$n[2].Boolean,ps:2}],sn:"Contains",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(System.Object),$n[2].Object,$n[2].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CreateColumnsFromSchema",is:!0,t:8,pi:[{n:"declaration",pt:$n[3].NameAndTypeDeclaration,ps:0},{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:1},{n:"declaredNames",pt:$n[0].HashSet$1(System.String),ps:2},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],sn:"CreateColumnsFromSchema",rt:$n[2].Void,p:[$n[3].NameAndTypeDeclaration,$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].HashSet$1(System.String),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CreateColumnsFromSchema",is:!0,t:8,pi:[{n:"schema",pt:$n[3].SchemaTypeExpression,ps:0},{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:1},{n:"declaredNames",pt:$n[0].HashSet$1(System.String),ps:2},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],sn:"CreateColumnsFromSchema$1",rt:$n[2].Void,p:[$n[3].SchemaTypeExpression,$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].HashSet$1(System.String),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CreateProjectionColumns",t:8,pi:[{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:0},{n:"builder",pt:$n[7].ProjectionBuilder,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2},{n:"style",dv:0,o:!0,pt:$n[7].Binder.ProjectionStyle,ps:3},{n:"doNotRepeat",dv:!1,o:!0,pt:$n[2].Boolean,ps:4}],sn:"CreateProjectionColumns$1",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[7].ProjectionBuilder,$n[0].List$1(Kusto.Language.Diagnostic),$n[7].Binder.ProjectionStyle,$n[2].Boolean]},{a:1,n:"CreateProjectionColumns",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"builder",pt:$n[7].ProjectionBuilder,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2},{n:"style",dv:0,o:!0,pt:$n[7].Binder.ProjectionStyle,ps:3},{n:"doNotRepeat",dv:!1,o:!0,pt:$n[2].Boolean,ps:4},{n:"columnType",dv:null,o:!0,pt:$n[1].TypeSymbol,ps:5},{n:"columnName",dv:null,o:!0,pt:$n[2].String,ps:6}],sn:"CreateProjectionColumns",rt:$n[2].Void,p:[$n[3].Expression,$n[7].ProjectionBuilder,$n[0].List$1(Kusto.Language.Diagnostic),$n[7].Binder.ProjectionStyle,$n[2].Boolean,$n[1].TypeSymbol,$n[2].String]},{a:1,n:"CreateSemanticInfo",is:!0,t:8,pi:[{n:"referencedSymbol",pt:$n[1].Symbol,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].IEnumerable$1(Kusto.Language.Diagnostic),ps:1}],sn:"CreateSemanticInfo",rt:$n[3].SemanticInfo,p:[$n[1].Symbol,$n[0].IEnumerable$1(Kusto.Language.Diagnostic)]},{a:1,n:"DeclareColumnName",is:!0,t:8,pi:[{n:"declaredNames",pt:$n[0].HashSet$1(System.String),ps:0},{n:"newName",pt:$n[2].String,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2},{n:"location",pt:$n[3].SyntaxNode,ps:3}],sn:"DeclareColumnName",rt:$n[2].Boolean,p:[$n[0].HashSet$1(System.String),$n[2].String,$n[0].List$1(Kusto.Language.Diagnostic),$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"DefaultSetSemanticInfo",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"info",pt:$n[3].SemanticInfo,ps:1}],sn:"DefaultSetSemanticInfo",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[3].SemanticInfo]},{a:1,n:"GetArgumentScope",t:8,pi:[{n:"fc",pt:$n[3].FunctionCallExpression,ps:0},{n:"outerScope",pt:$n[7].Binder.ScopeKind,ps:1}],sn:"GetArgumentScope",rt:$n[7].Binder.ScopeKind,p:[$n[3].FunctionCallExpression,$n[7].Binder.ScopeKind],box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ScopeKind,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ScopeKind))}},{a:1,n:"GetArgumentsAndTypes",t:8,pi:[{n:"functionCall",pt:$n[3].FunctionCallExpression,ps:0},{n:"arguments",pt:$n[0].List$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].List$1(Kusto.Language.Symbols.TypeSymbol),ps:2}],sn:"GetArgumentsAndTypes",rt:$n[2].Void,p:[$n[3].FunctionCallExpression,$n[0].List$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.TypeSymbol)]},{a:1,n:"GetArgumentsAsLocals",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2}],sn:"GetArgumentsAsLocals",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.VariableSymbol),p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:1,n:"GetBestMatchingSignatures",t:8,pi:[{n:"signatures",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"result",pt:$n[0].List$1(Kusto.Language.Symbols.Signature),ps:3}],sn:"GetBestMatchingSignatures",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].List$1(Kusto.Language.Symbols.Signature)]},{a:1,n:"GetBinaryOperatorInfo",t:8,pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"left",pt:$n[3].Expression,ps:1},{n:"right",pt:$n[3].Expression,ps:2},{n:"location",pt:$n[3].SyntaxElement,ps:3}],sn:"GetBinaryOperatorInfo$1",rt:$n[3].SemanticInfo,p:[$n[1].OperatorKind,$n[3].Expression,$n[3].Expression,$n[3].SyntaxElement]},{a:1,n:"GetBinaryOperatorInfo",t:8,pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"left",pt:$n[3].Expression,ps:1},{n:"leftType",pt:$n[1].TypeSymbol,ps:2},{n:"right",pt:$n[3].Expression,ps:3},{n:"rightType",pt:$n[1].TypeSymbol,ps:4},{n:"location",pt:$n[3].SyntaxElement,ps:5}],sn:"GetBinaryOperatorInfo",rt:$n[3].SemanticInfo,p:[$n[1].OperatorKind,$n[3].Expression,$n[1].TypeSymbol,$n[3].Expression,$n[1].TypeSymbol,$n[3].SyntaxElement]},{a:4,n:"GetCallSiteExpansion",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"outerScope",dv:null,o:!0,pt:$n[7].LocalScope,ps:3}],sn:"GetCallSiteExpansion",rt:$n[7].Expansion,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[7].LocalScope]},{a:1,n:"GetCallSiteInfo",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2}],sn:"GetCallSiteInfo",rt:$n[7].CallSiteInfo,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:1,n:"GetCluster",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetCluster",rt:$n[1].ClusterSymbol,p:[$n[2].String]},{a:1,n:"GetColumnsInColumnList",t:8,pi:[{n:"expressions",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:0},{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"GetColumnsInColumnList",rt:$n[2].Void,p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:2,n:"GetCommonArgumentType",is:!0,t:8,pi:[{n:"argumentParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:1}],sn:"GetCommonArgumentType",rt:$n[1].TypeSymbol,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:4,n:"GetCommonColumns",is:!0,t:8,pi:[{n:"tables",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),ps:0},{n:"common",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:1}],sn:"GetCommonColumns",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:1,n:"GetCommonColumns",is:!0,t:8,pi:[{n:"columnsA",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),ps:0},{n:"columnsB",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),ps:1},{n:"result",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:2}],sn:"GetCommonColumns$2",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"GetCommonColumns",is:!0,t:8,pi:[{n:"columnsA",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),ps:0},{n:"columnsB",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),ps:1},{n:"result",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:2}],sn:"GetCommonColumns$1",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:1,n:"GetCommonReturnType",t:8,pi:[{n:"signatures",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2}],sn:"GetCommonReturnType",rt:$n[1].TypeSymbol,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Signature),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:1,n:"GetCommonScalarType",is:!0,t:8,pi:[{n:"types",ip:!0,pt:System.Array.type(Kusto.Language.Symbols.TypeSymbol),ps:0}],sn:"GetCommonScalarType",rt:$n[1].TypeSymbol,p:[System.Array.type(Kusto.Language.Symbols.TypeSymbol)]},{a:2,n:"GetComputedReturnType",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"globals",pt:$n[4].GlobalState,ps:1},{n:"argumentTypes",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2}],sn:"GetComputedReturnType",rt:$n[1].TypeSymbol,p:[$n[1].Signature,$n[4].GlobalState,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:1,n:"GetComputedSignatureResult",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2}],sn:"GetComputedSignatureResult",rt:$n[7].Binder.SignatureResult,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:1,n:"GetDatabase",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"cluster",dv:null,o:!0,pt:$n[1].ClusterSymbol,ps:1}],sn:"GetDatabase",rt:$n[1].DatabaseSymbol,p:[$n[2].String,$n[1].ClusterSymbol]},{a:1,n:"GetDatabaseFunctionResult",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"location",pt:$n[3].SyntaxNode,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"GetDatabaseFunctionResult",rt:$n[1].TypeSymbol,p:[$n[2].String,$n[3].SyntaxNode,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:2,n:"GetDeclaredAndInferredColumns",t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0}],sn:"GetDeclaredAndInferredColumns",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),p:[$n[1].TableSymbol]},{a:1,n:"GetDeclaredAndInferredColumns",t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0},{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:1}],sn:"GetDeclaredAndInferredColumns$1",rt:$n[2].Void,p:[$n[1].TableSymbol,$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:4,n:"GetDeclaredType",is:!0,t:8,pi:[{n:"typeExpression",pt:$n[3].TypeExpression,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"binder",dv:null,o:!0,pt:$n[7].Binder,ps:2}],sn:"GetDeclaredType",rt:$n[1].TypeSymbol,p:[$n[3].TypeExpression,$n[0].List$1(Kusto.Language.Diagnostic),$n[7].Binder]},{a:1,n:"GetDefaultOuterScope",is:!0,t:8,pi:[{n:"globals",pt:$n[4].GlobalState,ps:0}],sn:"GetDefaultOuterScope",rt:$n[7].LocalScope,p:[$n[4].GlobalState]},{a:1,n:"GetDeferredCallSiteExpansion",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",dv:null,o:!0,pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"outerScope",dv:null,o:!0,pt:$n[7].LocalScope,ps:3}],sn:"GetDeferredCallSiteExpansion",rt:Function,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[7].LocalScope]},{a:2,n:"GetExpressionDeclaredName",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"GetExpressionDeclaredName",rt:$n[2].String,p:[$n[3].Expression]},{a:2,n:"GetExpressionResultName",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0},{n:"defaultName",dv:"",o:!0,pt:$n[2].String,ps:1},{n:"row",dv:null,o:!0,pt:$n[1].TableSymbol,ps:2}],sn:"GetExpressionResultName",rt:$n[2].String,p:[$n[3].Expression,$n[2].String,$n[1].TableSymbol]},{a:1,n:"GetExternalTableFunctionResult",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"location",pt:$n[3].SyntaxNode,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"GetExternalTableFunctionResult",rt:$n[1].TypeSymbol,p:[$n[2].String,$n[3].SyntaxNode,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"GetFindColumnsTable",t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"GetFindColumnsTable",rt:$n[1].TableSymbol,p:[$n[3].FindOperator]},{a:1,n:"GetFindTables",t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"GetFindTables",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),p:[$n[3].FindOperator]},{a:1,n:"GetFunctionBodyFacts",t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"GetFunctionBodyFacts",rt:$n[1].FunctionBodyFacts,p:[$n[3].Expression],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.FunctionBodyFacts,System.Enum.toStringFn(Kusto.Language.Symbols.FunctionBodyFacts))}},{a:1,n:"GetFunctionBodyText",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0}],sn:"GetFunctionBodyText",rt:$n[2].String,p:[$n[1].Signature]},{a:1,n:"GetFunctionResultName",is:!0,t:8,pi:[{n:"fc",pt:$n[3].FunctionCallExpression,ps:0},{n:"defaultName",dv:"",o:!0,pt:$n[2].String,ps:1},{n:"row",dv:null,o:!0,pt:$n[1].TableSymbol,ps:2}],sn:"GetFunctionResultName",rt:$n[2].String,p:[$n[3].FunctionCallExpression,$n[2].String,$n[1].TableSymbol]},{a:1,n:"GetFunctionsInScope",t:8,pi:[{n:"kind",pt:$n[7].Binder.ScopeKind,ps:0},{n:"name",pt:$n[2].String,ps:1},{n:"include",pt:$n[4].IncludeFunctionKind,ps:2},{n:"functions",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:3}],sn:"GetFunctionsInScope",rt:$n[2].Void,p:[$n[7].Binder.ScopeKind,$n[2].String,$n[4].IncludeFunctionKind,$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"GetFunctionsInScope",t:8,pi:[{n:"match",pt:$n[1].SymbolMatch,ps:0},{n:"name",pt:$n[2].String,ps:1},{n:"include",pt:$n[4].IncludeFunctionKind,ps:2},{n:"functions",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:3}],sn:"GetFunctionsInScope$1",rt:$n[2].Void,p:[$n[1].SymbolMatch,$n[2].String,$n[4].IncludeFunctionKind,$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"GetIsConstant",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0}],sn:"GetIsConstant",rt:$n[2].Boolean,p:[$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"GetLocalFunctionsInScope",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"functions",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:1}],sn:"GetLocalFunctionsInScope",rt:$n[2].Void,p:[$n[2].String,$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"GetMatchingPatterns",t:8,pi:[{n:"signatures",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.PatternSignature),ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"matchingSignatures",pt:$n[0].List$1(Kusto.Language.Symbols.PatternSignature),ps:2}],sn:"GetMatchingPatterns",rt:$n[2].Void,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.PatternSignature),$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].List$1(Kusto.Language.Symbols.PatternSignature)]},{a:1,n:"GetMaterializedViewFunctionResult",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"location",pt:$n[3].SyntaxNode,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"GetMaterializedViewFunctionResult",rt:$n[1].TypeSymbol,p:[$n[2].String,$n[3].SyntaxNode,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:2,n:"GetNameDeclarationName",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"GetNameDeclarationName",rt:$n[2].String,p:[$n[3].Expression]},{a:1,n:"GetNamedArgumentNameNode",is:!0,t:8,pi:[{n:"argument",pt:$n[3].Expression,ps:0}],sn:"GetNamedArgumentNameNode",rt:$n[3].SyntaxNode,p:[$n[3].Expression]},{a:1,n:"GetOpenCluster",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"GetOpenCluster",rt:$n[1].ClusterSymbol,p:[$n[2].String]},{a:1,n:"GetOpenColumn",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"table",pt:$n[1].TableSymbol,ps:1}],sn:"GetOpenColumn",rt:$n[1].ColumnSymbol,p:[$n[2].String,$n[1].TableSymbol]},{a:1,n:"GetOpenDatabase",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"cluster",pt:$n[1].ClusterSymbol,ps:1}],sn:"GetOpenDatabase",rt:$n[1].DatabaseSymbol,p:[$n[2].String,$n[1].ClusterSymbol]},{a:1,n:"GetOpenTable",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"database",pt:$n[1].DatabaseSymbol,ps:1}],sn:"GetOpenTable",rt:$n[1].TableSymbol,p:[$n[2].String,$n[1].DatabaseSymbol]},{a:1,n:"GetOperatorInfo",t:8,pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"location",pt:$n[3].SyntaxElement,ps:2}],sn:"GetOperatorInfo",rt:$n[3].SemanticInfo,p:[$n[1].OperatorKind,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[3].SyntaxElement]},{a:1,n:"GetOperatorInfo",t:8,pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"location",pt:$n[3].SyntaxElement,ps:3}],sn:"GetOperatorInfo$1",rt:$n[3].SemanticInfo,p:[$n[1].OperatorKind,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[3].SyntaxElement]},{a:1,n:"GetOperatorKind",is:!0,t:8,pi:[{n:"kind",pt:$n[3].SyntaxKind,ps:0}],sn:"GetOperatorKind",rt:$n[1].OperatorKind,p:[$n[3].SyntaxKind],box:function($v){return Bridge.box($v,Kusto.Language.Symbols.OperatorKind,System.Enum.toStringFn(Kusto.Language.Symbols.OperatorKind))}},{a:1,n:"GetParameterMatchCount",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2}],sn:"GetParameterMatchCount",rt:$n[2].Int32,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"GetParameterMatchKind",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"parameter",pt:$n[1].Parameter,ps:3},{n:"argument",pt:$n[3].Expression,ps:4},{n:"argumentType",pt:$n[1].TypeSymbol,ps:5}],sn:"GetParameterMatchKind",rt:$n[7].ParameterMatchKind,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[1].Parameter,$n[3].Expression,$n[1].TypeSymbol],box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:2,n:"GetParameterMatchKind",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"parameter",pt:$n[1].Parameter,ps:3},{n:"argument",pt:$n[3].Expression,ps:4},{n:"argumentType",pt:$n[1].TypeSymbol,ps:5},{n:"allowLooseParameterMatching",pt:$n[2].Boolean,ps:6}],sn:"GetParameterMatchKind",rt:$n[7].ParameterMatchKind,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[1].Parameter,$n[3].Expression,$n[1].TypeSymbol,$n[2].Boolean],box:function($v){return Bridge.box($v,Kusto.Language.Binding.ParameterMatchKind,System.Enum.toStringFn(Kusto.Language.Binding.ParameterMatchKind))}},{a:1,n:"GetQueryOperatorParameter",is:!0,t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"parameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter),ps:1}],sn:"GetQueryOperatorParameter",rt:$n[4].QueryOperatorParameter,p:[$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.QueryOperatorParameter)]},{a:1,n:"GetReferencedColumns",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:1},{n:"diagnostics",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"GetReferencedColumns",rt:$n[2].Void,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"GetReferencedColumnsInTree",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:1}],sn:"GetReferencedColumnsInTree",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:1,n:"GetReferencedSymbol",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0}],sn:"GetReferencedSymbol",rt:$n[1].Symbol,p:[$n[3].Expression]},{a:1,n:"GetReferencedTables",t:8,pi:[{n:"list",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),ps:0}],sn:"GetReferencedTables",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),p:[$n[3].SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))]},{a:1,n:"GetRepresentativeType",is:!0,t:8,pi:[{n:"parameter",pt:$n[1].Parameter,ps:0}],sn:"GetRepresentativeType",rt:$n[1].TypeSymbol,p:[$n[1].Parameter]},{a:1,n:"GetResultType",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"GetResultType",rt:$n[1].TypeSymbol,p:[$n[1].Symbol]},{a:1,n:"GetResultType",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0}],sn:"GetResultType",rt:$n[1].TypeSymbol,p:[$n[3].Expression]},{a:1,n:"GetResultTypeOrError",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0}],sn:"GetResultTypeOrError",rt:$n[1].TypeSymbol,p:[$n[3].Expression]},{a:1,n:"GetReturnType",t:8,pi:[{n:"signatures",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.PatternSignature),ps:0}],sn:"GetReturnType",rt:$n[1].TypeSymbol,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.PatternSignature)]},{a:2,n:"GetRowScope",is:!0,t:8,pi:[{n:"tree",pt:$n[3].SyntaxTree,ps:0},{n:"position",pt:$n[2].Int32,ps:1},{n:"globals",pt:$n[4].GlobalState,ps:2},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:3}],sn:"GetRowScope",rt:$n[1].TableSymbol,p:[$n[3].SyntaxTree,$n[2].Int32,$n[4].GlobalState,$n[5].CancellationToken]},{a:1,n:"GetScanStepTuple",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"GetScanStepTuple",rt:$n[1].TupleSymbol,p:[$n[3].ScanOperator]},{a:1,n:"GetSearchColumnsTable",t:8,pi:[{n:"node",pt:$n[3].SearchOperator,ps:0}],sn:"GetSearchColumnsTable",rt:$n[1].TableSymbol,p:[$n[3].SearchOperator]},{a:1,n:"GetSearchTables",t:8,pi:[{n:"node",pt:$n[3].SearchOperator,ps:0}],sn:"GetSearchTables",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),p:[$n[3].SearchOperator]},{a:1,n:"GetSemanticInfo",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"GetSemanticInfo",rt:$n[3].SemanticInfo,p:[$n[3].SyntaxNode]},{a:1,n:"GetSemanticInfo",is:!0,t:8,pi:[{n:"referencedSymbol",pt:$n[1].Symbol,ps:0},{n:"diagnostics",ip:!0,pt:System.Array.type(Kusto.Language.Diagnostic),ps:1}],sn:"GetSemanticInfo",rt:$n[3].SemanticInfo,p:[$n[1].Symbol,System.Array.type(Kusto.Language.Diagnostic)]},{a:1,n:"GetSignatureResult",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"diagnostics",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:3}],sn:"GetSignatureResult$1",rt:$n[7].Binder.SignatureResult,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"GetSignatureResult",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:2},{n:"argumentParameters",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),ps:3},{n:"diagnostics",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:4}],sn:"GetSignatureResult",rt:$n[7].Binder.SignatureResult,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Parameter),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"GetSpecialFunctions",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"functions",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:1}],sn:"GetSpecialFunctions",rt:$n[2].Void,p:[$n[2].String,$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"GetStartNode",is:!0,t:8,pi:[{n:"root",pt:$n[3].SyntaxNode,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"GetStartNode",rt:$n[3].SyntaxNode,p:[$n[3].SyntaxNode,$n[2].Int32]},{a:1,n:"GetSymbolsInContext",t:8,pi:[{n:"contextNode",pt:$n[3].SyntaxNode,ps:0},{n:"match",pt:$n[1].SymbolMatch,ps:1},{n:"include",pt:$n[4].IncludeFunctionKind,ps:2},{n:"list",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:3}],sn:"GetSymbolsInContext",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[1].SymbolMatch,$n[4].IncludeFunctionKind,$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:2,n:"GetSymbolsInScope",is:!0,t:8,pi:[{n:"tree",pt:$n[3].SyntaxTree,ps:0},{n:"position",pt:$n[2].Int32,ps:1},{n:"globals",pt:$n[4].GlobalState,ps:2},{n:"match",pt:$n[1].SymbolMatch,ps:3},{n:"include",pt:$n[4].IncludeFunctionKind,ps:4},{n:"list",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:5},{n:"cancellationToken",pt:$n[5].CancellationToken,ps:6}],sn:"GetSymbolsInScope",rt:$n[2].Void,p:[$n[3].SyntaxTree,$n[2].Int32,$n[4].GlobalState,$n[1].SymbolMatch,$n[4].IncludeFunctionKind,$n[0].List$1(Kusto.Language.Symbols.Symbol),$n[5].CancellationToken]},{a:1,n:"GetTable",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"database",dv:null,o:!0,pt:$n[1].DatabaseSymbol,ps:1}],sn:"GetTable",rt:$n[1].TableSymbol,p:[$n[2].String,$n[1].DatabaseSymbol]},{a:1,n:"GetTableFunctionResult",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"location",pt:$n[3].SyntaxNode,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"GetTableFunctionResult",rt:$n[1].TypeSymbol,p:[$n[2].String,$n[3].SyntaxNode,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"GetTableOfColumnsUnifiedByName",t:8,pi:[{n:"tables",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),ps:0}],sn:"GetTableOfColumnsUnifiedByName",rt:$n[1].TableSymbol,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol)]},{a:1,n:"GetTableOfColumnsUnifiedByNameAndType",t:8,pi:[{n:"tables",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),ps:0}],sn:"GetTableOfColumnsUnifiedByNameAndType",rt:$n[1].TableSymbol,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol)]},{a:1,n:"GetTableOfCommonColumns",t:8,pi:[{n:"tables",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),ps:0}],sn:"GetTableOfCommonColumns",rt:$n[1].TableSymbol,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol)]},{a:1,n:"GetTuple",t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0}],sn:"GetTuple",rt:$n[1].TupleSymbol,p:[$n[1].TableSymbol]},{a:4,n:"GetType",is:!0,t:8,pi:[{n:"primitiveType",pt:$n[3].PrimitiveTypeExpression,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"GetType",rt:$n[1].TypeSymbol,p:[$n[3].PrimitiveTypeExpression,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"GetTypeFromTypeExpression",t:8,pi:[{n:"typeExpression",pt:$n[3].TypeExpression,ps:0},{n:"diagnostics",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"GetTypeFromTypeExpression",rt:$n[1].TypeSymbol,p:[$n[3].TypeExpression,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:4,n:"GetTypeOfType",t:8,pi:[{n:"typeofLiteral",pt:$n[3].Expression,ps:0}],sn:"GetTypeOfType",rt:$n[1].TypeSymbol,p:[$n[3].Expression]},{a:1,n:"GetUnaryOperatorInfo",t:8,pi:[{n:"kind",pt:$n[1].OperatorKind,ps:0},{n:"operand",pt:$n[3].Expression,ps:1},{n:"location",pt:$n[3].SyntaxElement,ps:2}],sn:"GetUnaryOperatorInfo",rt:$n[3].SemanticInfo,p:[$n[1].OperatorKind,$n[3].Expression,$n[3].SyntaxElement]},{a:1,n:"GetUnboundFunctionBody",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0}],sn:"GetUnboundFunctionBody",rt:$n[3].FunctionBody,p:[$n[1].Signature]},{a:2,n:"GetUnderlyingExpression",is:!0,t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0}],sn:"GetUnderlyingExpression",rt:$n[3].Expression,p:[$n[3].Expression]},{a:1,n:"GetUniqueColumn",is:!0,t:8,pi:[{n:"column",pt:$n[1].ColumnSymbol,ps:0},{n:"uniqueNames",pt:$n[5].UniqueNameTable,ps:1}],sn:"GetUniqueColumn",rt:$n[1].ColumnSymbol,p:[$n[1].ColumnSymbol,$n[5].UniqueNameTable]},{a:2,n:"GetWidestArgumentType",is:!0,t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:1}],sn:"GetWidestArgumentType",rt:$n[1].TypeSymbol,p:[$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)]},{a:1,n:"GetWildcardSymbols",is:!0,t:8,pi:[{n:"pattern",pt:$n[2].String,ps:0},{n:"symbols",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),ps:1},{n:"matchingSymbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:2}],sn:"GetWildcardSymbols",rt:$n[2].Void,p:[$n[2].String,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"IsAnyType",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"types",pt:$n[0].IReadOnlyList$1(System.Object),ps:1},{n:"conversionKind",dv:0,o:!0,pt:$n[7].Conversion,ps:2}],tpc:1,tprm:["T"],sn:"IsAnyType",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].IReadOnlyList$1(System.Object),$n[7].Conversion],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsBetterParameterMatch",t:8,pi:[{n:"signature1",pt:$n[1].Signature,ps:0},{n:"signature2",pt:$n[1].Signature,ps:1},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:2},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:3},{n:"argumentIndex",pt:$n[2].Int32,ps:4}],sn:"IsBetterParameterMatch",rt:$n[2].Boolean,p:[$n[1].Signature,$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsBetterSignatureMatch",t:8,pi:[{n:"signature1",pt:$n[1].Signature,ps:0},{n:"signature2",pt:$n[1].Signature,ps:1},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:2},{n:"argumentTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:3}],sn:"IsBetterSignatureMatch",rt:$n[2].Boolean,p:[$n[1].Signature,$n[1].Signature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsCluster",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"IsCluster",rt:$n[2].Boolean,p:[$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsColumn",t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"IsColumn",rt:$n[2].Boolean,p:[$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsDatabase",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"IsDatabase",rt:$n[2].Boolean,p:[$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsDatabaseSymbolSignature",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0}],sn:"IsDatabaseSymbolSignature",rt:$n[2].Boolean,p:[$n[1].Signature],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsEvaluateFunctionName",is:!0,t:8,pi:[{n:"name",pt:$n[3].SyntaxNode,ps:0}],sn:"IsEvaluateFunctionName",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsFunctionCallName",is:!0,t:8,pi:[{n:"name",pt:$n[3].SyntaxNode,ps:0}],sn:"IsFunctionCallName",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsFuzzyUnionOperand",is:!0,t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0}],sn:"IsFuzzyUnionOperand",rt:$n[2].Boolean,p:[$n[3].SyntaxElement],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInTabularContext",is:!0,t:8,pi:[{n:"element",pt:$n[3].SyntaxElement,ps:0}],sn:"IsInTabularContext",rt:$n[2].Boolean,p:[$n[3].SyntaxElement],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInsideControlCommand",is:!0,t:8,pi:[{n:"location",pt:$n[3].SyntaxNode,ps:0}],sn:"IsInsideControlCommand",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInsideControlCommandFunctionDeclaration",is:!0,t:8,pi:[{n:"location",pt:$n[3].SyntaxNode,ps:0}],sn:"IsInsideControlCommandFunctionDeclaration",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInsideControlCommandInputQuery",is:!0,t:8,pi:[{n:"location",pt:$n[3].SyntaxNode,ps:0}],sn:"IsInsideControlCommandInputQuery",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInsideControlCommandProper",is:!0,t:8,pi:[{n:"location",pt:$n[3].SyntaxNode,ps:0}],sn:"IsInsideControlCommandProper",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsInsideDatabaseFunctionDeclaration",t:8,pi:[{n:"location",pt:$n[3].SyntaxNode,ps:0}],sn:"IsInsideDatabaseFunctionDeclaration",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInteger",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"IsInteger",rt:$n[2].Boolean,p:[$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsIntegerOrDynamic",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"IsIntegerOrDynamic",rt:$n[2].Boolean,p:[$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInvocableFunctionName",is:!0,t:8,pi:[{n:"location",pt:$n[3].SyntaxNode,ps:0}],sn:"IsInvocableFunctionName",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInvokeOperatorFunctionCall",is:!0,t:8,pi:[{n:"functionCall",pt:$n[3].FunctionCallExpression,ps:0}],sn:"IsInvokeOperatorFunctionCall",rt:$n[2].Boolean,p:[$n[3].FunctionCallExpression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsLiteralOrName",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0}],sn:"IsLiteralOrName",rt:$n[2].Boolean,p:[$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsLiteralValue",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"values",pt:$n[0].IReadOnlyList$1(System.Object),ps:1},{n:"caseSensitive",pt:$n[2].Boolean,ps:2}],sn:"IsLiteralValue",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].IReadOnlyList$1(System.Object),$n[2].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsNamedArgument",is:!0,t:8,pi:[{n:"argument",pt:$n[3].Expression,ps:0}],sn:"IsNamedArgument",rt:$n[2].Boolean,p:[$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsNumber",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"IsNumber",rt:$n[2].Boolean,p:[$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsOrderable",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"IsOrderable",rt:$n[2].Boolean,p:[$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsPossibleInvocableFunctionWithoutArgumentList",is:!0,t:8,pi:[{n:"location",pt:$n[3].SyntaxNode,ps:0}],sn:"IsPossibleInvocableFunctionWithoutArgumentList",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsPromotable",is:!0,t:8,pi:[{n:"type1",pt:$n[1].TypeSymbol,ps:0},{n:"type2",pt:$n[1].TypeSymbol,ps:1}],sn:"IsPromotable",rt:$n[2].Boolean,p:[$n[1].TypeSymbol,$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsQueryOperatorParameterKind",t:8,pi:[{n:"parameter",pt:$n[3].NamedParameter,ps:0},{n:"qop",pt:$n[4].QueryOperatorParameter,ps:1}],sn:"IsQueryOperatorParameterKind",rt:$n[2].Boolean,p:[$n[3].NamedParameter,$n[4].QueryOperatorParameter],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsRealOrDecimal",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"IsRealOrDecimal",rt:$n[2].Boolean,p:[$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsStringOrDynamic",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"IsStringOrDynamic",rt:$n[2].Boolean,p:[$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsSummable",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"IsSummable",rt:$n[2].Boolean,p:[$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsTabular",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"IsTabular",rt:$n[2].Boolean,p:[$n[1].TypeSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsTabular",t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"IsTabular",rt:$n[2].Boolean,p:[$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsTokenLiteral",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"values",pt:$n[0].IReadOnlyList$1(System.Object),ps:1},{n:"caseSensitive",pt:$n[2].Boolean,ps:2}],sn:"IsTokenLiteral",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].IReadOnlyList$1(System.Object),$n[2].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsType",t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"type",pt:$n[1].TypeSymbol,ps:1},{n:"conversionKind",dv:0,o:!0,pt:$n[7].Conversion,ps:2}],sn:"IsType",rt:$n[2].Boolean,p:[$n[3].Expression,$n[1].TypeSymbol,$n[7].Conversion],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"MakeColumnNamesUnique",is:!0,t:8,pi:[{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"MakeColumnNamesUnique",rt:$n[2].Void,p:[$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:2,n:"MembersEqual",is:!0,t:8,pi:[{n:"target",pt:$n[1].Symbol,ps:0},{n:"source",pt:$n[1].Symbol,ps:1}],sn:"MembersEqual",rt:$n[2].Boolean,p:[$n[1].Symbol,$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"NamedArgumentsAllowed",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0}],sn:"NamedArgumentsAllowed",rt:$n[2].Boolean,p:[$n[1].Signature],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"PatternMatches",t:8,pi:[{n:"signature",pt:$n[1].PatternSignature,ps:0},{n:"arguments",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),ps:1},{n:"exact",pt:$n[2].Boolean,ps:2}],sn:"PatternMatches",rt:$n[2].Boolean,p:[$n[1].PatternSignature,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.Expression),$n[2].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Promote",is:!0,t:8,pi:[{n:"symbol",pt:$n[1].TypeSymbol,ps:0}],sn:"Promote",rt:$n[1].TypeSymbol,p:[$n[1].TypeSymbol]},{a:1,n:"RemoveFunctionsThatCannotBeInvokedWithZeroArgs",is:!0,t:8,pi:[{n:"list",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:0}],sn:"RemoveFunctionsThatCannotBeInvokedWithZeroArgs",rt:$n[2].Void,p:[$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"SetContext",t:8,pi:[{n:"contextNode",pt:$n[3].SyntaxNode,ps:0},{n:"position",dv:-1,o:!0,pt:$n[2].Int32,ps:1}],sn:"SetContext",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[2].Int32]},{a:1,n:"SetLocals",t:8,pi:[{n:"locals",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol),ps:0}],sn:"SetLocals",rt:$n[2].Void,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"SetSemanticInfo",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"info",pt:$n[3].SemanticInfo,ps:1}],sn:"SetSemanticInfo",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[3].SemanticInfo]},{a:4,n:"SetSignatureBindingInfo",t:8,pi:[{n:"signature",pt:$n[1].Signature,ps:0},{n:"body",pt:$n[3].FunctionBody,ps:1}],sn:"SetSignatureBindingInfo",rt:$n[2].Void,p:[$n[1].Signature,$n[3].FunctionBody]},{a:2,n:"SymbolsAssignable",is:!0,t:8,pi:[{n:"targetType",pt:$n[1].Symbol,ps:0},{n:"sourceType",pt:$n[1].Symbol,ps:1},{n:"conversion",dv:0,o:!0,pt:$n[7].Conversion,ps:2}],sn:"SymbolsAssignable",rt:$n[2].Boolean,p:[$n[1].Symbol,$n[1].Symbol,$n[7].Conversion],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"SymbolsAssignable",is:!0,t:8,pi:[{n:"targetTypes",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),ps:0},{n:"sourceType",pt:$n[1].Symbol,ps:1},{n:"conversion",dv:0,o:!0,pt:$n[7].Conversion,ps:2}],sn:"SymbolsAssignable$1",rt:$n[2].Boolean,p:[$n[0].IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol),$n[1].Symbol,$n[7].Conversion],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TablesAssignable",is:!0,t:8,pi:[{n:"target",pt:$n[1].TableSymbol,ps:0},{n:"source",pt:$n[1].TableSymbol,ps:1}],sn:"TablesAssignable",rt:$n[2].Boolean,p:[$n[1].TableSymbol,$n[1].TableSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryBind",is:!0,t:8,pi:[{n:"tree",pt:$n[3].SyntaxTree,ps:0},{n:"globals",pt:$n[4].GlobalState,ps:1},{n:"localBindingCache",dv:null,o:!0,pt:$n[7].LocalBindingCache,ps:2},{n:"semanticInfoSetter",dv:null,o:!0,pt:Function,ps:3},{n:"cancellationToken",dv:null,o:!0,pt:$n[5].CancellationToken,ps:4}],sn:"TryBind",rt:$n[2].Boolean,p:[$n[3].SyntaxTree,$n[4].GlobalState,$n[7].LocalBindingCache,Function,$n[5].CancellationToken],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryBindExpansion",is:!0,t:8,pi:[{n:"expansionTree",pt:$n[3].SyntaxTree,ps:0},{n:"outer",pt:$n[7].Binder,ps:1},{n:"currentCluster",pt:$n[1].ClusterSymbol,ps:2},{n:"currentDatabase",pt:$n[1].DatabaseSymbol,ps:3},{n:"currentFunction",pt:$n[1].FunctionSymbol,ps:4},{n:"outerScope",pt:$n[7].LocalScope,ps:5},{n:"locals",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol),ps:6}],sn:"TryBindExpansion",rt:$n[2].Boolean,p:[$n[3].SyntaxTree,$n[7].Binder,$n[1].ClusterSymbol,$n[1].DatabaseSymbol,$n[1].FunctionSymbol,$n[7].LocalScope,$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TryGetDeclaredOrInferredColumn",t:8,pi:[{n:"table",pt:$n[1].TableSymbol,ps:0},{n:"name",pt:$n[2].String,ps:1},{n:"column",out:!0,pt:$n[1].ColumnSymbol,ps:2}],sn:"TryGetDeclaredOrInferredColumn",rt:$n[2].Boolean,p:[$n[1].TableSymbol,$n[2].String,$n[1].ColumnSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"TryGetLiteralStringValue",is:!0,t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"value",out:!0,pt:$n[2].String,ps:1}],sn:"TryGetLiteralStringValue",rt:$n[2].Boolean,p:[$n[3].Expression,$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"TryGetLiteralValue",is:!0,t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0},{n:"value",out:!0,pt:$n[2].Object,ps:1}],sn:"TryGetLiteralValue",rt:$n[2].Boolean,p:[$n[3].Expression,$n[2].Object],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"UnifyColumnsWithSameName",is:!0,t:8,pi:[{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"UnifyColumnsWithSameName",rt:$n[2].Void,p:[$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:4,n:"UnifyColumnsWithSameNameAndType",is:!0,t:8,pi:[{n:"columns",pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:0}],sn:"UnifyColumnsWithSameNameAndType",rt:$n[2].Void,p:[$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:2,n:"RightRowScopeOrEmpty",t:16,rt:$n[1].TableSymbol,g:{a:2,n:"get_RightRowScopeOrEmpty",t:8,rt:$n[1].TableSymbol,fg:"RightRowScopeOrEmpty"},fn:"RightRowScopeOrEmpty"},{a:2,n:"RowScopeOrEmpty",t:16,rt:$n[1].TableSymbol,g:{a:2,n:"get_RowScopeOrEmpty",t:8,rt:$n[1].TableSymbol,fg:"RowScopeOrEmpty"},fn:"RowScopeOrEmpty"},{a:1,n:"ErrorInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"ErrorInfo",ro:!0},{a:1,n:"LiteralBoolInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralBoolInfo",ro:!0},{a:1,n:"LiteralDateTimeInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralDateTimeInfo",ro:!0},{a:1,n:"LiteralDecimalInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralDecimalInfo",ro:!0},{a:1,n:"LiteralDynamicInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralDynamicInfo",ro:!0},{a:1,n:"LiteralGuidInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralGuidInfo",ro:!0},{a:1,n:"LiteralIntInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralIntInfo",ro:!0},{a:1,n:"LiteralLongInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralLongInfo",ro:!0},{a:1,n:"LiteralRealInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralRealInfo",ro:!0},{a:1,n:"LiteralStringInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralStringInfo",ro:!0},{a:1,n:"LiteralTimeSpanInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"LiteralTimeSpanInfo",ro:!0},{a:1,n:"UnknownInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"UnknownInfo",ro:!0},{a:1,n:"VoidInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"VoidInfo",ro:!0},{a:1,n:"_aliasedDatabases",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol),sn:"_aliasedDatabases",ro:!0},{a:1,n:"_cancellationToken",t:4,rt:$n[5].CancellationToken,sn:"_cancellationToken",ro:!0},{a:1,n:"_currentCluster",t:4,rt:$n[1].ClusterSymbol,sn:"_currentCluster"},{a:1,n:"_currentDatabase",t:4,rt:$n[1].DatabaseSymbol,sn:"_currentDatabase"},{a:1,n:"_currentFunction",t:4,rt:$n[1].FunctionSymbol,sn:"_currentFunction"},{a:1,n:"_globalBindingCache",t:4,rt:$n[7].GlobalBindingCache,sn:"_globalBindingCache",ro:!0},{a:1,n:"_globals",t:4,rt:$n[4].GlobalState,sn:"_globals",ro:!0},{a:1,n:"_implicitArgumentType",t:4,rt:$n[1].TypeSymbol,sn:"_implicitArgumentType"},{a:1,n:"_localBindingCache",t:4,rt:$n[7].LocalBindingCache,sn:"_localBindingCache",ro:!0},{a:1,n:"_localScope",t:4,rt:$n[7].LocalScope,sn:"_localScope"},{a:1,n:"_openClusters",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.ClusterSymbol),sn:"_openClusters"},{a:1,n:"_openDatabases",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Symbols.ClusterSymbol,System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol)),sn:"_openDatabases"},{a:1,n:"_openTables",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Symbols.DatabaseSymbol,System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.TableSymbol)),sn:"_openTables"},{a:1,n:"_pathScope",t:4,rt:$n[1].Symbol,sn:"_pathScope"},{a:1,n:"_rightRowScope",t:4,rt:$n[1].TableSymbol,sn:"_rightRowScope"},{a:1,n:"_rowScope",t:4,rt:$n[1].TableSymbol,sn:"_rowScope"},{a:1,n:"_scopeKind",t:4,rt:$n[7].Binder.ScopeKind,sn:"_scopeKind",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ScopeKind,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ScopeKind))}},{a:1,n:"_semanticInfoSetter",t:4,rt:Function,sn:"_semanticInfoSetter",ro:!0},{a:1,n:"openColumns",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Symbols.TableSymbol,System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol)),sn:"openColumns"},{a:1,n:"s_columnListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)),sn:"s_columnListPool"},{a:1,n:"s_diagnosticListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Diagnostic)),sn:"s_diagnosticListPool"},{a:1,n:"s_expressionListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression)),sn:"s_expressionListPool"},{a:1,n:"s_functionListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.FunctionSymbol)),sn:"s_functionListPool"},{a:1,n:"s_parameterListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)),sn:"s_parameterListPool"},{a:1,n:"s_patternListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.PatternSignature)),sn:"s_patternListPool"},{a:1,n:"s_projectionBuilderPool",is:!0,t:4,rt:$n[5].ObjectPool$1(Kusto.Language.Binding.ProjectionBuilder),sn:"s_projectionBuilderPool"},{a:1,n:"s_signatureListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Signature)),sn:"s_signatureListPool"},{a:1,n:"s_stringSetPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.HashSet$1(System.String)),sn:"s_stringSetPool"},{a:1,n:"s_symbolListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol)),sn:"s_symbolListPool"},{a:1,n:"s_tableListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol)),sn:"s_tableListPool"},{a:1,n:"s_typeListPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol)),sn:"s_typeListPool"},{a:1,n:"s_uniqueNameTablePool",is:!0,t:4,rt:$n[5].ObjectPool$1(Kusto.Language.Utils.UniqueNameTable),sn:"s_uniqueNameTablePool"},{a:1,n:"tupleMap",t:4,rt:$n[0].Dictionary$2(Kusto.Language.Symbols.TableSymbol,Kusto.Language.Symbols.TupleSymbol),sn:"tupleMap"}]}},$n);$m("Kusto.Language.Binding.Binder.ScopeKind",function(){return{td:$n[7].Binder,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Aggregate",is:!0,t:4,rt:$n[7].Binder.ScopeKind,sn:"Aggregate",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ScopeKind,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ScopeKind))}},{a:2,n:"Normal",is:!0,t:4,rt:$n[7].Binder.ScopeKind,sn:"Normal",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ScopeKind,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ScopeKind))}},{a:2,n:"Option",is:!0,t:4,rt:$n[7].Binder.ScopeKind,sn:"Option",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ScopeKind,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ScopeKind))}},{a:2,n:"PlugIn",is:!0,t:4,rt:$n[7].Binder.ScopeKind,sn:"PlugIn",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ScopeKind,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ScopeKind))}}]}},$n);$m("Kusto.Language.Binding.Binder.SignatureResult",function(){return{td:$n[7].Binder,att:1048843,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].TypeSymbol,Function],pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0},{n:"expander",pt:Function,ps:1}],sn:"$ctor1"},{a:2,n:"op_Implicit",is:!0,t:8,pi:[{n:"type",pt:$n[1].TypeSymbol,ps:0}],sn:"op_Implicit",rt:$n[7].Binder.SignatureResult,p:[$n[1].TypeSymbol]},{a:2,n:"Expander",t:16,rt:Function,g:{a:2,n:"get_Expander",t:8,rt:Function,fg:"Expander"},fn:"Expander"},{a:2,n:"Type",t:16,rt:$n[1].TypeSymbol,g:{a:2,n:"get_Type",t:8,rt:$n[1].TypeSymbol,fg:"Type"},fn:"Type"},{a:1,backing:!0,n:"<Expander>k__BackingField",t:4,rt:Function,sn:"Expander"},{a:1,backing:!0,n:"<Type>k__BackingField",t:4,rt:$n[1].TypeSymbol,sn:"Type"}]}},$n);$m("Kusto.Language.Binding.Binder.ProjectionStyle",function(){return{td:$n[7].Binder,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Default",is:!0,t:4,rt:$n[7].Binder.ProjectionStyle,sn:"Default",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ProjectionStyle,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ProjectionStyle))}},{a:2,n:"Extend",is:!0,t:4,rt:$n[7].Binder.ProjectionStyle,sn:"Extend",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ProjectionStyle,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ProjectionStyle))}},{a:2,n:"Print",is:!0,t:4,rt:$n[7].Binder.ProjectionStyle,sn:"Print",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ProjectionStyle,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ProjectionStyle))}},{a:2,n:"Rename",is:!0,t:4,rt:$n[7].Binder.ProjectionStyle,sn:"Rename",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ProjectionStyle,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ProjectionStyle))}},{a:2,n:"Reorder",is:!0,t:4,rt:$n[7].Binder.ProjectionStyle,sn:"Reorder",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ProjectionStyle,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ProjectionStyle))}},{a:2,n:"Replace",is:!0,t:4,rt:$n[7].Binder.ProjectionStyle,sn:"Replace",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ProjectionStyle,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ProjectionStyle))}},{a:2,n:"Summarize",is:!0,t:4,rt:$n[7].Binder.ProjectionStyle,sn:"Summarize",box:function($v){return Bridge.box($v,Kusto.Language.Binding.Binder.ProjectionStyle,System.Enum.toStringFn(Kusto.Language.Binding.Binder.ProjectionStyle))}}]}},$n);$m("Kusto.Language.Binding.Binder.ContextBuilder",function(){return{td:$n[7].Binder,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[7].Binder,$n[2].Int32],pi:[{n:"binder",pt:$n[7].Binder,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"ctor"},{a:1,n:"CanHoldMore",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"CanHoldMore",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:3,n:"DefaultVisit",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"DefaultVisit",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{a:1,n:"IsInTriviaAfter",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"IsInTriviaAfter",rt:$n[2].Boolean,p:[$n[3].SyntaxNode,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsInTriviaAfter",is:!0,t:8,pi:[{n:"token",pt:$n[3].SyntaxToken,ps:0},{n:"position",pt:$n[2].Int32,ps:1}],sn:"IsInTriviaAfter$1",rt:$n[2].Boolean,p:[$n[3].SyntaxToken,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsIncomplete",is:!0,t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"IsIncomplete",rt:$n[2].Boolean,p:[$n[3].SyntaxNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"VisitCustomCommand",t:8,pi:[{n:"node",pt:$n[3].CustomCommand,ps:0}],sn:"VisitCustomCommand",rt:$n[2].Void,p:[$n[3].CustomCommand]},{ov:!0,a:2,n:"VisitElementExpression",t:8,pi:[{n:"node",pt:$n[3].ElementExpression,ps:0}],sn:"VisitElementExpression",rt:$n[2].Void,p:[$n[3].ElementExpression]},{ov:!0,a:2,n:"VisitEvaluateOperator",t:8,pi:[{n:"node",pt:$n[3].EvaluateOperator,ps:0}],sn:"VisitEvaluateOperator",rt:$n[2].Void,p:[$n[3].EvaluateOperator]},{ov:!0,a:2,n:"VisitFindOperator",t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"VisitFindOperator",rt:$n[2].Void,p:[$n[3].FindOperator]},{ov:!0,a:2,n:"VisitFunctionCallExpression",t:8,pi:[{n:"node",pt:$n[3].FunctionCallExpression,ps:0}],sn:"VisitFunctionCallExpression",rt:$n[2].Void,p:[$n[3].FunctionCallExpression]},{ov:!0,a:2,n:"VisitFunctionDeclaration",t:8,pi:[{n:"node",pt:$n[3].FunctionDeclaration,ps:0}],sn:"VisitFunctionDeclaration",rt:$n[2].Void,p:[$n[3].FunctionDeclaration]},{ov:!0,a:2,n:"VisitInExpression",t:8,pi:[{n:"node",pt:$n[3].InExpression,ps:0}],sn:"VisitInExpression",rt:$n[2].Void,p:[$n[3].InExpression]},{ov:!0,a:2,n:"VisitInvokeOperator",t:8,pi:[{n:"node",pt:$n[3].InvokeOperator,ps:0}],sn:"VisitInvokeOperator",rt:$n[2].Void,p:[$n[3].InvokeOperator]},{ov:!0,a:2,n:"VisitJoinOperator",t:8,pi:[{n:"node",pt:$n[3].JoinOperator,ps:0}],sn:"VisitJoinOperator",rt:$n[2].Void,p:[$n[3].JoinOperator]},{ov:!0,a:2,n:"VisitList",t:8,pi:[{n:"list",pt:$n[3].SyntaxList,ps:0}],sn:"VisitList",rt:$n[2].Void,p:[$n[3].SyntaxList]},{ov:!0,a:2,n:"VisitLookupOperator",t:8,pi:[{n:"node",pt:$n[3].LookupOperator,ps:0}],sn:"VisitLookupOperator",rt:$n[2].Void,p:[$n[3].LookupOperator]},{ov:!0,a:2,n:"VisitMakeSeriesOperator",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOperator,ps:0}],sn:"VisitMakeSeriesOperator",rt:$n[2].Void,p:[$n[3].MakeSeriesOperator]},{ov:!0,a:2,n:"VisitMvApplyOperator",t:8,pi:[{n:"node",pt:$n[3].MvApplyOperator,ps:0}],sn:"VisitMvApplyOperator",rt:$n[2].Void,p:[$n[3].MvApplyOperator]},{ov:!0,a:2,n:"VisitParenthesizedExpression",t:8,pi:[{n:"node",pt:$n[3].ParenthesizedExpression,ps:0}],sn:"VisitParenthesizedExpression",rt:$n[2].Void,p:[$n[3].ParenthesizedExpression]},{ov:!0,a:2,n:"VisitPartitionOperator",t:8,pi:[{n:"node",pt:$n[3].PartitionOperator,ps:0}],sn:"VisitPartitionOperator",rt:$n[2].Void,p:[$n[3].PartitionOperator]},{ov:!0,a:2,n:"VisitPathExpression",t:8,pi:[{n:"node",pt:$n[3].PathExpression,ps:0}],sn:"VisitPathExpression",rt:$n[2].Void,p:[$n[3].PathExpression]},{ov:!0,a:2,n:"VisitPatternDeclaration",t:8,pi:[{n:"node",pt:$n[3].PatternDeclaration,ps:0}],sn:"VisitPatternDeclaration",rt:$n[2].Void,p:[$n[3].PatternDeclaration]},{ov:!0,a:2,n:"VisitPipeExpression",t:8,pi:[{n:"node",pt:$n[3].PipeExpression,ps:0}],sn:"VisitPipeExpression",rt:$n[2].Void,p:[$n[3].PipeExpression]},{ov:!0,a:2,n:"VisitScanOperator",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"VisitScanOperator",rt:$n[2].Void,p:[$n[3].ScanOperator]},{ov:!0,a:2,n:"VisitSearchOperator",t:8,pi:[{n:"node",pt:$n[3].SearchOperator,ps:0}],sn:"VisitSearchOperator",rt:$n[2].Void,p:[$n[3].SearchOperator]},{ov:!0,a:2,n:"VisitSetOptionStatement",t:8,pi:[{n:"node",pt:$n[3].SetOptionStatement,ps:0}],sn:"VisitSetOptionStatement",rt:$n[2].Void,p:[$n[3].SetOptionStatement]},{ov:!0,a:2,n:"VisitSummarizeOperator",t:8,pi:[{n:"node",pt:$n[3].SummarizeOperator,ps:0}],sn:"VisitSummarizeOperator",rt:$n[2].Void,p:[$n[3].SummarizeOperator]},{ov:!0,a:2,n:"VisitToScalarExpression",t:8,pi:[{n:"node",pt:$n[3].ToScalarExpression,ps:0}],sn:"VisitToScalarExpression",rt:$n[2].Void,p:[$n[3].ToScalarExpression]},{ov:!0,a:2,n:"VisitToTableExpression",t:8,pi:[{n:"node",pt:$n[3].ToTableExpression,ps:0}],sn:"VisitToTableExpression",rt:$n[2].Void,p:[$n[3].ToTableExpression]},{ov:!0,a:2,n:"VisitTopNestedClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedClause,ps:0}],sn:"VisitTopNestedClause",rt:$n[2].Void,p:[$n[3].TopNestedClause]},{ov:!0,a:2,n:"VisitUnionOperator",t:8,pi:[{n:"node",pt:$n[3].UnionOperator,ps:0}],sn:"VisitUnionOperator",rt:$n[2].Void,p:[$n[3].UnionOperator]},{a:1,n:"_asBuilder",t:4,rt:$n[7].Binder.AsContextBuilder,sn:"_asBuilder",ro:!0},{a:1,n:"_binder",t:4,rt:$n[7].Binder,sn:"_binder",ro:!0},{a:1,n:"_position",t:4,rt:$n[2].Int32,sn:"_position",ro:!0,box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Binding.Binder.AsContextBuilder",function(){return{td:$n[7].Binder,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[2].Int32,$n[7].Binder],pi:[{n:"position",pt:$n[2].Int32,ps:0},{n:"binder",pt:$n[7].Binder,ps:1}],sn:"ctor"},{ov:!0,a:3,n:"DefaultVisit",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"DefaultVisit",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{ov:!0,a:2,n:"VisitAsOperator",t:8,pi:[{n:"node",pt:$n[3].AsOperator,ps:0}],sn:"VisitAsOperator",rt:$n[2].Void,p:[$n[3].AsOperator]},{ov:!0,a:2,n:"VisitCommandBlock",t:8,pi:[{n:"node",pt:$n[3].CommandBlock,ps:0}],sn:"VisitCommandBlock",rt:$n[2].Void,p:[$n[3].CommandBlock]},{ov:!0,a:2,n:"VisitFunctionBody",t:8,pi:[{n:"node",pt:$n[3].FunctionBody,ps:0}],sn:"VisitFunctionBody",rt:$n[2].Void,p:[$n[3].FunctionBody]},{ov:!0,a:2,n:"VisitMaterializedViewCombineExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineExpression,ps:0}],sn:"VisitMaterializedViewCombineExpression",rt:$n[2].Void,p:[$n[3].MaterializedViewCombineExpression]},{a:1,n:"_binder",t:4,rt:$n[7].Binder,sn:"_binder",ro:!0},{a:1,n:"_position",t:4,rt:$n[2].Int32,sn:"_position",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Kusto.Language.Binding.Binder.NodeBinder",function(){return{td:$n[7].Binder,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[7].Binder],pi:[{n:"binder",pt:$n[7].Binder,ps:0}],sn:"ctor"},{a:1,n:"CheckCommonColumn",t:8,pi:[{n:"name",pt:$n[3].NameReference,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"leftColumn",out:!0,pt:$n[1].ColumnSymbol,ps:2},{n:"rightColumn",out:!0,pt:$n[1].ColumnSymbol,ps:3}],sn:"CheckCommonColumn",rt:$n[2].Boolean,p:[$n[3].NameReference,$n[0].List$1(Kusto.Language.Diagnostic),$n[1].ColumnSymbol,$n[1].ColumnSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckFirstInPipe",t:8,pi:[{n:"queryOp",pt:$n[3].QueryOperator,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckFirstInPipe",rt:$n[2].Void,p:[$n[3].QueryOperator,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CheckJoinEquality",t:8,pi:[{n:"condition",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"leftColumn",out:!0,pt:$n[1].ColumnSymbol,ps:2},{n:"rightColumn",out:!0,pt:$n[1].ColumnSymbol,ps:3}],sn:"CheckJoinEquality",rt:$n[2].Boolean,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic),$n[1].ColumnSymbol,$n[1].ColumnSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckJoinEqualityOperand",t:8,pi:[{n:"operand",pt:$n[3].Expression,ps:0},{n:"prefix",pt:$n[2].String,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2},{n:"column",out:!0,pt:$n[1].ColumnSymbol,ps:3}],sn:"CheckJoinEqualityOperand",rt:$n[2].Boolean,p:[$n[3].Expression,$n[2].String,$n[0].List$1(Kusto.Language.Diagnostic),$n[1].ColumnSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"CheckJoinOnClause",t:8,pi:[{n:"clause",pt:$n[3].JoinOnClause,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"leftColumns",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:2},{n:"rightColumns",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:3}],sn:"CheckJoinOnClause",rt:$n[2].Void,p:[$n[3].JoinOnClause,$n[0].List$1(Kusto.Language.Diagnostic),$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:1,n:"CheckJoinOnExpression",t:8,pi:[{n:"condition",pt:$n[3].Expression,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"leftColumns",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:2},{n:"rightColumns",dv:null,o:!0,pt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),ps:3}],sn:"CheckJoinOnExpression",rt:$n[2].Void,p:[$n[3].Expression,$n[0].List$1(Kusto.Language.Diagnostic),$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol)]},{a:1,n:"CheckNotFirstInPipe",t:8,pi:[{n:"queryOp",pt:$n[3].QueryOperator,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1}],sn:"CheckNotFirstInPipe",rt:$n[2].Void,p:[$n[3].QueryOperator,$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CheckQueryOperator",is:!0,t:8,pi:[{n:"queryOperator",pt:$n[3].QueryOperator,ps:0},{n:"validQueryOperators",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2}],sn:"CheckQueryOperator",rt:$n[2].Void,p:[$n[3].QueryOperator,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),$n[0].List$1(Kusto.Language.Diagnostic)]},{a:1,n:"CheckQueryOperators",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0},{n:"validQueryOperators",pt:$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2},{n:"operatorRequired",dv:!0,o:!0,pt:$n[2].Boolean,ps:3},{n:"allowContextualRoot",dv:!1,o:!0,pt:$n[2].Boolean,ps:4}],sn:"CheckQueryOperators",rt:$n[2].Void,p:[$n[3].Expression,$n[0].IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind),$n[0].List$1(Kusto.Language.Diagnostic),$n[2].Boolean,$n[2].Boolean]},{a:1,n:"CreateFunctionSymbol",t:8,pi:[{n:"decl",pt:$n[3].FunctionDeclaration,ps:0}],sn:"CreateFunctionSymbol",rt:$n[1].FunctionSymbol,p:[$n[3].FunctionDeclaration]},{a:1,n:"FilterVisibleSymbols",t:8,pi:[{n:"location",pt:$n[3].SyntaxNode,ps:0},{n:"symbols",pt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),ps:1},{n:"filteredSymbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:2}],sn:"FilterVisibleSymbols",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[0].IReadOnlyList$1(Kusto.Language.Symbols.Symbol),$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"GetElementExpressionInfo",t:8,pi:[{n:"collection",pt:$n[3].Expression,ps:0},{n:"selector",pt:$n[3].BracketedExpression,ps:1}],sn:"GetElementExpressionInfo",rt:$n[3].SemanticInfo,p:[$n[3].Expression,$n[3].BracketedExpression]},{a:1,n:"GetReferencedName",is:!0,t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0}],sn:"GetReferencedName",rt:$n[2].String,p:[$n[3].Expression]},{a:1,n:"IsAntiOrSemiJoin",is:!0,t:8,pi:[{n:"joinKind",pt:$n[2].String,ps:0}],sn:"IsAntiOrSemiJoin",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsArgument",is:!0,t:8,pi:[{n:"e",pt:$n[3].Expression,ps:0}],sn:"IsArgument",rt:$n[2].Boolean,p:[$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsChildOfPipeStartingExpression",is:!0,t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"IsChildOfPipeStartingExpression",rt:$n[2].Boolean,p:[$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsLeftAntiOrSemiJoin",is:!0,t:8,pi:[{n:"joinKind",pt:$n[2].String,ps:0}],sn:"IsLeftAntiOrSemiJoin",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsLeftOperand",is:!0,t:8,pi:[{n:"e",pt:$n[3].Expression,ps:0}],sn:"IsLeftOperand",rt:$n[2].Boolean,p:[$n[3].Expression],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsRightAntiOrSemiJoin",is:!0,t:8,pi:[{n:"joinKind",pt:$n[2].String,ps:0}],sn:"IsRightAntiOrSemiJoin",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsSecondaryPipeOperator",is:!0,t:8,pi:[{n:"queryOp",pt:$n[3].QueryOperator,ps:0}],sn:"IsSecondaryPipeOperator",rt:$n[2].Boolean,p:[$n[3].QueryOperator],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ParseVisitCommon",t:8,pi:[{n:"node",pt:$n[3].QueryOperator,ps:0},{n:"expression",pt:$n[3].Expression,ps:1},{n:"patterns",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),ps:2},{n:"parameters",pt:$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter),ps:3}],sn:"ParseVisitCommon",rt:$n[3].SemanticInfo,p:[$n[3].QueryOperator,$n[3].Expression,$n[3].SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),$n[3].SyntaxList$1(Kusto.Language.Syntax.NamedParameter)]},{a:1,n:"ReferencesAllTables",is:!0,t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"ReferencesAllTables",rt:$n[2].Boolean,p:[$n[3].FindOperator],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"RemoveParenthesis",is:!0,t:8,pi:[{n:"expression",pt:$n[3].Expression,ps:0}],sn:"RemoveParenthesis",rt:$n[3].Expression,p:[$n[3].Expression]},{a:1,n:"TryGetIntValue",is:!0,t:8,pi:[{n:"value",pt:$n[2].Object,ps:0},{n:"intValue",out:!0,pt:$n[2].Int32,ps:1}],sn:"TryGetIntValue",rt:$n[2].Boolean,p:[$n[2].Object,$n[2].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"VisitAliasStatement",t:8,pi:[{n:"node",pt:$n[3].AliasStatement,ps:0}],sn:"VisitAliasStatement",rt:$n[3].SemanticInfo,p:[$n[3].AliasStatement]},{ov:!0,a:2,n:"VisitAsOperator",t:8,pi:[{n:"node",pt:$n[3].AsOperator,ps:0}],sn:"VisitAsOperator",rt:$n[3].SemanticInfo,p:[$n[3].AsOperator]},{ov:!0,a:2,n:"VisitAtExpression",t:8,pi:[{n:"node",pt:$n[3].AtExpression,ps:0}],sn:"VisitAtExpression",rt:$n[3].SemanticInfo,p:[$n[3].AtExpression]},{ov:!0,a:2,n:"VisitBadCommand",t:8,pi:[{n:"node",pt:$n[3].BadCommand,ps:0}],sn:"VisitBadCommand",rt:$n[3].SemanticInfo,p:[$n[3].BadCommand]},{ov:!0,a:2,n:"VisitBadQueryOperator",t:8,pi:[{n:"node",pt:$n[3].BadQueryOperator,ps:0}],sn:"VisitBadQueryOperator",rt:$n[3].SemanticInfo,p:[$n[3].BadQueryOperator]},{ov:!0,a:2,n:"VisitBetweenExpression",t:8,pi:[{n:"node",pt:$n[3].BetweenExpression,ps:0}],sn:"VisitBetweenExpression",rt:$n[3].SemanticInfo,p:[$n[3].BetweenExpression]},{ov:!0,a:2,n:"VisitBinaryExpression",t:8,pi:[{n:"node",pt:$n[3].BinaryExpression,ps:0}],sn:"VisitBinaryExpression",rt:$n[3].SemanticInfo,p:[$n[3].BinaryExpression]},{ov:!0,a:2,n:"VisitBracedName",t:8,pi:[{n:"node",pt:$n[3].BracedName,ps:0}],sn:"VisitBracedName",rt:$n[3].SemanticInfo,p:[$n[3].BracedName]},{ov:!0,a:2,n:"VisitBracketedExpression",t:8,pi:[{n:"node",pt:$n[3].BracketedExpression,ps:0}],sn:"VisitBracketedExpression",rt:$n[3].SemanticInfo,p:[$n[3].BracketedExpression]},{ov:!0,a:2,n:"VisitBracketedName",t:8,pi:[{n:"node",pt:$n[3].BracketedName,ps:0}],sn:"VisitBracketedName",rt:$n[3].SemanticInfo,p:[$n[3].BracketedName]},{ov:!0,a:2,n:"VisitBracketedWildcardedName",t:8,pi:[{n:"node",pt:$n[3].BracketedWildcardedName,ps:0}],sn:"VisitBracketedWildcardedName",rt:$n[3].SemanticInfo,p:[$n[3].BracketedWildcardedName]},{ov:!0,a:2,n:"VisitCommandBlock",t:8,pi:[{n:"node",pt:$n[3].CommandBlock,ps:0}],sn:"VisitCommandBlock",rt:$n[3].SemanticInfo,p:[$n[3].CommandBlock]},{ov:!0,a:2,n:"VisitCommandWithPropertyListClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithPropertyListClause,ps:0}],sn:"VisitCommandWithPropertyListClause",rt:$n[3].SemanticInfo,p:[$n[3].CommandWithPropertyListClause]},{ov:!0,a:2,n:"VisitCommandWithValueClause",t:8,pi:[{n:"node",pt:$n[3].CommandWithValueClause,ps:0}],sn:"VisitCommandWithValueClause",rt:$n[3].SemanticInfo,p:[$n[3].CommandWithValueClause]},{ov:!0,a:2,n:"VisitCompoundNamedExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundNamedExpression,ps:0}],sn:"VisitCompoundNamedExpression",rt:$n[3].SemanticInfo,p:[$n[3].CompoundNamedExpression]},{ov:!0,a:2,n:"VisitCompoundStringLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].CompoundStringLiteralExpression,ps:0}],sn:"VisitCompoundStringLiteralExpression",rt:$n[3].SemanticInfo,p:[$n[3].CompoundStringLiteralExpression]},{ov:!0,a:2,n:"VisitConsumeOperator",t:8,pi:[{n:"node",pt:$n[3].ConsumeOperator,ps:0}],sn:"VisitConsumeOperator",rt:$n[3].SemanticInfo,p:[$n[3].ConsumeOperator]},{ov:!0,a:2,n:"VisitContextualDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].ContextualDataTableExpression,ps:0}],sn:"VisitContextualDataTableExpression",rt:$n[3].SemanticInfo,p:[$n[3].ContextualDataTableExpression]},{ov:!0,a:2,n:"VisitCountAsIdentifierClause",t:8,pi:[{n:"node",pt:$n[3].CountAsIdentifierClause,ps:0}],sn:"VisitCountAsIdentifierClause",rt:$n[3].SemanticInfo,p:[$n[3].CountAsIdentifierClause]},{ov:!0,a:2,n:"VisitCountOperator",t:8,pi:[{n:"node",pt:$n[3].CountOperator,ps:0}],sn:"VisitCountOperator",rt:$n[3].SemanticInfo,p:[$n[3].CountOperator]},{ov:!0,a:2,n:"VisitCustom",t:8,pi:[{n:"node",pt:$n[3].CustomNode,ps:0}],sn:"VisitCustom",rt:$n[3].SemanticInfo,p:[$n[3].CustomNode]},{ov:!0,a:2,n:"VisitCustomCommand",t:8,pi:[{n:"node",pt:$n[3].CustomCommand,ps:0}],sn:"VisitCustomCommand",rt:$n[3].SemanticInfo,p:[$n[3].CustomCommand]},{ov:!0,a:2,n:"VisitDataScopeClause",t:8,pi:[{n:"node",pt:$n[3].DataScopeClause,ps:0}],sn:"VisitDataScopeClause",rt:$n[3].SemanticInfo,p:[$n[3].DataScopeClause]},{ov:!0,a:2,n:"VisitDataScopeExpression",t:8,pi:[{n:"node",pt:$n[3].DataScopeExpression,ps:0}],sn:"VisitDataScopeExpression",rt:$n[3].SemanticInfo,p:[$n[3].DataScopeExpression]},{ov:!0,a:2,n:"VisitDataTableExpression",t:8,pi:[{n:"node",pt:$n[3].DataTableExpression,ps:0}],sn:"VisitDataTableExpression",rt:$n[3].SemanticInfo,p:[$n[3].DataTableExpression]},{ov:!0,a:2,n:"VisitDefaultExpressionClause",t:8,pi:[{n:"node",pt:$n[3].DefaultExpressionClause,ps:0}],sn:"VisitDefaultExpressionClause",rt:$n[3].SemanticInfo,p:[$n[3].DefaultExpressionClause]},{ov:!0,a:2,n:"VisitDefaultValueDeclaration",t:8,pi:[{n:"node",pt:$n[3].DefaultValueDeclaration,ps:0}],sn:"VisitDefaultValueDeclaration",rt:$n[3].SemanticInfo,p:[$n[3].DefaultValueDeclaration]},{ov:!0,a:2,n:"VisitDirectiveBlock",t:8,pi:[{n:"node",pt:$n[3].DirectiveBlock,ps:0}],sn:"VisitDirectiveBlock",rt:$n[3].SemanticInfo,p:[$n[3].DirectiveBlock]},{ov:!0,a:2,n:"VisitDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].DistinctOperator,ps:0}],sn:"VisitDistinctOperator",rt:$n[3].SemanticInfo,p:[$n[3].DistinctOperator]},{ov:!0,a:2,n:"VisitDynamicExpression",t:8,pi:[{n:"node",pt:$n[3].DynamicExpression,ps:0}],sn:"VisitDynamicExpression",rt:$n[3].SemanticInfo,p:[$n[3].DynamicExpression]},{ov:!0,a:2,n:"VisitElementExpression",t:8,pi:[{n:"node",pt:$n[3].ElementExpression,ps:0}],sn:"VisitElementExpression",rt:$n[3].SemanticInfo,p:[$n[3].ElementExpression]},{ov:!0,a:2,n:"VisitEvaluateOperator",t:8,pi:[{n:"node",pt:$n[3].EvaluateOperator,ps:0}],sn:"VisitEvaluateOperator",rt:$n[3].SemanticInfo,p:[$n[3].EvaluateOperator]},{ov:!0,a:2,n:"VisitEvaluateSchemaClause",t:8,pi:[{n:"node",pt:$n[3].EvaluateSchemaClause,ps:0}],sn:"VisitEvaluateSchemaClause",rt:$n[3].SemanticInfo,p:[$n[3].EvaluateSchemaClause]},{ov:!0,a:2,n:"VisitExecuteAndCacheOperator",t:8,pi:[{n:"node",pt:$n[3].ExecuteAndCacheOperator,ps:0}],sn:"VisitExecuteAndCacheOperator",rt:$n[3].SemanticInfo,p:[$n[3].ExecuteAndCacheOperator]},{ov:!0,a:2,n:"VisitExpressionCouple",t:8,pi:[{n:"node",pt:$n[3].ExpressionCouple,ps:0}],sn:"VisitExpressionCouple",rt:$n[3].SemanticInfo,p:[$n[3].ExpressionCouple]},{ov:!0,a:2,n:"VisitExpressionList",t:8,pi:[{n:"node",pt:$n[3].ExpressionList,ps:0}],sn:"VisitExpressionList",rt:$n[3].SemanticInfo,p:[$n[3].ExpressionList]},{ov:!0,a:2,n:"VisitExpressionStatement",t:8,pi:[{n:"node",pt:$n[3].ExpressionStatement,ps:0}],sn:"VisitExpressionStatement",rt:$n[3].SemanticInfo,p:[$n[3].ExpressionStatement]},{ov:!0,a:2,n:"VisitExtendOperator",t:8,pi:[{n:"node",pt:$n[3].ExtendOperator,ps:0}],sn:"VisitExtendOperator",rt:$n[3].SemanticInfo,p:[$n[3].ExtendOperator]},{ov:!0,a:2,n:"VisitExternalDataExpression",t:8,pi:[{n:"node",pt:$n[3].ExternalDataExpression,ps:0}],sn:"VisitExternalDataExpression",rt:$n[3].SemanticInfo,p:[$n[3].ExternalDataExpression]},{ov:!0,a:2,n:"VisitExternalDataWithClause",t:8,pi:[{n:"node",pt:$n[3].ExternalDataWithClause,ps:0}],sn:"VisitExternalDataWithClause",rt:$n[3].SemanticInfo,p:[$n[3].ExternalDataWithClause]},{ov:!0,a:2,n:"VisitFacetOperator",t:8,pi:[{n:"node",pt:$n[3].FacetOperator,ps:0}],sn:"VisitFacetOperator",rt:$n[3].SemanticInfo,p:[$n[3].FacetOperator]},{ov:!0,a:2,n:"VisitFacetWithExpressionClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithExpressionClause,ps:0}],sn:"VisitFacetWithExpressionClause",rt:$n[3].SemanticInfo,p:[$n[3].FacetWithExpressionClause]},{ov:!0,a:2,n:"VisitFacetWithOperatorClause",t:8,pi:[{n:"node",pt:$n[3].FacetWithOperatorClause,ps:0}],sn:"VisitFacetWithOperatorClause",rt:$n[3].SemanticInfo,p:[$n[3].FacetWithOperatorClause]},{ov:!0,a:2,n:"VisitFilterOperator",t:8,pi:[{n:"node",pt:$n[3].FilterOperator,ps:0}],sn:"VisitFilterOperator",rt:$n[3].SemanticInfo,p:[$n[3].FilterOperator]},{ov:!0,a:2,n:"VisitFindInClause",t:8,pi:[{n:"node",pt:$n[3].FindInClause,ps:0}],sn:"VisitFindInClause",rt:$n[3].SemanticInfo,p:[$n[3].FindInClause]},{ov:!0,a:2,n:"VisitFindOperator",t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"VisitFindOperator",rt:$n[3].SemanticInfo,p:[$n[3].FindOperator]},{ov:!0,a:2,n:"VisitFindProjectClause",t:8,pi:[{n:"node",pt:$n[3].FindProjectClause,ps:0}],sn:"VisitFindProjectClause",rt:$n[3].SemanticInfo,p:[$n[3].FindProjectClause]},{ov:!0,a:2,n:"VisitForkExpression",t:8,pi:[{n:"node",pt:$n[3].ForkExpression,ps:0}],sn:"VisitForkExpression",rt:$n[3].SemanticInfo,p:[$n[3].ForkExpression]},{ov:!0,a:2,n:"VisitForkOperator",t:8,pi:[{n:"node",pt:$n[3].ForkOperator,ps:0}],sn:"VisitForkOperator",rt:$n[3].SemanticInfo,p:[$n[3].ForkOperator]},{ov:!0,a:2,n:"VisitFunctionBody",t:8,pi:[{n:"node",pt:$n[3].FunctionBody,ps:0}],sn:"VisitFunctionBody",rt:$n[3].SemanticInfo,p:[$n[3].FunctionBody]},{ov:!0,a:2,n:"VisitFunctionCallExpression",t:8,pi:[{n:"node",pt:$n[3].FunctionCallExpression,ps:0}],sn:"VisitFunctionCallExpression",rt:$n[3].SemanticInfo,p:[$n[3].FunctionCallExpression]},{ov:!0,a:2,n:"VisitFunctionDeclaration",t:8,pi:[{n:"node",pt:$n[3].FunctionDeclaration,ps:0}],sn:"VisitFunctionDeclaration",rt:$n[3].SemanticInfo,p:[$n[3].FunctionDeclaration]},{ov:!0,a:2,n:"VisitFunctionParameter",t:8,pi:[{n:"node",pt:$n[3].FunctionParameter,ps:0}],sn:"VisitFunctionParameter",rt:$n[3].SemanticInfo,p:[$n[3].FunctionParameter]},{ov:!0,a:2,n:"VisitFunctionParameters",t:8,pi:[{n:"node",pt:$n[3].FunctionParameters,ps:0}],sn:"VisitFunctionParameters",rt:$n[3].SemanticInfo,p:[$n[3].FunctionParameters]},{ov:!0,a:2,n:"VisitGetSchemaOperator",t:8,pi:[{n:"node",pt:$n[3].GetSchemaOperator,ps:0}],sn:"VisitGetSchemaOperator",rt:$n[3].SemanticInfo,p:[$n[3].GetSchemaOperator]},{ov:!0,a:2,n:"VisitHasAllExpression",t:8,pi:[{n:"node",pt:$n[3].HasAllExpression,ps:0}],sn:"VisitHasAllExpression",rt:$n[3].SemanticInfo,p:[$n[3].HasAllExpression]},{ov:!0,a:2,n:"VisitHasAnyExpression",t:8,pi:[{n:"node",pt:$n[3].HasAnyExpression,ps:0}],sn:"VisitHasAnyExpression",rt:$n[3].SemanticInfo,p:[$n[3].HasAnyExpression]},{ov:!0,a:2,n:"VisitInExpression",t:8,pi:[{n:"node",pt:$n[3].InExpression,ps:0}],sn:"VisitInExpression",rt:$n[3].SemanticInfo,p:[$n[3].InExpression]},{ov:!0,a:2,n:"VisitInvokeOperator",t:8,pi:[{n:"node",pt:$n[3].InvokeOperator,ps:0}],sn:"VisitInvokeOperator",rt:$n[3].SemanticInfo,p:[$n[3].InvokeOperator]},{ov:!0,a:2,n:"VisitJoinOnClause",t:8,pi:[{n:"node",pt:$n[3].JoinOnClause,ps:0}],sn:"VisitJoinOnClause",rt:$n[3].SemanticInfo,p:[$n[3].JoinOnClause]},{ov:!0,a:2,n:"VisitJoinOperator",t:8,pi:[{n:"node",pt:$n[3].JoinOperator,ps:0}],sn:"VisitJoinOperator",rt:$n[3].SemanticInfo,p:[$n[3].JoinOperator]},{ov:!0,a:2,n:"VisitJoinWhereClause",t:8,pi:[{n:"node",pt:$n[3].JoinWhereClause,ps:0}],sn:"VisitJoinWhereClause",rt:$n[3].SemanticInfo,p:[$n[3].JoinWhereClause]},{ov:!0,a:2,n:"VisitJsonArrayExpression",t:8,pi:[{n:"node",pt:$n[3].JsonArrayExpression,ps:0}],sn:"VisitJsonArrayExpression",rt:$n[3].SemanticInfo,p:[$n[3].JsonArrayExpression]},{ov:!0,a:2,n:"VisitJsonObjectExpression",t:8,pi:[{n:"node",pt:$n[3].JsonObjectExpression,ps:0}],sn:"VisitJsonObjectExpression",rt:$n[3].SemanticInfo,p:[$n[3].JsonObjectExpression]},{ov:!0,a:2,n:"VisitJsonPair",t:8,pi:[{n:"node",pt:$n[3].JsonPair,ps:0}],sn:"VisitJsonPair",rt:$n[3].SemanticInfo,p:[$n[3].JsonPair]},{ov:!0,a:2,n:"VisitLetStatement",t:8,pi:[{n:"node",pt:$n[3].LetStatement,ps:0}],sn:"VisitLetStatement",rt:$n[3].SemanticInfo,p:[$n[3].LetStatement]},{ov:!0,a:2,n:"VisitList",t:8,pi:[{n:"list",pt:$n[3].SyntaxList,ps:0}],sn:"VisitList",rt:$n[3].SemanticInfo,p:[$n[3].SyntaxList]},{ov:!0,a:2,n:"VisitLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].LiteralExpression,ps:0}],sn:"VisitLiteralExpression",rt:$n[3].SemanticInfo,p:[$n[3].LiteralExpression]},{ov:!0,a:2,n:"VisitLookupOperator",t:8,pi:[{n:"node",pt:$n[3].LookupOperator,ps:0}],sn:"VisitLookupOperator",rt:$n[3].SemanticInfo,p:[$n[3].LookupOperator]},{ov:!0,a:2,n:"VisitMakeSeriesByClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesByClause,ps:0}],sn:"VisitMakeSeriesByClause",rt:$n[3].SemanticInfo,p:[$n[3].MakeSeriesByClause]},{ov:!0,a:2,n:"VisitMakeSeriesExpression",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesExpression,ps:0}],sn:"VisitMakeSeriesExpression",rt:$n[3].SemanticInfo,p:[$n[3].MakeSeriesExpression]},{ov:!0,a:2,n:"VisitMakeSeriesFromClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromClause,ps:0}],sn:"VisitMakeSeriesFromClause",rt:$n[3].SemanticInfo,p:[$n[3].MakeSeriesFromClause]},{ov:!0,a:2,n:"VisitMakeSeriesFromToStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesFromToStepClause,ps:0}],sn:"VisitMakeSeriesFromToStepClause",rt:$n[3].SemanticInfo,p:[$n[3].MakeSeriesFromToStepClause]},{ov:!0,a:2,n:"VisitMakeSeriesInRangeClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesInRangeClause,ps:0}],sn:"VisitMakeSeriesInRangeClause",rt:$n[3].SemanticInfo,p:[$n[3].MakeSeriesInRangeClause]},{ov:!0,a:2,n:"VisitMakeSeriesOnClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOnClause,ps:0}],sn:"VisitMakeSeriesOnClause",rt:$n[3].SemanticInfo,p:[$n[3].MakeSeriesOnClause]},{ov:!0,a:2,n:"VisitMakeSeriesOperator",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOperator,ps:0}],sn:"VisitMakeSeriesOperator",rt:$n[3].SemanticInfo,p:[$n[3].MakeSeriesOperator]},{ov:!0,a:2,n:"VisitMakeSeriesStepClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesStepClause,ps:0}],sn:"VisitMakeSeriesStepClause",rt:$n[3].SemanticInfo,p:[$n[3].MakeSeriesStepClause]},{ov:!0,a:2,n:"VisitMakeSeriesToClause",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesToClause,ps:0}],sn:"VisitMakeSeriesToClause",rt:$n[3].SemanticInfo,p:[$n[3].MakeSeriesToClause]},{ov:!0,a:2,n:"VisitMaterializeExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializeExpression,ps:0}],sn:"VisitMaterializeExpression",rt:$n[3].SemanticInfo,p:[$n[3].MaterializeExpression]},{ov:!0,a:2,n:"VisitMaterializedViewCombineClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineClause,ps:0}],sn:"VisitMaterializedViewCombineClause",rt:$n[3].SemanticInfo,p:[$n[3].MaterializedViewCombineClause]},{ov:!0,a:2,n:"VisitMaterializedViewCombineExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineExpression,ps:0}],sn:"VisitMaterializedViewCombineExpression",rt:$n[3].SemanticInfo,p:[$n[3].MaterializedViewCombineExpression]},{ov:!0,a:2,n:"VisitMaterializedViewCombineNameClause",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineNameClause,ps:0}],sn:"VisitMaterializedViewCombineNameClause",rt:$n[3].SemanticInfo,p:[$n[3].MaterializedViewCombineNameClause]},{ov:!0,a:2,n:"VisitMvApplyContextIdClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyContextIdClause,ps:0}],sn:"VisitMvApplyContextIdClause",rt:$n[3].SemanticInfo,p:[$n[3].MvApplyContextIdClause]},{ov:!0,a:2,n:"VisitMvApplyExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplyExpression,ps:0}],sn:"VisitMvApplyExpression",rt:$n[3].SemanticInfo,p:[$n[3].MvApplyExpression]},{ov:!0,a:2,n:"VisitMvApplyOperator",t:8,pi:[{n:"node",pt:$n[3].MvApplyOperator,ps:0}],sn:"VisitMvApplyOperator",rt:$n[3].SemanticInfo,p:[$n[3].MvApplyOperator]},{ov:!0,a:2,n:"VisitMvApplyRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvApplyRowLimitClause,ps:0}],sn:"VisitMvApplyRowLimitClause",rt:$n[3].SemanticInfo,p:[$n[3].MvApplyRowLimitClause]},{ov:!0,a:2,n:"VisitMvApplySubqueryExpression",t:8,pi:[{n:"node",pt:$n[3].MvApplySubqueryExpression,ps:0}],sn:"VisitMvApplySubqueryExpression",rt:$n[3].SemanticInfo,p:[$n[3].MvApplySubqueryExpression]},{ov:!0,a:2,n:"VisitMvExpandExpression",t:8,pi:[{n:"node",pt:$n[3].MvExpandExpression,ps:0}],sn:"VisitMvExpandExpression",rt:$n[3].SemanticInfo,p:[$n[3].MvExpandExpression]},{ov:!0,a:2,n:"VisitMvExpandOperator",t:8,pi:[{n:"node",pt:$n[3].MvExpandOperator,ps:0}],sn:"VisitMvExpandOperator",rt:$n[3].SemanticInfo,p:[$n[3].MvExpandOperator]},{ov:!0,a:2,n:"VisitMvExpandRowLimitClause",t:8,pi:[{n:"node",pt:$n[3].MvExpandRowLimitClause,ps:0}],sn:"VisitMvExpandRowLimitClause",rt:$n[3].SemanticInfo,p:[$n[3].MvExpandRowLimitClause]},{ov:!0,a:2,n:"VisitNameAndTypeDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameAndTypeDeclaration,ps:0}],sn:"VisitNameAndTypeDeclaration",rt:$n[3].SemanticInfo,p:[$n[3].NameAndTypeDeclaration]},{ov:!0,a:2,n:"VisitNameDeclaration",t:8,pi:[{n:"node",pt:$n[3].NameDeclaration,ps:0}],sn:"VisitNameDeclaration",rt:$n[3].SemanticInfo,p:[$n[3].NameDeclaration]},{ov:!0,a:2,n:"VisitNameEqualsClause",t:8,pi:[{n:"node",pt:$n[3].NameEqualsClause,ps:0}],sn:"VisitNameEqualsClause",rt:$n[3].SemanticInfo,p:[$n[3].NameEqualsClause]},{ov:!0,a:2,n:"VisitNameReference",t:8,pi:[{n:"node",pt:$n[3].NameReference,ps:0}],sn:"VisitNameReference",rt:$n[3].SemanticInfo,p:[$n[3].NameReference]},{ov:!0,a:2,n:"VisitNameReferenceList",t:8,pi:[{n:"node",pt:$n[3].NameReferenceList,ps:0}],sn:"VisitNameReferenceList",rt:$n[3].SemanticInfo,p:[$n[3].NameReferenceList]},{ov:!0,a:2,n:"VisitNamedParameter",t:8,pi:[{n:"node",pt:$n[3].NamedParameter,ps:0}],sn:"VisitNamedParameter",rt:$n[3].SemanticInfo,p:[$n[3].NamedParameter]},{ov:!0,a:2,n:"VisitOptionValueClause",t:8,pi:[{n:"node",pt:$n[3].OptionValueClause,ps:0}],sn:"VisitOptionValueClause",rt:$n[3].SemanticInfo,p:[$n[3].OptionValueClause]},{ov:!0,a:2,n:"VisitOrderedExpression",t:8,pi:[{n:"node",pt:$n[3].OrderedExpression,ps:0}],sn:"VisitOrderedExpression",rt:$n[3].SemanticInfo,p:[$n[3].OrderedExpression]},{ov:!0,a:2,n:"VisitOrderingClause",t:8,pi:[{n:"node",pt:$n[3].OrderingClause,ps:0}],sn:"VisitOrderingClause",rt:$n[3].SemanticInfo,p:[$n[3].OrderingClause]},{ov:!0,a:2,n:"VisitOrderingNullsClause",t:8,pi:[{n:"node",pt:$n[3].OrderingNullsClause,ps:0}],sn:"VisitOrderingNullsClause",rt:$n[3].SemanticInfo,p:[$n[3].OrderingNullsClause]},{ov:!0,a:2,n:"VisitPackExpression",t:8,pi:[{n:"node",pt:$n[3].PackExpression,ps:0}],sn:"VisitPackExpression",rt:$n[3].SemanticInfo,p:[$n[3].PackExpression]},{ov:!0,a:2,n:"VisitParenthesizedExpression",t:8,pi:[{n:"node",pt:$n[3].ParenthesizedExpression,ps:0}],sn:"VisitParenthesizedExpression",rt:$n[3].SemanticInfo,p:[$n[3].ParenthesizedExpression]},{ov:!0,a:2,n:"VisitParseOperator",t:8,pi:[{n:"node",pt:$n[3].ParseOperator,ps:0}],sn:"VisitParseOperator",rt:$n[3].SemanticInfo,p:[$n[3].ParseOperator]},{ov:!0,a:2,n:"VisitParseWhereOperator",t:8,pi:[{n:"node",pt:$n[3].ParseWhereOperator,ps:0}],sn:"VisitParseWhereOperator",rt:$n[3].SemanticInfo,p:[$n[3].ParseWhereOperator]},{ov:!0,a:2,n:"VisitPartitionOperator",t:8,pi:[{n:"node",pt:$n[3].PartitionOperator,ps:0}],sn:"VisitPartitionOperator",rt:$n[3].SemanticInfo,p:[$n[3].PartitionOperator]},{ov:!0,a:2,n:"VisitPartitionQuery",t:8,pi:[{n:"node",pt:$n[3].PartitionQuery,ps:0}],sn:"VisitPartitionQuery",rt:$n[3].SemanticInfo,p:[$n[3].PartitionQuery]},{ov:!0,a:2,n:"VisitPartitionScope",t:8,pi:[{n:"node",pt:$n[3].PartitionScope,ps:0}],sn:"VisitPartitionScope",rt:$n[3].SemanticInfo,p:[$n[3].PartitionScope]},{ov:!0,a:2,n:"VisitPartitionSubquery",t:8,pi:[{n:"node",pt:$n[3].PartitionSubquery,ps:0}],sn:"VisitPartitionSubquery",rt:$n[3].SemanticInfo,p:[$n[3].PartitionSubquery]},{ov:!0,a:2,n:"VisitPathExpression",t:8,pi:[{n:"node",pt:$n[3].PathExpression,ps:0}],sn:"VisitPathExpression",rt:$n[3].SemanticInfo,p:[$n[3].PathExpression]},{ov:!0,a:2,n:"VisitPatternDeclaration",t:8,pi:[{n:"node",pt:$n[3].PatternDeclaration,ps:0}],sn:"VisitPatternDeclaration",rt:$n[3].SemanticInfo,p:[$n[3].PatternDeclaration]},{ov:!0,a:2,n:"VisitPatternMatch",t:8,pi:[{n:"node",pt:$n[3].PatternMatch,ps:0}],sn:"VisitPatternMatch",rt:$n[3].SemanticInfo,p:[$n[3].PatternMatch]},{ov:!0,a:2,n:"VisitPatternPathParameter",t:8,pi:[{n:"node",pt:$n[3].PatternPathParameter,ps:0}],sn:"VisitPatternPathParameter",rt:$n[3].SemanticInfo,p:[$n[3].PatternPathParameter]},{ov:!0,a:2,n:"VisitPatternPathValue",t:8,pi:[{n:"node",pt:$n[3].PatternPathValue,ps:0}],sn:"VisitPatternPathValue",rt:$n[3].SemanticInfo,p:[$n[3].PatternPathValue]},{ov:!0,a:2,n:"VisitPatternStatement",t:8,pi:[{n:"node",pt:$n[3].PatternStatement,ps:0}],sn:"VisitPatternStatement",rt:$n[3].SemanticInfo,p:[$n[3].PatternStatement]},{ov:!0,a:2,n:"VisitPipeExpression",t:8,pi:[{n:"node",pt:$n[3].PipeExpression,ps:0}],sn:"VisitPipeExpression",rt:$n[3].SemanticInfo,p:[$n[3].PipeExpression]},{ov:!0,a:2,n:"VisitPrefixUnaryExpression",t:8,pi:[{n:"node",pt:$n[3].PrefixUnaryExpression,ps:0}],sn:"VisitPrefixUnaryExpression",rt:$n[3].SemanticInfo,p:[$n[3].PrefixUnaryExpression]},{ov:!0,a:2,n:"VisitPrimitiveTypeExpression",t:8,pi:[{n:"node",pt:$n[3].PrimitiveTypeExpression,ps:0}],sn:"VisitPrimitiveTypeExpression",rt:$n[3].SemanticInfo,p:[$n[3].PrimitiveTypeExpression]},{ov:!0,a:2,n:"VisitPrintOperator",t:8,pi:[{n:"node",pt:$n[3].PrintOperator,ps:0}],sn:"VisitPrintOperator",rt:$n[3].SemanticInfo,p:[$n[3].PrintOperator]},{ov:!0,a:2,n:"VisitProjectAwayOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectAwayOperator,ps:0}],sn:"VisitProjectAwayOperator",rt:$n[3].SemanticInfo,p:[$n[3].ProjectAwayOperator]},{ov:!0,a:2,n:"VisitProjectKeepOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectKeepOperator,ps:0}],sn:"VisitProjectKeepOperator",rt:$n[3].SemanticInfo,p:[$n[3].ProjectKeepOperator]},{ov:!0,a:2,n:"VisitProjectOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectOperator,ps:0}],sn:"VisitProjectOperator",rt:$n[3].SemanticInfo,p:[$n[3].ProjectOperator]},{ov:!0,a:2,n:"VisitProjectRenameOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectRenameOperator,ps:0}],sn:"VisitProjectRenameOperator",rt:$n[3].SemanticInfo,p:[$n[3].ProjectRenameOperator]},{ov:!0,a:2,n:"VisitProjectReorderOperator",t:8,pi:[{n:"node",pt:$n[3].ProjectReorderOperator,ps:0}],sn:"VisitProjectReorderOperator",rt:$n[3].SemanticInfo,p:[$n[3].ProjectReorderOperator]},{ov:!0,a:2,n:"VisitQueryBlock",t:8,pi:[{n:"node",pt:$n[3].QueryBlock,ps:0}],sn:"VisitQueryBlock",rt:$n[3].SemanticInfo,p:[$n[3].QueryBlock]},{ov:!0,a:2,n:"VisitQueryParametersStatement",t:8,pi:[{n:"node",pt:$n[3].QueryParametersStatement,ps:0}],sn:"VisitQueryParametersStatement",rt:$n[3].SemanticInfo,p:[$n[3].QueryParametersStatement]},{ov:!0,a:2,n:"VisitRangeOperator",t:8,pi:[{n:"node",pt:$n[3].RangeOperator,ps:0}],sn:"VisitRangeOperator",rt:$n[3].SemanticInfo,p:[$n[3].RangeOperator]},{ov:!0,a:2,n:"VisitReduceByOperator",t:8,pi:[{n:"node",pt:$n[3].ReduceByOperator,ps:0}],sn:"VisitReduceByOperator",rt:$n[3].SemanticInfo,p:[$n[3].ReduceByOperator]},{ov:!0,a:2,n:"VisitReduceByWithClause",t:8,pi:[{n:"node",pt:$n[3].ReduceByWithClause,ps:0}],sn:"VisitReduceByWithClause",rt:$n[3].SemanticInfo,p:[$n[3].ReduceByWithClause]},{ov:!0,a:2,n:"VisitRenameList",t:8,pi:[{n:"node",pt:$n[3].RenameList,ps:0}],sn:"VisitRenameList",rt:$n[3].SemanticInfo,p:[$n[3].RenameList]},{ov:!0,a:2,n:"VisitRenderOperator",t:8,pi:[{n:"node",pt:$n[3].RenderOperator,ps:0}],sn:"VisitRenderOperator",rt:$n[3].SemanticInfo,p:[$n[3].RenderOperator]},{ov:!0,a:2,n:"VisitRenderWithClause",t:8,pi:[{n:"node",pt:$n[3].RenderWithClause,ps:0}],sn:"VisitRenderWithClause",rt:$n[3].SemanticInfo,p:[$n[3].RenderWithClause]},{ov:!0,a:2,n:"VisitRestrictStatement",t:8,pi:[{n:"node",pt:$n[3].RestrictStatement,ps:0}],sn:"VisitRestrictStatement",rt:$n[3].SemanticInfo,p:[$n[3].RestrictStatement]},{ov:!0,a:2,n:"VisitSampleDistinctOperator",t:8,pi:[{n:"node",pt:$n[3].SampleDistinctOperator,ps:0}],sn:"VisitSampleDistinctOperator",rt:$n[3].SemanticInfo,p:[$n[3].SampleDistinctOperator]},{ov:!0,a:2,n:"VisitSampleOperator",t:8,pi:[{n:"node",pt:$n[3].SampleOperator,ps:0}],sn:"VisitSampleOperator",rt:$n[3].SemanticInfo,p:[$n[3].SampleOperator]},{ov:!0,a:2,n:"VisitScanAssignment",t:8,pi:[{n:"node",pt:$n[3].ScanAssignment,ps:0}],sn:"VisitScanAssignment",rt:$n[3].SemanticInfo,p:[$n[3].ScanAssignment]},{ov:!0,a:2,n:"VisitScanComputationClause",t:8,pi:[{n:"node",pt:$n[3].ScanComputationClause,ps:0}],sn:"VisitScanComputationClause",rt:$n[3].SemanticInfo,p:[$n[3].ScanComputationClause]},{ov:!0,a:2,n:"VisitScanDeclareClause",t:8,pi:[{n:"node",pt:$n[3].ScanDeclareClause,ps:0}],sn:"VisitScanDeclareClause",rt:$n[3].SemanticInfo,p:[$n[3].ScanDeclareClause]},{ov:!0,a:2,n:"VisitScanOperator",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"VisitScanOperator",rt:$n[3].SemanticInfo,p:[$n[3].ScanOperator]},{ov:!0,a:2,n:"VisitScanOrderByClause",t:8,pi:[{n:"node",pt:$n[3].ScanOrderByClause,ps:0}],sn:"VisitScanOrderByClause",rt:$n[3].SemanticInfo,p:[$n[3].ScanOrderByClause]},{ov:!0,a:2,n:"VisitScanPartitionByClause",t:8,pi:[{n:"node",pt:$n[3].ScanPartitionByClause,ps:0}],sn:"VisitScanPartitionByClause",rt:$n[3].SemanticInfo,p:[$n[3].ScanPartitionByClause]},{ov:!0,a:2,n:"VisitScanStep",t:8,pi:[{n:"node",pt:$n[3].ScanStep,ps:0}],sn:"VisitScanStep",rt:$n[3].SemanticInfo,p:[$n[3].ScanStep]},{ov:!0,a:2,n:"VisitSchemaTypeExpression",t:8,pi:[{n:"node",pt:$n[3].SchemaTypeExpression,ps:0}],sn:"VisitSchemaTypeExpression",rt:$n[3].SemanticInfo,p:[$n[3].SchemaTypeExpression]},{ov:!0,a:2,n:"VisitSearchOperator",t:8,pi:[{n:"node",pt:$n[3].SearchOperator,ps:0}],sn:"VisitSearchOperator",rt:$n[3].SemanticInfo,p:[$n[3].SearchOperator]},{ov:!0,a:2,n:"VisitSeparatedElement",t:8,pi:[{n:"separatedElement",pt:$n[3].SeparatedElement,ps:0}],sn:"VisitSeparatedElement",rt:$n[3].SemanticInfo,p:[$n[3].SeparatedElement]},{ov:!0,a:2,n:"VisitSerializeOperator",t:8,pi:[{n:"node",pt:$n[3].SerializeOperator,ps:0}],sn:"VisitSerializeOperator",rt:$n[3].SemanticInfo,p:[$n[3].SerializeOperator]},{ov:!0,a:2,n:"VisitSetOptionStatement",t:8,pi:[{n:"node",pt:$n[3].SetOptionStatement,ps:0}],sn:"VisitSetOptionStatement",rt:$n[3].SemanticInfo,p:[$n[3].SetOptionStatement]},{ov:!0,a:2,n:"VisitSimpleNamedExpression",t:8,pi:[{n:"node",pt:$n[3].SimpleNamedExpression,ps:0}],sn:"VisitSimpleNamedExpression",rt:$n[3].SemanticInfo,p:[$n[3].SimpleNamedExpression]},{ov:!0,a:2,n:"VisitSkippedTokens",t:8,pi:[{n:"node",pt:$n[3].SkippedTokens,ps:0}],sn:"VisitSkippedTokens",rt:$n[3].SemanticInfo,p:[$n[3].SkippedTokens]},{ov:!0,a:2,n:"VisitSortOperator",t:8,pi:[{n:"node",pt:$n[3].SortOperator,ps:0}],sn:"VisitSortOperator",rt:$n[3].SemanticInfo,p:[$n[3].SortOperator]},{ov:!0,a:2,n:"VisitStarExpression",t:8,pi:[{n:"node",pt:$n[3].StarExpression,ps:0}],sn:"VisitStarExpression",rt:$n[3].SemanticInfo,p:[$n[3].StarExpression]},{ov:!0,a:2,n:"VisitSummarizeByClause",t:8,pi:[{n:"node",pt:$n[3].SummarizeByClause,ps:0}],sn:"VisitSummarizeByClause",rt:$n[3].SemanticInfo,p:[$n[3].SummarizeByClause]},{ov:!0,a:2,n:"VisitSummarizeOperator",t:8,pi:[{n:"node",pt:$n[3].SummarizeOperator,ps:0}],sn:"VisitSummarizeOperator",rt:$n[3].SemanticInfo,p:[$n[3].SummarizeOperator]},{ov:!0,a:2,n:"VisitTakeOperator",t:8,pi:[{n:"node",pt:$n[3].TakeOperator,ps:0}],sn:"VisitTakeOperator",rt:$n[3].SemanticInfo,p:[$n[3].TakeOperator]},{ov:!0,a:2,n:"VisitToScalarExpression",t:8,pi:[{n:"node",pt:$n[3].ToScalarExpression,ps:0}],sn:"VisitToScalarExpression",rt:$n[3].SemanticInfo,p:[$n[3].ToScalarExpression]},{ov:!0,a:2,n:"VisitToTableExpression",t:8,pi:[{n:"node",pt:$n[3].ToTableExpression,ps:0}],sn:"VisitToTableExpression",rt:$n[3].SemanticInfo,p:[$n[3].ToTableExpression]},{ov:!0,a:2,n:"VisitToTypeOfClause",t:8,pi:[{n:"node",pt:$n[3].ToTypeOfClause,ps:0}],sn:"VisitToTypeOfClause",rt:$n[3].SemanticInfo,p:[$n[3].ToTypeOfClause]},{ov:!0,a:2,n:"VisitTokenName",t:8,pi:[{n:"node",pt:$n[3].TokenName,ps:0}],sn:"VisitTokenName",rt:$n[3].SemanticInfo,p:[$n[3].TokenName]},{ov:!0,a:2,n:"VisitTopHittersByClause",t:8,pi:[{n:"node",pt:$n[3].TopHittersByClause,ps:0}],sn:"VisitTopHittersByClause",rt:$n[3].SemanticInfo,p:[$n[3].TopHittersByClause]},{ov:!0,a:2,n:"VisitTopHittersOperator",t:8,pi:[{n:"node",pt:$n[3].TopHittersOperator,ps:0}],sn:"VisitTopHittersOperator",rt:$n[3].SemanticInfo,p:[$n[3].TopHittersOperator]},{ov:!0,a:2,n:"VisitTopNestedClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedClause,ps:0}],sn:"VisitTopNestedClause",rt:$n[3].SemanticInfo,p:[$n[3].TopNestedClause]},{ov:!0,a:2,n:"VisitTopNestedOperator",t:8,pi:[{n:"node",pt:$n[3].TopNestedOperator,ps:0}],sn:"VisitTopNestedOperator",rt:$n[3].SemanticInfo,p:[$n[3].TopNestedOperator]},{ov:!0,a:2,n:"VisitTopNestedWithOthersClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedWithOthersClause,ps:0}],sn:"VisitTopNestedWithOthersClause",rt:$n[3].SemanticInfo,p:[$n[3].TopNestedWithOthersClause]},{ov:!0,a:2,n:"VisitTopOperator",t:8,pi:[{n:"node",pt:$n[3].TopOperator,ps:0}],sn:"VisitTopOperator",rt:$n[3].SemanticInfo,p:[$n[3].TopOperator]},{ov:!0,a:2,n:"VisitTypeOfLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].TypeOfLiteralExpression,ps:0}],sn:"VisitTypeOfLiteralExpression",rt:$n[3].SemanticInfo,p:[$n[3].TypeOfLiteralExpression]},{ov:!0,a:2,n:"VisitTypedColumnReference",t:8,pi:[{n:"node",pt:$n[3].TypedColumnReference,ps:0}],sn:"VisitTypedColumnReference",rt:$n[3].SemanticInfo,p:[$n[3].TypedColumnReference]},{ov:!0,a:2,n:"VisitUnionOperator",t:8,pi:[{n:"node",pt:$n[3].UnionOperator,ps:0}],sn:"VisitUnionOperator",rt:$n[3].SemanticInfo,p:[$n[3].UnionOperator]},{ov:!0,a:2,n:"VisitUnknownCommand",t:8,pi:[{n:"node",pt:$n[3].UnknownCommand,ps:0}],sn:"VisitUnknownCommand",rt:$n[3].SemanticInfo,p:[$n[3].UnknownCommand]},{ov:!0,a:2,n:"VisitWildcardedName",t:8,pi:[{n:"node",pt:$n[3].WildcardedName,ps:0}],sn:"VisitWildcardedName",rt:$n[3].SemanticInfo,p:[$n[3].WildcardedName]},{a:1,n:"VisitWildcardedNameReference",t:8,pi:[{n:"node",pt:$n[3].NameReference,ps:0},{n:"pattern",pt:$n[3].SyntaxToken,ps:1}],sn:"VisitWildcardedNameReference",rt:$n[3].SemanticInfo,p:[$n[3].NameReference,$n[3].SyntaxToken]},{a:2,n:"RightRowScopeOrEmpty",t:16,rt:$n[1].TableSymbol,g:{a:2,n:"get_RightRowScopeOrEmpty",t:8,rt:$n[1].TableSymbol,fg:"RightRowScopeOrEmpty"},fn:"RightRowScopeOrEmpty"},{a:2,n:"RowScopeOrEmpty",t:16,rt:$n[1].TableSymbol,g:{a:2,n:"get_RowScopeOrEmpty",t:8,rt:$n[1].TableSymbol,fg:"RowScopeOrEmpty"},fn:"RowScopeOrEmpty"},{a:1,n:"_binder",t:4,rt:$n[7].Binder,sn:"_binder",ro:!0},{a:1,n:"s_ConsumeStatsSchema",is:!0,t:4,rt:$n[1].TableSymbol,sn:"s_ConsumeStatsSchema",ro:!0},{a:1,n:"s_GetSchemaInfo",is:!0,t:4,rt:$n[3].SemanticInfo,sn:"s_GetSchemaInfo",ro:!0},{a:1,n:"s_GetSchemaSchema",is:!0,t:4,rt:$n[1].TableSymbol,sn:"s_GetSchemaSchema",ro:!0},{a:1,n:"s_ReduceColumns",is:!0,t:4,rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol),sn:"s_ReduceColumns",ro:!0},{a:1,n:"s_symbolMapPool",is:!0,t:4,rt:$n[5].ObjectPool$1(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.Symbol)),sn:"s_symbolMapPool",ro:!0}]}},$n);$m("Kusto.Language.Binding.Binder.SearchPredicateBinder",function(){return{td:$n[7].Binder,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[7].Binder,$n[7].Binder.TreeBinder],pi:[{n:"binder",pt:$n[7].Binder,ps:0},{n:"treeBinder",pt:$n[7].Binder.TreeBinder,ps:1}],sn:"ctor"},{ov:!0,a:3,n:"DefaultVisit",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"DefaultVisit",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{ov:!0,a:2,n:"VisitBinaryExpression",t:8,pi:[{n:"node",pt:$n[3].BinaryExpression,ps:0}],sn:"VisitBinaryExpression",rt:$n[2].Void,p:[$n[3].BinaryExpression]},{ov:!0,a:2,n:"VisitLiteralExpression",t:8,pi:[{n:"node",pt:$n[3].LiteralExpression,ps:0}],sn:"VisitLiteralExpression",rt:$n[2].Void,p:[$n[3].LiteralExpression]},{ov:!0,a:2,n:"VisitParenthesizedExpression",t:8,pi:[{n:"node",pt:$n[3].ParenthesizedExpression,ps:0}],sn:"VisitParenthesizedExpression",rt:$n[2].Void,p:[$n[3].ParenthesizedExpression]},{ov:!0,a:2,n:"VisitStarExpression",t:8,pi:[{n:"node",pt:$n[3].StarExpression,ps:0}],sn:"VisitStarExpression",rt:$n[2].Void,p:[$n[3].StarExpression]},{a:2,n:"RowScopeOrEmpty",t:16,rt:$n[1].TableSymbol,g:{a:2,n:"get_RowScopeOrEmpty",t:8,rt:$n[1].TableSymbol,fg:"RowScopeOrEmpty"},fn:"RowScopeOrEmpty"},{a:1,n:"_binder",t:4,rt:$n[7].Binder,sn:"_binder",ro:!0},{a:1,n:"_treeBinder",t:4,rt:$n[7].Binder.TreeBinder,sn:"_treeBinder",ro:!0}]}},$n);$m("Kusto.Language.Binding.Binder.TreeBinder",function(){return{td:$n[7].Binder,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[7].Binder],pi:[{n:"binder",pt:$n[7].Binder,ps:0}],sn:"ctor"},{a:1,n:"BindNode",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"BindNode",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{ov:!0,a:3,n:"DefaultVisit",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"DefaultVisit",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{ov:!0,a:2,n:"VisitAliasStatement",t:8,pi:[{n:"node",pt:$n[3].AliasStatement,ps:0}],sn:"VisitAliasStatement",rt:$n[2].Void,p:[$n[3].AliasStatement]},{a:1,n:"VisitArgumentList",t:8,pi:[{n:"list",pt:$n[3].ExpressionList,ps:0},{n:"signature",pt:$n[1].Signature,ps:1},{n:"argumentScope",pt:$n[7].Binder.ScopeKind,ps:2}],sn:"VisitArgumentList",rt:$n[2].Void,p:[$n[3].ExpressionList,$n[1].Signature,$n[7].Binder.ScopeKind]},{ov:!0,a:2,n:"VisitAsOperator",t:8,pi:[{n:"node",pt:$n[3].AsOperator,ps:0}],sn:"VisitAsOperator",rt:$n[2].Void,p:[$n[3].AsOperator]},{a:1,n:"VisitChildren",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0}],sn:"VisitChildren",rt:$n[2].Void,p:[$n[3].SyntaxNode]},{ov:!0,a:2,n:"VisitCommandBlock",t:8,pi:[{n:"node",pt:$n[3].CommandBlock,ps:0}],sn:"VisitCommandBlock",rt:$n[2].Void,p:[$n[3].CommandBlock]},{ov:!0,a:2,n:"VisitEvaluateOperator",t:8,pi:[{n:"node",pt:$n[3].EvaluateOperator,ps:0}],sn:"VisitEvaluateOperator",rt:$n[2].Void,p:[$n[3].EvaluateOperator]},{ov:!0,a:2,n:"VisitFindOperator",t:8,pi:[{n:"node",pt:$n[3].FindOperator,ps:0}],sn:"VisitFindOperator",rt:$n[2].Void,p:[$n[3].FindOperator]},{ov:!0,a:2,n:"VisitForkOperator",t:8,pi:[{n:"node",pt:$n[3].ForkOperator,ps:0}],sn:"VisitForkOperator",rt:$n[2].Void,p:[$n[3].ForkOperator]},{ov:!0,a:2,n:"VisitFunctionCallExpression",t:8,pi:[{n:"node",pt:$n[3].FunctionCallExpression,ps:0}],sn:"VisitFunctionCallExpression",rt:$n[2].Void,p:[$n[3].FunctionCallExpression]},{ov:!0,a:2,n:"VisitFunctionDeclaration",t:8,pi:[{n:"node",pt:$n[3].FunctionDeclaration,ps:0}],sn:"VisitFunctionDeclaration",rt:$n[2].Void,p:[$n[3].FunctionDeclaration]},{ov:!0,a:2,n:"VisitFunctionParameters",t:8,pi:[{n:"node",pt:$n[3].FunctionParameters,ps:0}],sn:"VisitFunctionParameters",rt:$n[2].Void,p:[$n[3].FunctionParameters]},{ov:!0,a:2,n:"VisitInExpression",t:8,pi:[{n:"node",pt:$n[3].InExpression,ps:0}],sn:"VisitInExpression",rt:$n[2].Void,p:[$n[3].InExpression]},{a:1,n:"VisitInScope",t:8,pi:[{n:"node",pt:$n[3].SyntaxNode,ps:0},{n:"kind",pt:$n[7].Binder.ScopeKind,ps:1}],sn:"VisitInScope",rt:$n[2].Void,p:[$n[3].SyntaxNode,$n[7].Binder.ScopeKind]},{ov:!0,a:2,n:"VisitInvokeOperator",t:8,pi:[{n:"node",pt:$n[3].InvokeOperator,ps:0}],sn:"VisitInvokeOperator",rt:$n[2].Void,p:[$n[3].InvokeOperator]},{ov:!0,a:2,n:"VisitJoinOnClause",t:8,pi:[{n:"node",pt:$n[3].JoinOnClause,ps:0}],sn:"VisitJoinOnClause",rt:$n[2].Void,p:[$n[3].JoinOnClause]},{a:1,n:"VisitJoinOnExpression",t:8,pi:[{n:"expr",pt:$n[3].Expression,ps:0}],sn:"VisitJoinOnExpression",rt:$n[2].Void,p:[$n[3].Expression]},{ov:!0,a:2,n:"VisitJoinOperator",t:8,pi:[{n:"node",pt:$n[3].JoinOperator,ps:0}],sn:"VisitJoinOperator",rt:$n[2].Void,p:[$n[3].JoinOperator]},{ov:!0,a:2,n:"VisitLetStatement",t:8,pi:[{n:"node",pt:$n[3].LetStatement,ps:0}],sn:"VisitLetStatement",rt:$n[2].Void,p:[$n[3].LetStatement]},{ov:!0,a:2,n:"VisitLookupOperator",t:8,pi:[{n:"node",pt:$n[3].LookupOperator,ps:0}],sn:"VisitLookupOperator",rt:$n[2].Void,p:[$n[3].LookupOperator]},{ov:!0,a:2,n:"VisitMakeSeriesOperator",t:8,pi:[{n:"node",pt:$n[3].MakeSeriesOperator,ps:0}],sn:"VisitMakeSeriesOperator",rt:$n[2].Void,p:[$n[3].MakeSeriesOperator]},{ov:!0,a:2,n:"VisitMaterializedViewCombineExpression",t:8,pi:[{n:"node",pt:$n[3].MaterializedViewCombineExpression,ps:0}],sn:"VisitMaterializedViewCombineExpression",rt:$n[2].Void,p:[$n[3].MaterializedViewCombineExpression]},{ov:!0,a:2,n:"VisitMvApplyOperator",t:8,pi:[{n:"node",pt:$n[3].MvApplyOperator,ps:0}],sn:"VisitMvApplyOperator",rt:$n[2].Void,p:[$n[3].MvApplyOperator]},{ov:!0,a:2,n:"VisitNameReference",t:8,pi:[{n:"node",pt:$n[3].NameReference,ps:0}],sn:"VisitNameReference",rt:$n[2].Void,p:[$n[3].NameReference]},{ov:!0,a:2,n:"VisitParenthesizedExpression",t:8,pi:[{n:"node",pt:$n[3].ParenthesizedExpression,ps:0}],sn:"VisitParenthesizedExpression",rt:$n[2].Void,p:[$n[3].ParenthesizedExpression]},{ov:!0,a:2,n:"VisitPartitionOperator",t:8,pi:[{n:"node",pt:$n[3].PartitionOperator,ps:0}],sn:"VisitPartitionOperator",rt:$n[2].Void,p:[$n[3].PartitionOperator]},{ov:!0,a:2,n:"VisitPathExpression",t:8,pi:[{n:"node",pt:$n[3].PathExpression,ps:0}],sn:"VisitPathExpression",rt:$n[2].Void,p:[$n[3].PathExpression]},{ov:!0,a:2,n:"VisitPatternDeclaration",t:8,pi:[{n:"node",pt:$n[3].PatternDeclaration,ps:0}],sn:"VisitPatternDeclaration",rt:$n[2].Void,p:[$n[3].PatternDeclaration]},{ov:!0,a:2,n:"VisitPatternStatement",t:8,pi:[{n:"node",pt:$n[3].PatternStatement,ps:0}],sn:"VisitPatternStatement",rt:$n[2].Void,p:[$n[3].PatternStatement]},{ov:!0,a:2,n:"VisitPipeExpression",t:8,pi:[{n:"node",pt:$n[3].PipeExpression,ps:0}],sn:"VisitPipeExpression",rt:$n[2].Void,p:[$n[3].PipeExpression]},{ov:!0,a:2,n:"VisitQueryParametersStatement",t:8,pi:[{n:"node",pt:$n[3].QueryParametersStatement,ps:0}],sn:"VisitQueryParametersStatement",rt:$n[2].Void,p:[$n[3].QueryParametersStatement]},{ov:!0,a:2,n:"VisitScanOperator",t:8,pi:[{n:"node",pt:$n[3].ScanOperator,ps:0}],sn:"VisitScanOperator",rt:$n[2].Void,p:[$n[3].ScanOperator]},{ov:!0,a:2,n:"VisitSearchOperator",t:8,pi:[{n:"node",pt:$n[3].SearchOperator,ps:0}],sn:"VisitSearchOperator",rt:$n[2].Void,p:[$n[3].SearchOperator]},{ov:!0,a:2,n:"VisitSummarizeOperator",t:8,pi:[{n:"node",pt:$n[3].SummarizeOperator,ps:0}],sn:"VisitSummarizeOperator",rt:$n[2].Void,p:[$n[3].SummarizeOperator]},{ov:!0,a:2,n:"VisitToScalarExpression",t:8,pi:[{n:"node",pt:$n[3].ToScalarExpression,ps:0}],sn:"VisitToScalarExpression",rt:$n[2].Void,p:[$n[3].ToScalarExpression]},{ov:!0,a:2,n:"VisitToTableExpression",t:8,pi:[{n:"node",pt:$n[3].ToTableExpression,ps:0}],sn:"VisitToTableExpression",rt:$n[2].Void,p:[$n[3].ToTableExpression]},{ov:!0,a:2,n:"VisitTopNestedClause",t:8,pi:[{n:"node",pt:$n[3].TopNestedClause,ps:0}],sn:"VisitTopNestedClause",rt:$n[2].Void,p:[$n[3].TopNestedClause]},{ov:!0,a:2,n:"VisitUnionOperator",t:8,pi:[{n:"node",pt:$n[3].UnionOperator,ps:0}],sn:"VisitUnionOperator",rt:$n[2].Void,p:[$n[3].UnionOperator]},{a:1,n:"_binder",t:4,rt:$n[7].Binder,sn:"_binder",ro:!0},{a:1,n:"_nodeBinder",t:4,rt:$n[7].Binder.NodeBinder,sn:"_nodeBinder",ro:!0},{a:1,n:"predicateBinder",t:4,rt:$n[7].Binder.SearchPredicateBinder,sn:"predicateBinder"}]}},$n);$m("Kusto.Language.Binding.LocalScope",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[7].LocalScope],pi:[{n:"outerScope",dv:null,o:!0,pt:$n[7].LocalScope,ps:0}],sn:"ctor"},{a:1,n:".ctor",t:1,p:[$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.Symbol),$n[7].LocalScope,$n[7].LocalScope],pi:[{n:"symbols",pt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.Symbol),ps:0},{n:"outerScope",pt:$n[7].LocalScope,ps:1},{n:"sharedScope",pt:$n[7].LocalScope,ps:2}],sn:"$ctor1"},{a:2,n:"AddSymbol",t:8,pi:[{n:"symbol",pt:$n[1].Symbol,ps:0}],sn:"AddSymbol",rt:$n[2].Boolean,p:[$n[1].Symbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"AddSymbols",t:8,pi:[{n:"symbols",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol),ps:0}],sn:"AddSymbols",rt:$n[2].Void,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.Symbol)]},{a:2,n:"ContainsSymbol",t:8,pi:[{n:"name",pt:$n[2].String,ps:0}],sn:"ContainsSymbol",rt:$n[2].Boolean,p:[$n[2].String],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Copy",t:8,sn:"Copy",rt:$n[7].LocalScope},{a:1,n:"GetMinimalOuterScope",is:!0,t:8,pi:[{n:"outerScope",pt:$n[7].LocalScope,ps:0}],sn:"GetMinimalOuterScope",rt:$n[7].LocalScope,p:[$n[7].LocalScope]},{a:2,n:"GetSymbols",t:8,pi:[{n:"match",pt:$n[1].SymbolMatch,ps:0},{n:"symbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:1}],sn:"GetSymbols",rt:$n[2].Void,p:[$n[1].SymbolMatch,$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:2,n:"GetSymbols",t:8,pi:[{n:"name",pt:$n[2].String,ps:0},{n:"match",pt:$n[1].SymbolMatch,ps:1},{n:"symbols",pt:$n[0].List$1(Kusto.Language.Symbols.Symbol),ps:2}],sn:"GetSymbols$1",rt:$n[2].Void,p:[$n[2].String,$n[1].SymbolMatch,$n[0].List$1(Kusto.Language.Symbols.Symbol)]},{a:1,n:"_outerScope",t:4,rt:$n[7].LocalScope,sn:"_outerScope",ro:!0},{a:1,n:"_sharedScope",t:4,rt:$n[7].LocalScope,sn:"_sharedScope"},{a:1,n:"_symbols",t:4,rt:$n[0].Dictionary$2(System.String,Kusto.Language.Symbols.Symbol),sn:"_symbols"}]}},$n);$m("Kusto.Language.Binding.ProjectionBuilder",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Add",t:8,pi:[{n:"column",pt:$n[1].ColumnSymbol,ps:0},{n:"baseName",dv:null,o:!0,pt:$n[2].String,ps:1},{n:"replace",dv:!1,o:!0,pt:$n[2].Boolean,ps:2},{n:"doNotRepeat",dv:!1,o:!0,pt:$n[2].Boolean,ps:3}],sn:"Add",rt:$n[1].ColumnSymbol,p:[$n[1].ColumnSymbol,$n[2].String,$n[2].Boolean,$n[2].Boolean]},{a:2,n:"AddRange",t:8,pi:[{n:"columns",pt:$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),ps:0},{n:"declare",dv:!1,o:!0,pt:$n[2].Boolean,ps:1},{n:"doNotRepeat",dv:!1,o:!0,pt:$n[2].Boolean,ps:2}],sn:"AddRange",rt:$n[2].Void,p:[$n[0].IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol),$n[2].Boolean,$n[2].Boolean]},{a:2,n:"CanAdd",t:8,pi:[{n:"column",pt:$n[1].ColumnSymbol,ps:0}],sn:"CanAdd",rt:$n[2].Boolean,p:[$n[1].ColumnSymbol],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[2].Void},{a:2,n:"Declare",t:8,pi:[{n:"column",pt:$n[1].ColumnSymbol,ps:0},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:1},{n:"location",pt:$n[3].SyntaxNode,ps:2},{n:"replace",dv:!1,o:!0,pt:$n[2].Boolean,ps:3}],sn:"Declare",rt:$n[2].Void,p:[$n[1].ColumnSymbol,$n[0].List$1(Kusto.Language.Diagnostic),$n[3].SyntaxNode,$n[2].Boolean]},{a:2,n:"DoNotAdd",t:8,pi:[{n:"column",pt:$n[1].ColumnSymbol,ps:0}],sn:"DoNotAdd",rt:$n[2].Void,p:[$n[1].ColumnSymbol]},{a:2,n:"GetProjection",t:8,sn:"GetProjection",rt:$n[0].IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol)},{a:2,n:"Rename",t:8,pi:[{n:"oldName",pt:$n[2].String,ps:0},{n:"newName",pt:$n[2].String,ps:1},{n:"diagnostics",pt:$n[0].List$1(Kusto.Language.Diagnostic),ps:2},{n:"location",pt:$n[3].SyntaxNode,ps:3}],sn:"Rename",rt:$n[1].ColumnSymbol,p:[$n[2].String,$n[2].String,$n[0].List$1(Kusto.Language.Diagnostic),$n[3].SyntaxNode]},{a:1,n:"_columnIndexMap",t:4,rt:$n[0].Dictionary$2(System.String,System.Int32),sn:"_columnIndexMap",ro:!0},{a:1,n:"_declaredNames",t:4,rt:$n[0].HashSet$1(System.String),sn:"_declaredNames",ro:!0},{a:1,n:"_doNotAdd",t:4,rt:$n[0].HashSet$1(Kusto.Language.Symbols.ColumnSymbol),sn:"_doNotAdd",ro:!0},{a:1,n:"_projection",t:4,rt:$n[0].List$1(Kusto.Language.Symbols.ColumnSymbol),sn:"_projection",ro:!0},{a:1,n:"_uniqueNames",t:4,rt:$n[5].UniqueNameTable,sn:"_uniqueNames",ro:!0}]}},$n)});